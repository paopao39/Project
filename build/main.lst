ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.NVIC_SystemReset,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	NVIC_SystemReset:
  25              	.LFB32:
  26              		.file 2 "Drivers/CMSIS/Include/core_cm0.h"
   1:Drivers/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:Drivers/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm0.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm0.h **** 
   9:Drivers/CMSIS/Include/core_cm0.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm0.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm0.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm0.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm0.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm0.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm0.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm0.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm0.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm0.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm0.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm0.h ****    *
  21:Drivers/CMSIS/Include/core_cm0.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm0.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm0.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm0.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm0.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm0.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm0.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm0.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm0.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm0.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm0.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm0.h ****    ---------------------------------------------------------------------------*/
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 2


  33:Drivers/CMSIS/Include/core_cm0.h **** 
  34:Drivers/CMSIS/Include/core_cm0.h **** 
  35:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm0.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm0.h **** #endif
  40:Drivers/CMSIS/Include/core_cm0.h **** 
  41:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm0.h **** 
  44:Drivers/CMSIS/Include/core_cm0.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm0.h **** 
  46:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm0.h **** #endif
  49:Drivers/CMSIS/Include/core_cm0.h **** 
  50:Drivers/CMSIS/Include/core_cm0.h **** /**
  51:Drivers/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm0.h **** 
  54:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm0.h **** 
  57:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm0.h **** 
  60:Drivers/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm0.h ****  */
  63:Drivers/CMSIS/Include/core_cm0.h **** 
  64:Drivers/CMSIS/Include/core_cm0.h **** 
  65:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm0.h **** /**
  69:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  70:Drivers/CMSIS/Include/core_cm0.h ****   @{
  71:Drivers/CMSIS/Include/core_cm0.h ****  */
  72:Drivers/CMSIS/Include/core_cm0.h **** 
  73:Drivers/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  74:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm0.h **** 
  79:Drivers/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0x00U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm0.h **** 
  81:Drivers/CMSIS/Include/core_cm0.h **** 
  82:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm0.h **** 
  87:Drivers/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 3


  90:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm0.h **** 
  92:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm0.h **** 
  97:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm0.h **** 
 102:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm0.h **** 
 106:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm0.h **** 
 111:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm0.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm0.h **** 
 117:Drivers/CMSIS/Include/core_cm0.h **** #else
 118:Drivers/CMSIS/Include/core_cm0.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm0.h **** #endif
 120:Drivers/CMSIS/Include/core_cm0.h **** 
 121:Drivers/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
 123:Drivers/CMSIS/Include/core_cm0.h **** */
 124:Drivers/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
 125:Drivers/CMSIS/Include/core_cm0.h **** 
 126:Drivers/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
 127:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
 128:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 130:Drivers/CMSIS/Include/core_cm0.h **** 
 131:Drivers/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
 133:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm0.h **** 
 136:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
 137:Drivers/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 140:Drivers/CMSIS/Include/core_cm0.h **** 
 141:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
 142:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
 143:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 145:Drivers/CMSIS/Include/core_cm0.h **** 
 146:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TMS470__ )
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 4


 147:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 148:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 150:Drivers/CMSIS/Include/core_cm0.h **** 
 151:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 152:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 153:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 155:Drivers/CMSIS/Include/core_cm0.h **** 
 156:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 157:Drivers/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 158:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 160:Drivers/CMSIS/Include/core_cm0.h **** 
 161:Drivers/CMSIS/Include/core_cm0.h **** #endif
 162:Drivers/CMSIS/Include/core_cm0.h **** 
 163:Drivers/CMSIS/Include/core_cm0.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:Drivers/CMSIS/Include/core_cm0.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:Drivers/CMSIS/Include/core_cm0.h **** 
 166:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 167:Drivers/CMSIS/Include/core_cm0.h **** }
 168:Drivers/CMSIS/Include/core_cm0.h **** #endif
 169:Drivers/CMSIS/Include/core_cm0.h **** 
 170:Drivers/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 171:Drivers/CMSIS/Include/core_cm0.h **** 
 172:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 173:Drivers/CMSIS/Include/core_cm0.h **** 
 174:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 176:Drivers/CMSIS/Include/core_cm0.h **** 
 177:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 178:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
 179:Drivers/CMSIS/Include/core_cm0.h **** #endif
 180:Drivers/CMSIS/Include/core_cm0.h **** 
 181:Drivers/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 182:Drivers/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 183:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 184:Drivers/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 185:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 186:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 187:Drivers/CMSIS/Include/core_cm0.h **** 
 188:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 189:Drivers/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 190:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 191:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 192:Drivers/CMSIS/Include/core_cm0.h **** 
 193:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 194:Drivers/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 195:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 196:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 197:Drivers/CMSIS/Include/core_cm0.h **** #endif
 198:Drivers/CMSIS/Include/core_cm0.h **** 
 199:Drivers/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 200:Drivers/CMSIS/Include/core_cm0.h **** /**
 201:Drivers/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 202:Drivers/CMSIS/Include/core_cm0.h **** 
 203:Drivers/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 5


 204:Drivers/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
 205:Drivers/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 206:Drivers/CMSIS/Include/core_cm0.h **** */
 207:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 208:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 209:Drivers/CMSIS/Include/core_cm0.h **** #else
 210:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 211:Drivers/CMSIS/Include/core_cm0.h **** #endif
 212:Drivers/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 213:Drivers/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 214:Drivers/CMSIS/Include/core_cm0.h **** 
 215:Drivers/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
 216:Drivers/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 217:Drivers/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 218:Drivers/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 219:Drivers/CMSIS/Include/core_cm0.h **** 
 220:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 221:Drivers/CMSIS/Include/core_cm0.h **** 
 222:Drivers/CMSIS/Include/core_cm0.h **** 
 223:Drivers/CMSIS/Include/core_cm0.h **** 
 224:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 225:Drivers/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 226:Drivers/CMSIS/Include/core_cm0.h ****   Core Register contain:
 227:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register
 228:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 229:Drivers/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 230:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 231:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 232:Drivers/CMSIS/Include/core_cm0.h **** /**
 233:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 234:Drivers/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 235:Drivers/CMSIS/Include/core_cm0.h **** */
 236:Drivers/CMSIS/Include/core_cm0.h **** 
 237:Drivers/CMSIS/Include/core_cm0.h **** /**
 238:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 239:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 240:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 241:Drivers/CMSIS/Include/core_cm0.h ****   @{
 242:Drivers/CMSIS/Include/core_cm0.h ****  */
 243:Drivers/CMSIS/Include/core_cm0.h **** 
 244:Drivers/CMSIS/Include/core_cm0.h **** /**
 245:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 246:Drivers/CMSIS/Include/core_cm0.h ****  */
 247:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 248:Drivers/CMSIS/Include/core_cm0.h **** {
 249:Drivers/CMSIS/Include/core_cm0.h ****   struct
 250:Drivers/CMSIS/Include/core_cm0.h ****   {
 251:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 252:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 253:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 254:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 255:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 256:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 257:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 258:Drivers/CMSIS/Include/core_cm0.h **** } APSR_Type;
 259:Drivers/CMSIS/Include/core_cm0.h **** 
 260:Drivers/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 6


 261:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 262:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 263:Drivers/CMSIS/Include/core_cm0.h **** 
 264:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 265:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 266:Drivers/CMSIS/Include/core_cm0.h **** 
 267:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 268:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 269:Drivers/CMSIS/Include/core_cm0.h **** 
 270:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 271:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 272:Drivers/CMSIS/Include/core_cm0.h **** 
 273:Drivers/CMSIS/Include/core_cm0.h **** 
 274:Drivers/CMSIS/Include/core_cm0.h **** /**
 275:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 276:Drivers/CMSIS/Include/core_cm0.h ****  */
 277:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 278:Drivers/CMSIS/Include/core_cm0.h **** {
 279:Drivers/CMSIS/Include/core_cm0.h ****   struct
 280:Drivers/CMSIS/Include/core_cm0.h ****   {
 281:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 282:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 283:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 284:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 285:Drivers/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 286:Drivers/CMSIS/Include/core_cm0.h **** 
 287:Drivers/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 288:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 289:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 290:Drivers/CMSIS/Include/core_cm0.h **** 
 291:Drivers/CMSIS/Include/core_cm0.h **** 
 292:Drivers/CMSIS/Include/core_cm0.h **** /**
 293:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 294:Drivers/CMSIS/Include/core_cm0.h ****  */
 295:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 296:Drivers/CMSIS/Include/core_cm0.h **** {
 297:Drivers/CMSIS/Include/core_cm0.h ****   struct
 298:Drivers/CMSIS/Include/core_cm0.h ****   {
 299:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 300:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 301:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 302:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 303:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 304:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 305:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 306:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 307:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 308:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 309:Drivers/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 310:Drivers/CMSIS/Include/core_cm0.h **** 
 311:Drivers/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
 312:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 313:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 314:Drivers/CMSIS/Include/core_cm0.h **** 
 315:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 316:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 317:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 7


 318:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 319:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 320:Drivers/CMSIS/Include/core_cm0.h **** 
 321:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 322:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 323:Drivers/CMSIS/Include/core_cm0.h **** 
 324:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 325:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 326:Drivers/CMSIS/Include/core_cm0.h **** 
 327:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 328:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 329:Drivers/CMSIS/Include/core_cm0.h **** 
 330:Drivers/CMSIS/Include/core_cm0.h **** 
 331:Drivers/CMSIS/Include/core_cm0.h **** /**
 332:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 333:Drivers/CMSIS/Include/core_cm0.h ****  */
 334:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 335:Drivers/CMSIS/Include/core_cm0.h **** {
 336:Drivers/CMSIS/Include/core_cm0.h ****   struct
 337:Drivers/CMSIS/Include/core_cm0.h ****   {
 338:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 339:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 340:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 341:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 342:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 343:Drivers/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 344:Drivers/CMSIS/Include/core_cm0.h **** 
 345:Drivers/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 346:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 347:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 348:Drivers/CMSIS/Include/core_cm0.h **** 
 349:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
 350:Drivers/CMSIS/Include/core_cm0.h **** 
 351:Drivers/CMSIS/Include/core_cm0.h **** 
 352:Drivers/CMSIS/Include/core_cm0.h **** /**
 353:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 354:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 355:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 356:Drivers/CMSIS/Include/core_cm0.h ****   @{
 357:Drivers/CMSIS/Include/core_cm0.h ****  */
 358:Drivers/CMSIS/Include/core_cm0.h **** 
 359:Drivers/CMSIS/Include/core_cm0.h **** /**
 360:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 361:Drivers/CMSIS/Include/core_cm0.h ****  */
 362:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 363:Drivers/CMSIS/Include/core_cm0.h **** {
 364:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 365:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 366:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 367:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 368:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 369:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 370:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 371:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
 372:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 373:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 374:Drivers/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 8


 375:Drivers/CMSIS/Include/core_cm0.h **** 
 376:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 377:Drivers/CMSIS/Include/core_cm0.h **** 
 378:Drivers/CMSIS/Include/core_cm0.h **** 
 379:Drivers/CMSIS/Include/core_cm0.h **** /**
 380:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 381:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 382:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 383:Drivers/CMSIS/Include/core_cm0.h ****   @{
 384:Drivers/CMSIS/Include/core_cm0.h ****  */
 385:Drivers/CMSIS/Include/core_cm0.h **** 
 386:Drivers/CMSIS/Include/core_cm0.h **** /**
 387:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 388:Drivers/CMSIS/Include/core_cm0.h ****  */
 389:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 390:Drivers/CMSIS/Include/core_cm0.h **** {
 391:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 392:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 393:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
 394:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 395:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 396:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 397:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 398:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 399:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 400:Drivers/CMSIS/Include/core_cm0.h **** } SCB_Type;
 401:Drivers/CMSIS/Include/core_cm0.h **** 
 402:Drivers/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 403:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 405:Drivers/CMSIS/Include/core_cm0.h **** 
 406:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 408:Drivers/CMSIS/Include/core_cm0.h **** 
 409:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 411:Drivers/CMSIS/Include/core_cm0.h **** 
 412:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 414:Drivers/CMSIS/Include/core_cm0.h **** 
 415:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 416:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm0.h **** 
 418:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 419:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 421:Drivers/CMSIS/Include/core_cm0.h **** 
 422:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 424:Drivers/CMSIS/Include/core_cm0.h **** 
 425:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0.h **** 
 428:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0.h **** 
 431:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 9


 432:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0.h **** 
 434:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 435:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 436:Drivers/CMSIS/Include/core_cm0.h **** 
 437:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 438:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 439:Drivers/CMSIS/Include/core_cm0.h **** 
 440:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 442:Drivers/CMSIS/Include/core_cm0.h **** 
 443:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm0.h **** 
 446:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 447:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 448:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 449:Drivers/CMSIS/Include/core_cm0.h **** 
 450:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 451:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 452:Drivers/CMSIS/Include/core_cm0.h **** 
 453:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 454:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 455:Drivers/CMSIS/Include/core_cm0.h **** 
 456:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 457:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 458:Drivers/CMSIS/Include/core_cm0.h **** 
 459:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm0.h **** 
 462:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 463:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 465:Drivers/CMSIS/Include/core_cm0.h **** 
 466:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 468:Drivers/CMSIS/Include/core_cm0.h **** 
 469:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 471:Drivers/CMSIS/Include/core_cm0.h **** 
 472:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 473:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 474:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm0.h **** 
 476:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 477:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm0.h **** 
 479:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 480:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm0.h **** 
 483:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 484:Drivers/CMSIS/Include/core_cm0.h **** 
 485:Drivers/CMSIS/Include/core_cm0.h **** 
 486:Drivers/CMSIS/Include/core_cm0.h **** /**
 487:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 488:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 10


 489:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 490:Drivers/CMSIS/Include/core_cm0.h ****   @{
 491:Drivers/CMSIS/Include/core_cm0.h ****  */
 492:Drivers/CMSIS/Include/core_cm0.h **** 
 493:Drivers/CMSIS/Include/core_cm0.h **** /**
 494:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 495:Drivers/CMSIS/Include/core_cm0.h ****  */
 496:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 497:Drivers/CMSIS/Include/core_cm0.h **** {
 498:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 499:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 500:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 501:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 502:Drivers/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 503:Drivers/CMSIS/Include/core_cm0.h **** 
 504:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 505:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 506:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 507:Drivers/CMSIS/Include/core_cm0.h **** 
 508:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 509:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 510:Drivers/CMSIS/Include/core_cm0.h **** 
 511:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 512:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 513:Drivers/CMSIS/Include/core_cm0.h **** 
 514:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 515:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 516:Drivers/CMSIS/Include/core_cm0.h **** 
 517:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
 518:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 519:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 520:Drivers/CMSIS/Include/core_cm0.h **** 
 521:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 522:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 523:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 524:Drivers/CMSIS/Include/core_cm0.h **** 
 525:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 526:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 527:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 528:Drivers/CMSIS/Include/core_cm0.h **** 
 529:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 530:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 531:Drivers/CMSIS/Include/core_cm0.h **** 
 532:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 533:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 534:Drivers/CMSIS/Include/core_cm0.h **** 
 535:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 536:Drivers/CMSIS/Include/core_cm0.h **** 
 537:Drivers/CMSIS/Include/core_cm0.h **** 
 538:Drivers/CMSIS/Include/core_cm0.h **** /**
 539:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 540:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 541:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 542:Drivers/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 543:Drivers/CMSIS/Include/core_cm0.h ****   @{
 544:Drivers/CMSIS/Include/core_cm0.h ****  */
 545:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 11


 546:Drivers/CMSIS/Include/core_cm0.h **** 
 547:Drivers/CMSIS/Include/core_cm0.h **** 
 548:Drivers/CMSIS/Include/core_cm0.h **** /**
 549:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 550:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 551:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 552:Drivers/CMSIS/Include/core_cm0.h ****   @{
 553:Drivers/CMSIS/Include/core_cm0.h ****  */
 554:Drivers/CMSIS/Include/core_cm0.h **** 
 555:Drivers/CMSIS/Include/core_cm0.h **** /**
 556:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 557:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 558:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field.
 559:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 560:Drivers/CMSIS/Include/core_cm0.h **** */
 561:Drivers/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
 562:Drivers/CMSIS/Include/core_cm0.h **** 
 563:Drivers/CMSIS/Include/core_cm0.h **** /**
 564:Drivers/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 565:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 566:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register.
 567:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 568:Drivers/CMSIS/Include/core_cm0.h **** */
 569:Drivers/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
 570:Drivers/CMSIS/Include/core_cm0.h **** 
 571:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 572:Drivers/CMSIS/Include/core_cm0.h **** 
 573:Drivers/CMSIS/Include/core_cm0.h **** 
 574:Drivers/CMSIS/Include/core_cm0.h **** /**
 575:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 576:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 577:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 578:Drivers/CMSIS/Include/core_cm0.h ****   @{
 579:Drivers/CMSIS/Include/core_cm0.h ****  */
 580:Drivers/CMSIS/Include/core_cm0.h **** 
 581:Drivers/CMSIS/Include/core_cm0.h **** /* Memory mapping of Cortex-M0 Hardware */
 582:Drivers/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 583:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 584:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 585:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 586:Drivers/CMSIS/Include/core_cm0.h **** 
 587:Drivers/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 588:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 589:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 590:Drivers/CMSIS/Include/core_cm0.h **** 
 591:Drivers/CMSIS/Include/core_cm0.h **** 
 592:Drivers/CMSIS/Include/core_cm0.h **** /*@} */
 593:Drivers/CMSIS/Include/core_cm0.h **** 
 594:Drivers/CMSIS/Include/core_cm0.h **** 
 595:Drivers/CMSIS/Include/core_cm0.h **** 
 596:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 597:Drivers/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 598:Drivers/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 599:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
 600:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 601:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 602:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 12


 603:Drivers/CMSIS/Include/core_cm0.h **** /**
 604:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 605:Drivers/CMSIS/Include/core_cm0.h **** */
 606:Drivers/CMSIS/Include/core_cm0.h **** 
 607:Drivers/CMSIS/Include/core_cm0.h **** 
 608:Drivers/CMSIS/Include/core_cm0.h **** 
 609:Drivers/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 610:Drivers/CMSIS/Include/core_cm0.h **** /**
 611:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 612:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 613:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 614:Drivers/CMSIS/Include/core_cm0.h ****   @{
 615:Drivers/CMSIS/Include/core_cm0.h ****  */
 616:Drivers/CMSIS/Include/core_cm0.h **** 
 617:Drivers/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 618:Drivers/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 619:Drivers/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 620:Drivers/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 621:Drivers/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 622:Drivers/CMSIS/Include/core_cm0.h **** 
 623:Drivers/CMSIS/Include/core_cm0.h **** 
 624:Drivers/CMSIS/Include/core_cm0.h **** /**
 625:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Enable External Interrupt
 626:Drivers/CMSIS/Include/core_cm0.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
 627:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 628:Drivers/CMSIS/Include/core_cm0.h ****  */
 629:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 630:Drivers/CMSIS/Include/core_cm0.h **** {
 631:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 632:Drivers/CMSIS/Include/core_cm0.h **** }
 633:Drivers/CMSIS/Include/core_cm0.h **** 
 634:Drivers/CMSIS/Include/core_cm0.h **** 
 635:Drivers/CMSIS/Include/core_cm0.h **** /**
 636:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Disable External Interrupt
 637:Drivers/CMSIS/Include/core_cm0.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
 638:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 639:Drivers/CMSIS/Include/core_cm0.h ****  */
 640:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 641:Drivers/CMSIS/Include/core_cm0.h **** {
 642:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 643:Drivers/CMSIS/Include/core_cm0.h **** }
 644:Drivers/CMSIS/Include/core_cm0.h **** 
 645:Drivers/CMSIS/Include/core_cm0.h **** 
 646:Drivers/CMSIS/Include/core_cm0.h **** /**
 647:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Pending Interrupt
 648:Drivers/CMSIS/Include/core_cm0.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
 649:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 650:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt status is not pending.
 651:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt status is pending.
 652:Drivers/CMSIS/Include/core_cm0.h ****  */
 653:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 654:Drivers/CMSIS/Include/core_cm0.h **** {
 655:Drivers/CMSIS/Include/core_cm0.h ****   return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL
 656:Drivers/CMSIS/Include/core_cm0.h **** }
 657:Drivers/CMSIS/Include/core_cm0.h **** 
 658:Drivers/CMSIS/Include/core_cm0.h **** 
 659:Drivers/CMSIS/Include/core_cm0.h **** /**
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 13


 660:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Pending Interrupt
 661:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the pending bit of an external interrupt.
 662:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
 663:Drivers/CMSIS/Include/core_cm0.h ****  */
 664:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 665:Drivers/CMSIS/Include/core_cm0.h **** {
 666:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 667:Drivers/CMSIS/Include/core_cm0.h **** }
 668:Drivers/CMSIS/Include/core_cm0.h **** 
 669:Drivers/CMSIS/Include/core_cm0.h **** 
 670:Drivers/CMSIS/Include/core_cm0.h **** /**
 671:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Clear Pending Interrupt
 672:Drivers/CMSIS/Include/core_cm0.h ****   \details Clears the pending bit of an external interrupt.
 673:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 674:Drivers/CMSIS/Include/core_cm0.h ****  */
 675:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 676:Drivers/CMSIS/Include/core_cm0.h **** {
 677:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 678:Drivers/CMSIS/Include/core_cm0.h **** }
 679:Drivers/CMSIS/Include/core_cm0.h **** 
 680:Drivers/CMSIS/Include/core_cm0.h **** 
 681:Drivers/CMSIS/Include/core_cm0.h **** /**
 682:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Interrupt Priority
 683:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the priority of an interrupt.
 684:Drivers/CMSIS/Include/core_cm0.h ****   \note    The priority cannot be set for every core interrupt.
 685:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 686:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]  priority  Priority to set.
 687:Drivers/CMSIS/Include/core_cm0.h ****  */
 688:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 689:Drivers/CMSIS/Include/core_cm0.h **** {
 690:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) < 0)
 691:Drivers/CMSIS/Include/core_cm0.h ****   {
 692:Drivers/CMSIS/Include/core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 693:Drivers/CMSIS/Include/core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 694:Drivers/CMSIS/Include/core_cm0.h ****   }
 695:Drivers/CMSIS/Include/core_cm0.h ****   else
 696:Drivers/CMSIS/Include/core_cm0.h ****   {
 697:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 698:Drivers/CMSIS/Include/core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 699:Drivers/CMSIS/Include/core_cm0.h ****   }
 700:Drivers/CMSIS/Include/core_cm0.h **** }
 701:Drivers/CMSIS/Include/core_cm0.h **** 
 702:Drivers/CMSIS/Include/core_cm0.h **** 
 703:Drivers/CMSIS/Include/core_cm0.h **** /**
 704:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Interrupt Priority
 705:Drivers/CMSIS/Include/core_cm0.h ****   \details Reads the priority of an interrupt.
 706:Drivers/CMSIS/Include/core_cm0.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
 707:Drivers/CMSIS/Include/core_cm0.h ****            or negative to specify an internal (core) interrupt.
 708:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]   IRQn  Interrupt number.
 709:Drivers/CMSIS/Include/core_cm0.h ****   \return             Interrupt Priority.
 710:Drivers/CMSIS/Include/core_cm0.h ****                       Value is aligned automatically to the implemented priority bits of the microc
 711:Drivers/CMSIS/Include/core_cm0.h ****  */
 712:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
 713:Drivers/CMSIS/Include/core_cm0.h **** {
 714:Drivers/CMSIS/Include/core_cm0.h **** 
 715:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) < 0)
 716:Drivers/CMSIS/Include/core_cm0.h ****   {
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 14


 717:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((SCB->SHP[_SHP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 718:Drivers/CMSIS/Include/core_cm0.h ****   }
 719:Drivers/CMSIS/Include/core_cm0.h ****   else
 720:Drivers/CMSIS/Include/core_cm0.h ****   {
 721:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->IP[ _IP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 722:Drivers/CMSIS/Include/core_cm0.h ****   }
 723:Drivers/CMSIS/Include/core_cm0.h **** }
 724:Drivers/CMSIS/Include/core_cm0.h **** 
 725:Drivers/CMSIS/Include/core_cm0.h **** 
 726:Drivers/CMSIS/Include/core_cm0.h **** /**
 727:Drivers/CMSIS/Include/core_cm0.h ****   \brief   System Reset
 728:Drivers/CMSIS/Include/core_cm0.h ****   \details Initiates a system reset request to reset the MCU.
 729:Drivers/CMSIS/Include/core_cm0.h ****  */
 730:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_SystemReset(void)
 731:Drivers/CMSIS/Include/core_cm0.h **** {
  27              		.loc 2 731 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 732:Drivers/CMSIS/Include/core_cm0.h ****   __DSB();                                                          /* Ensure all outstanding memor
  33              		.loc 2 732 3 view .LVU1
  34              	.LBB8:
  35              	.LBI8:
  36              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 15


  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 16


  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 17


 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 18


 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 19


 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 20


 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 21


 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
  37              		.loc 3 427 53 view .LVU2
  38              	.LBB9:
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 22


 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  39              		.loc 3 429 3 view .LVU3
  40              		.syntax divided
  41              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 BFF34F8F 		dsb 0xF
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.LBE9:
  47              	.LBE8:
 733:Drivers/CMSIS/Include/core_cm0.h ****                                                                        buffered write are completed
 734:Drivers/CMSIS/Include/core_cm0.h ****   SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
  48              		.loc 2 734 3 view .LVU4
  49              		.loc 2 734 15 is_stmt 0 view .LVU5
  50 0004 034B     		ldr	r3, .L3
  51 0006 044A     		ldr	r2, .L3+4
  52 0008 DA60     		str	r2, [r3, #12]
 735:Drivers/CMSIS/Include/core_cm0.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);
 736:Drivers/CMSIS/Include/core_cm0.h ****   __DSB();                                                          /* Ensure completion of memory 
  53              		.loc 2 736 3 is_stmt 1 view .LVU6
  54              	.LBB10:
  55              	.LBI10:
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  56              		.loc 3 427 53 view .LVU7
  57              	.LBB11:
  58              		.loc 3 429 3 view .LVU8
  59              		.syntax divided
  60              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  61 000a BFF34F8F 		dsb 0xF
  62              	@ 0 "" 2
  63              		.thumb
  64              		.syntax unified
  65              	.L2:
  66              	.LBE11:
  67              	.LBE10:
 737:Drivers/CMSIS/Include/core_cm0.h **** 
 738:Drivers/CMSIS/Include/core_cm0.h ****   for(;;)                                                           /* wait until reset */
  68              		.loc 2 738 3 view .LVU9
 739:Drivers/CMSIS/Include/core_cm0.h ****   {
 740:Drivers/CMSIS/Include/core_cm0.h ****     __NOP();
  69              		.loc 2 740 5 discriminator 1 view .LVU10
  70              	.LBB12:
  71              	.LBI12:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  72              		.loc 3 373 53 view .LVU11
  73              	.LBB13:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  74              		.loc 3 375 3 view .LVU12
  75              		.syntax divided
  76              	@ 375 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  77 000e C046     		nop
  78              	@ 0 "" 2
  79              		.thumb
  80              		.syntax unified
  81              	.LBE13:
  82              	.LBE12:
 738:Drivers/CMSIS/Include/core_cm0.h ****   {
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 23


  83              		.loc 2 738 3 view .LVU13
  84 0010 FDE7     		b	.L2
  85              	.L4:
  86 0012 C046     		.align	2
  87              	.L3:
  88 0014 00ED00E0 		.word	-536810240
  89 0018 0400FA05 		.word	100270084
  90              		.cfi_endproc
  91              	.LFE32:
  93              		.section	.text.MX_GPIO_Init,"ax",%progbits
  94              		.align	1
  95              		.syntax unified
  96              		.code	16
  97              		.thumb_func
  99              	MX_GPIO_Init:
 100              	.LFB57:
   1:Src/main.c    **** 
   2:Src/main.c    **** /*
   3:Src/main.c    ****  * Otter-Iron  -  Stm32f072 based soldering iron.
   4:Src/main.c    ****  * Copyright (C) 2020 Jan Henrik Hemsing
   5:Src/main.c    ****  *
   6:Src/main.c    ****  * This program is free software: you can redistribute it and/or modify it
   7:Src/main.c    ****  * under the terms of the GNU General Public License as published by the Free
   8:Src/main.c    ****  * Software Foundation, either version 3 of the License, or (at your option)
   9:Src/main.c    ****  * any later version.
  10:Src/main.c    ****  *
  11:Src/main.c    ****  * This program is distributed in the hope that it will be useful, but WITHOUT
  12:Src/main.c    ****  * ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or
  13:Src/main.c    ****  * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
  14:Src/main.c    ****  * more details.
  15:Src/main.c    ****  *
  16:Src/main.c    ****  * You should have received a copy of the GNU General Public License along with
  17:Src/main.c    ****  * this program.  If not, see <http://www.gnu.org/licenses/>.
  18:Src/main.c    ****  */
  19:Src/main.c    **** 
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include <math.h>
  22:Src/main.c    **** #include "font.h"
  23:Src/main.c    **** #include "stusb4500.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** // Enable serial printing via CDC, quite buggy
  26:Src/main.c    **** //#define ENABLESERIAL
  27:Src/main.c    **** // Enable Current display, shows up after a few millisecconds instead of temp-target
  28:Src/main.c    **** //#define DISPLAYCURRENT
  29:Src/main.c    **** // Enable Current limiting
  30:Src/main.c    **** //#define CURRENTLIM
  31:Src/main.c    **** // Enable check of USB PD profile capable before beforing iron
  32:Src/main.c    **** #define CHECKUSBPD
  33:Src/main.c    **** 
  34:Src/main.c    **** #define FILT(a, b, c) ((a) * (c) + (b) * ((1.0f) - (c)))
  35:Src/main.c    **** #define CLAMP(x, low, high) (((x) > (high)) ? (high) : (((x) < (low)) ? (low) : (x)))
  36:Src/main.c    **** 
  37:Src/main.c    **** #define TTIP_AVG_FILTER 0.9f
  38:Src/main.c    **** #define DISP_AVG_FILTER 0.9f
  39:Src/main.c    **** 
  40:Src/main.c    **** #define MIN_DUTY 0
  41:Src/main.c    **** uint16_t MAX_DUTY = 3990;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 24


  42:Src/main.c    **** 
  43:Src/main.c    **** #define MIN_VOLTAGE 15.0f
  44:Src/main.c    **** #define MIN_CURRENT 1.0f
  45:Src/main.c    **** 
  46:Src/main.c    **** ADC_HandleTypeDef hadc;
  47:Src/main.c    **** DMA_HandleTypeDef hdma_adc;
  48:Src/main.c    **** 
  49:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  50:Src/main.c    **** I2C_HandleTypeDef hi2c2;
  51:Src/main.c    **** 
  52:Src/main.c    **** TIM_HandleTypeDef htim1;
  53:Src/main.c    **** TIM_HandleTypeDef htim3;
  54:Src/main.c    **** 
  55:Src/main.c    **** IWDG_HandleTypeDef hiwdg;
  56:Src/main.c    **** 
  57:Src/main.c    **** USBD_HandleTypeDef USBD_Device;
  58:Src/main.c    **** 
  59:Src/main.c    **** void SystemClock_Config(void);
  60:Src/main.c    **** static void MX_GPIO_Init(void);
  61:Src/main.c    **** static void MX_ADC_Init(void);
  62:Src/main.c    **** static void MX_DMA_Init(void);
  63:Src/main.c    **** static void MX_I2C1_Init(void);
  64:Src/main.c    **** static void MX_I2C2_Init(void);
  65:Src/main.c    **** static void MX_TIM1_Init(void);
  66:Src/main.c    **** static void TIM3_Init(void);
  67:Src/main.c    **** static void MX_IWDG_Init(void);
  68:Src/main.c    **** 
  69:Src/main.c    **** void reg(void);
  70:Src/main.c    **** void disp_init(void);
  71:Src/main.c    **** void refresh(void);
  72:Src/main.c    **** void clear_screen(void);
  73:Src/main.c    **** void set_screen(void);
  74:Src/main.c    **** void write_pixel(int16_t x, int16_t y, uint8_t color);
  75:Src/main.c    **** void draw_char(unsigned char  c, uint8_t x, uint8_t y, uint8_t brightness);
  76:Src/main.c    **** void draw_string(const unsigned char * str, uint8_t x, uint8_t y, uint8_t brightness);
  77:Src/main.c    **** void draw_v_line(int16_t x, int16_t y, uint16_t h, uint8_t color);
  78:Src/main.c    **** void USB_printfloat(float _buf);
  79:Src/main.c    **** 
  80:Src/main.c    **** struct status_t{
  81:Src/main.c    ****   float ttip;
  82:Src/main.c    ****   float ttipavg;
  83:Src/main.c    ****   float uin;
  84:Src/main.c    ****   float iin;
  85:Src/main.c    ****   float iinavg;
  86:Src/main.c    ****   float imax;
  87:Src/main.c    ****   float tref;
  88:Src/main.c    ****   uint8_t writeFlash;
  89:Src/main.c    ****   uint8_t button[2];
  90:Src/main.c    ****   float drawlineavg;
  91:Src/main.c    **** #ifdef DISPLAYCURRENT
  92:Src/main.c    ****   uint8_t timeout;
  93:Src/main.c    **** #endif
  94:Src/main.c    ****   uint8_t active;
  95:Src/main.c    ****   uint8_t pdo;
  96:Src/main.c    **** }s = {.writeFlash = 0, .imax = 1.1f};
  97:Src/main.c    **** 
  98:Src/main.c    **** struct reg_t{
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 25


  99:Src/main.c    ****   float target;
 100:Src/main.c    ****   float error;
 101:Src/main.c    ****   float errorprior;
 102:Src/main.c    ****   float ierror;
 103:Src/main.c    ****   float imax;
 104:Src/main.c    ****   float derror;
 105:Src/main.c    ****   int16_t duty;
 106:Src/main.c    ****   float cycletime;
 107:Src/main.c    ****   float Kp;
 108:Src/main.c    ****   float Ki;
 109:Src/main.c    ****   float Kd;
 110:Src/main.c    ****   float deadband;
 111:Src/main.c    **** }r = {.Kp = 0.3f,.Ki = 0.13f,.Kd = 0.3f,.cycletime = 0.1f,.imax=200.0f,.target=220.0f,.deadband=12.
 112:Src/main.c    **** 
 113:Src/main.c    **** struct tipcal_t{
 114:Src/main.c    ****   float offset;
 115:Src/main.c    ****   float coefficient;
 116:Src/main.c    **** } tipcal = {.offset = 120, .coefficient = 92};
 117:Src/main.c    **** 
 118:Src/main.c    **** static uint16_t ADC_raw[4];
 119:Src/main.c    **** 
 120:Src/main.c    **** extern uint8_t UserTxBuffer[APP_TX_DATA_SIZE];/* Received Data over UART (CDC interface) are stored
 121:Src/main.c    **** uint32_t sendDataUSB;
 122:Src/main.c    **** 
 123:Src/main.c    **** const unsigned char* dfu_string = (unsigned char*) "dfu dfu dfu dfu";
 124:Src/main.c    **** const unsigned char* otter_string = (unsigned char*) "Otter-Iron";
 125:Src/main.c    **** const unsigned char* by_string = (unsigned char*) "by Jana Marie";
 126:Src/main.c    **** 
 127:Src/main.c    **** int main(void)
 128:Src/main.c    **** {
 129:Src/main.c    ****   HAL_Init();
 130:Src/main.c    **** 
 131:Src/main.c    ****   SystemClock_Config();
 132:Src/main.c    **** 
 133:Src/main.c    ****   MX_GPIO_Init();
 134:Src/main.c    ****   MX_DMA_Init();
 135:Src/main.c    ****   MX_ADC_Init();
 136:Src/main.c    ****   MX_I2C1_Init();
 137:Src/main.c    ****   MX_I2C2_Init();
 138:Src/main.c    ****   MX_TIM1_Init();
 139:Src/main.c    ****   TIM3_Init();
 140:Src/main.c    **** 
 141:Src/main.c    ****   // setup STUSB4500 PD requests before starting controller IT
 142:Src/main.c    ****   stusb_update_pdo(1, 5000, 500); // allows comms on standard 5 V
 143:Src/main.c    ****   // 30 W and 80 W - ensures iron is well behaved and enumerates PD profile before drawing it
 144:Src/main.c    ****   stusb_update_pdo(2, 15000, 1500);
 145:Src/main.c    ****   stusb_update_pdo(3, 20000, 2000);
 146:Src/main.c    ****   stusb_set_valid_pdo(3);
 147:Src/main.c    **** 
 148:Src/main.c    ****   HAL_Delay(50);
 149:Src/main.c    ****   disp_init();
 150:Src/main.c    ****   HAL_Delay(150);
 151:Src/main.c    ****   clear_screen();
 152:Src/main.c    **** 
 153:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 154:Src/main.c    ****   HAL_TIM_OC_Start(&htim1, TIM_CHANNEL_4);
 155:Src/main.c    **** 
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 26


 156:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc, (uint32_t *)ADC_raw, 4);
 157:Src/main.c    **** 
 158:Src/main.c    ****   // DFU bootloader
 159:Src/main.c    ****   if(HAL_GPIO_ReadPin(GPIOA,B1_Pin) && HAL_GPIO_ReadPin(GPIOA,B2_Pin)){
 160:Src/main.c    ****     draw_string(dfu_string, 1, 1 ,1);
 161:Src/main.c    ****     draw_string(dfu_string, 1, 8 ,1);
 162:Src/main.c    ****     refresh();
 163:Src/main.c    ****     HAL_Delay(40);
 164:Src/main.c    ****     *((unsigned long *)0x20003FF0) = 0xDEADBEEF;
 165:Src/main.c    ****     NVIC_SystemReset();
 166:Src/main.c    ****   } else {
 167:Src/main.c    ****     draw_string(otter_string, 15, 1 ,1);
 168:Src/main.c    ****     draw_string(by_string, 10, 9 ,1);
 169:Src/main.c    ****     refresh();
 170:Src/main.c    **** #ifdef ENABLESERIAL
 171:Src/main.c    ****     //start USB CDC
 172:Src/main.c    ****     USBD_Init(&USBD_Device, &VCP_Desc, 0);
 173:Src/main.c    ****     USBD_RegisterClass(&USBD_Device, &USBD_CDC);
 174:Src/main.c    ****     USBD_CDC_RegisterInterface(&USBD_Device, &USBD_CDC_fops);
 175:Src/main.c    ****     HAL_TIM_Base_Start_IT(&htim3);
 176:Src/main.c    ****     USBD_Start(&USBD_Device);
 177:Src/main.c    **** #endif
 178:Src/main.c    **** #ifdef DISPLAYCURRENT
 179:Src/main.c    ****       s.timeout = 20;
 180:Src/main.c    **** #endif
 181:Src/main.c    **** #ifdef CHECKUSBPD
 182:Src/main.c    ****     unsigned char line1[22];
 183:Src/main.c    ****     unsigned char line2[22];
 184:Src/main.c    ****     STUSB_GEN1S_RDO_REG_STATUS_RegTypeDef Nego_RDO;
 185:Src/main.c    **** 
 186:Src/main.c    ****       if (stusb_read_rdo(&Nego_RDO) == HAL_OK && Nego_RDO.b.Object_Pos != 0) {
 187:Src/main.c    ****         s.imax = (float) Nego_RDO.b.MaxCurrent / 100.0;
 188:Src/main.c    ****         s.pdo = Nego_RDO.b.Object_Pos;
 189:Src/main.c    ****       } else {
 190:Src/main.c    ****         stusb_update_pdo(2, 9000, 900);
 191:Src/main.c    ****         stusb_update_pdo(3, 12000, 1000);
 192:Src/main.c    ****         stusb_soft_reset();
 193:Src/main.c    ****         HAL_Delay(300);
 194:Src/main.c    ****         if (stusb_read_rdo(&Nego_RDO) == HAL_OK) {
 195:Src/main.c    ****           s.imax = (float) Nego_RDO.b.MaxCurrent / 100.0;
 196:Src/main.c    ****           s.pdo = Nego_RDO.b.Object_Pos;
 197:Src/main.c    ****         } else {
 198:Src/main.c    ****           s.pdo = 0;
 199:Src/main.c    ****         }
 200:Src/main.c    ****       }
 201:Src/main.c    **** 
 202:Src/main.c    ****     if (s.pdo > 0) {
 203:Src/main.c    ****       sprintf((char * restrict) line1, "PD %s %1d", s.pdo > 3 ? "Adjust" : "Profile", s.pdo);
 204:Src/main.c    ****       sprintf((char * restrict) line2, "%1d.%1d A %2d W", (uint16_t)s.imax,(uint16_t)((s.imax-(uint
 205:Src/main.c    ****     } else {
 206:Src/main.c    ****       sprintf((char * restrict) line1, "USB !USB-PD");
 207:Src/main.c    ****       sprintf((char * restrict) line2, "Iron Disabled");
 208:Src/main.c    ****     }
 209:Src/main.c    ****     clear_screen();
 210:Src/main.c    ****     draw_string(line1, 10, 1 ,1);
 211:Src/main.c    ****     draw_string(line2, 10, 9 ,1);
 212:Src/main.c    ****     refresh();
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 27


 213:Src/main.c    ****     HAL_Delay(1000);
 214:Src/main.c    **** #endif
 215:Src/main.c    ****   }
 216:Src/main.c    **** 
 217:Src/main.c    ****   HAL_Delay(1000);
 218:Src/main.c    ****   MX_IWDG_Init();
 219:Src/main.c    **** 
 220:Src/main.c    ****   r.target = *((uint16_t *) 0x0800e400);
 221:Src/main.c    ****   if(r.target > 400) r.target = 220;  //initial temp set
 222:Src/main.c    **** 
 223:Src/main.c    ****   while (1)
 224:Src/main.c    ****   {
 225:Src/main.c    ****     HAL_Delay(50);
 226:Src/main.c    **** 
 227:Src/main.c    ****     //UI
 228:Src/main.c    ****     s.button[0] = HAL_GPIO_ReadPin(GPIOA,B1_Pin);
 229:Src/main.c    ****     s.button[1] = HAL_GPIO_ReadPin(GPIOA,B2_Pin) | HAL_GPIO_ReadPin(GPIOC, B1_1_Pin);
 230:Src/main.c    **** 
 231:Src/main.c    ****     if(s.button[0] == 1){
 232:Src/main.c    ****       r.target -= 5;
 233:Src/main.c    ****       s.writeFlash = 1;
 234:Src/main.c    ****       HAL_Delay(40);
 235:Src/main.c    ****     }
 236:Src/main.c    **** 
 237:Src/main.c    ****     if(s.button[1] == 1){
 238:Src/main.c    ****       r.target += 5;
 239:Src/main.c    ****       s.writeFlash = 1;
 240:Src/main.c    ****       HAL_Delay(40);
 241:Src/main.c    ****     }
 242:Src/main.c    **** 
 243:Src/main.c    ****     r.target = CLAMP(r.target, 20, 400);
 244:Src/main.c    **** 
 245:Src/main.c    ****     if(s.writeFlash == 1){
 246:Src/main.c    ****       HAL_FLASH_Unlock();
 247:Src/main.c    ****       FLASH->CR |= FLASH_CR_PER;
 248:Src/main.c    ****       FLASH->AR = 0x0800e400;
 249:Src/main.c    ****       FLASH->CR |= FLASH_CR_STRT;
 250:Src/main.c    ****       while ((FLASH->SR & FLASH_SR_BSY) != 0){}
 251:Src/main.c    ****       if ((FLASH->SR & FLASH_SR_EOP) != 0){
 252:Src/main.c    ****         FLASH->SR |= FLASH_SR_EOP;
 253:Src/main.c    ****         FLASH->CR &= ~FLASH_CR_PER;
 254:Src/main.c    ****         HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, 0x0800e400, (uint16_t)r.target);
 255:Src/main.c    ****         HAL_FLASH_Lock();
 256:Src/main.c    ****         s.writeFlash = 0;
 257:Src/main.c    ****       }
 258:Src/main.c    ****       #ifdef DISPLAYCURRENT
 259:Src/main.c    ****             s.timeout = 12;
 260:Src/main.c    ****       #endif
 261:Src/main.c    ****     }
 262:Src/main.c    **** 
 263:Src/main.c    **** #ifdef ENABLESERIAL
 264:Src/main.c    ****     // send temperature via USB CDC
 265:Src/main.c    ****     USB_printfloat(r.error);
 266:Src/main.c    **** #endif
 267:Src/main.c    **** 
 268:Src/main.c    ****     //super shitty display code
 269:Src/main.c    ****     unsigned char str1[14] = "          ";
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 28


 270:Src/main.c    ****     unsigned char str2[14] = "          ";
 271:Src/main.c    ****     unsigned char str3[14] = "          ";
 272:Src/main.c    ****     unsigned char str4[14] = "          ";
 273:Src/main.c    ****     sprintf((char * restrict) str1, "%d C   ", (uint16_t)r.target);
 274:Src/main.c    ****     sprintf((char * restrict) str2, "%d.%d C", (uint16_t)s.ttipavg,(uint16_t)((s.ttipavg-(uint16_t)
 275:Src/main.c    ****     sprintf((char * restrict) str3, "%d.%d V", (uint16_t)s.uin,(uint16_t)((s.uin-(uint16_t)s.uin)*1
 276:Src/main.c    ****     sprintf((char * restrict) str4, "%d.%d A", (uint16_t)s.iin,(uint16_t)((s.iin-(uint16_t)s.iin)*1
 277:Src/main.c    **** 
 278:Src/main.c    ****     clear_screen();
 279:Src/main.c    ****     draw_string(str1, 10, 1 ,1);
 280:Src/main.c    ****     draw_string(str2, 10, 9 ,1);
 281:Src/main.c    ****     draw_string(str3, 60, 1 ,1);
 282:Src/main.c    **** #ifdef DISPLAYCURRENT
 283:Src/main.c    ****     if(s.timeout == 0){
 284:Src/main.c    ****       draw_string(str4, 10, 1 ,1);
 285:Src/main.c    ****     } else {
 286:Src/main.c    ****       s.timeout--;
 287:Src/main.c    ****     }
 288:Src/main.c    **** #endif
 289:Src/main.c    ****     s.iinavg = (s.iinavg * DISP_AVG_FILTER) + (s.iin*(1.0-DISP_AVG_FILTER));
 290:Src/main.c    **** 
 291:Src/main.c    ****     if (s.active) {
 292:Src/main.c    ****       s.drawlineavg = (s.drawlineavg * DISP_AVG_FILTER) + (CLAMP(r.error*3.0f,0,30)*(1.0-DISP_AVG_F
 293:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 294:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 295:Src/main.c    ****       }
 296:Src/main.c    ****     } else {
 297:Src/main.c    ****       draw_string((const unsigned char*) ((s.pdo > 0) ? "!ACTV" : "!PWRD"), 60, 9, 1);
 298:Src/main.c    ****     }
 299:Src/main.c    **** 
 300:Src/main.c    ****     refresh();
 301:Src/main.c    ****     HAL_IWDG_Refresh(&hiwdg);
 302:Src/main.c    ****   }
 303:Src/main.c    **** }
 304:Src/main.c    **** 
 305:Src/main.c    **** uint8_t check_usbpd(void) {
 306:Src/main.c    ****  #ifdef CHECKUSBPD
 307:Src/main.c    ****   return (s.uin >= MIN_VOLTAGE && s.imax >= MIN_CURRENT);
 308:Src/main.c    ****  #else
 309:Src/main.c    ****   return 1;
 310:Src/main.c    ****  #endif
 311:Src/main.c    **** }
 312:Src/main.c    **** 
 313:Src/main.c    **** // Main PID+two-way controller and ADC readout
 314:Src/main.c    **** void reg(void) {
 315:Src/main.c    ****   s.tref = ((((float)ADC_raw[3]/4095.0)*3.3)-0.5)/0.01;
 316:Src/main.c    ****   s.ttip = ((ADC_raw[1]-tipcal.offset)*tipcal.coefficient)/1000+s.tref;
 317:Src/main.c    ****   s.uin = ((ADC_raw[2]/4095.0)*3.3)*6.6;
 318:Src/main.c    ****   s.iin = FILT(s.iin, ((ADC_raw[0]/4095.0)*3.3*1.659)/(0.01*(2370/33)), TTIP_AVG_FILTER);
 319:Src/main.c    **** 
 320:Src/main.c    ****   s.ttipavg = FILT(s.ttipavg, s.ttip, TTIP_AVG_FILTER);
 321:Src/main.c    **** 
 322:Src/main.c    ****   // Check if within deadband, decide on two-way or PID control
 323:Src/main.c    ****   if(s.ttipavg >= r.target-r.deadband && s.ttipavg <= r.target+r.deadband){
 324:Src/main.c    ****     r.error = r.target - s.ttipavg;
 325:Src/main.c    ****     r.ierror = r.ierror + (r.error*r.cycletime);
 326:Src/main.c    ****     r.ierror = CLAMP(r.ierror,-r.imax,r.imax);
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 29


 327:Src/main.c    ****     r.derror = (r.error - r.errorprior)/r.cycletime;
 328:Src/main.c    ****     r.duty = (r.Kp*r.error + r.Ki*r.ierror + r.Kd*r.derror)*MAX_DUTY;
 329:Src/main.c    ****     r.errorprior = r.error;
 330:Src/main.c    ****   } else {
 331:Src/main.c    ****     if(s.ttipavg <= r.target){
 332:Src/main.c    ****       r.duty = MAX_DUTY;
 333:Src/main.c    ****       r.error = 12.0;
 334:Src/main.c    ****     } else {
 335:Src/main.c    ****       r.duty = MIN_DUTY;
 336:Src/main.c    ****       r.error = 0.0;
 337:Src/main.c    ****     }
 338:Src/main.c    ****   }
 339:Src/main.c    **** 
 340:Src/main.c    ****   r.duty = CLAMP(r.duty, MIN_DUTY, MAX_DUTY); // Clamp to duty cycle
 341:Src/main.c    **** 
 342:Src/main.c    **** #ifdef CURRENTLIM
 343:Src/main.c    ****   if(s.iin > s.imax && r.duty > 100){ // Current limiting
 344:Src/main.c    ****     MAX_DUTY = r.duty - 1;
 345:Src/main.c    ****     r.duty -= 100;
 346:Src/main.c    ****   } else {
 347:Src/main.c    ****     MAX_DUTY++;
 348:Src/main.c    ****     if(MAX_DUTY >= 3990) MAX_DUTY = 3990;
 349:Src/main.c    ****   }
 350:Src/main.c    **** #endif
 351:Src/main.c    **** 
 352:Src/main.c    ****   __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, r.duty);
 353:Src/main.c    ****   __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_4, 4050);
 354:Src/main.c    **** }
 355:Src/main.c    **** 
 356:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) //send USB cdc data
 357:Src/main.c    **** {
 358:Src/main.c    ****   if(sendDataUSB) // WIP need to fix this, should me timer based only
 359:Src/main.c    ****   {
 360:Src/main.c    ****     sendDataUSB = 0;
 361:Src/main.c    **** 
 362:Src/main.c    ****     USBD_CDC_SetTxBuffer(&USBD_Device, (uint8_t*)&UserTxBuffer[0], APP_TX_DATA_SIZE);
 363:Src/main.c    ****     USBD_CDC_TransmitPacket(&USBD_Device);
 364:Src/main.c    ****   }
 365:Src/main.c    **** }
 366:Src/main.c    **** 
 367:Src/main.c    **** #ifdef ENABLESERIAL
 368:Src/main.c    **** void USB_printfloat(float _buf){
 369:Src/main.c    ****   memset(UserTxBuffer, 0, APP_TX_DATA_SIZE);
 370:Src/main.c    ****   sprintf(UserTxBuffer, "%d.%d \r\n", (uint16_t)_buf,(uint16_t)((_buf-(uint16_t)_buf)*10.0f));
 371:Src/main.c    ****   sendDataUSB = 1;
 372:Src/main.c    **** }
 373:Src/main.c    **** #endif
 374:Src/main.c    **** 
 375:Src/main.c    **** 
 376:Src/main.c    **** // init code sequence by Ralim, thanks alot!
 377:Src/main.c    **** #define DEVICEADDR_OLED   (0x3c<<1)
 378:Src/main.c    **** #define OLED_WIDTH        96
 379:Src/main.c    **** #define FRAMEBUFFER_START 17
 380:Src/main.c    **** uint8_t screenBuffer[16 + (OLED_WIDTH * 2) + 10];  // The data buffer
 381:Src/main.c    **** const uint8_t REFRESH_COMMANDS[17] = { 0x80, 0xAF, 0x80, 0x21, 0x80, 0x20, 0x80, 0x7F, 0x80, 0xC0, 
 382:Src/main.c    **** uint8_t OLED_Setup_Array[] = {
 383:Src/main.c    **** 0x80, 0xAE, /*Display off*/
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 30


 384:Src/main.c    **** 0x80, 0xD5, /*Set display clock divide ratio / osc freq*/
 385:Src/main.c    **** 0x80, 0x52, /*Divide ratios*/
 386:Src/main.c    **** 0x80, 0xA8, /*Set Multiplex Ratio*/
 387:Src/main.c    **** 0x80, 0x0F, /*16 == max brightness,39==dimmest*/
 388:Src/main.c    **** 0x80, 0xC0, /*Set COM Scan direction*/
 389:Src/main.c    **** 0x80, 0xD3, /*Set vertical Display offset*/
 390:Src/main.c    **** 0x80, 0x00, /*0 Offset*/
 391:Src/main.c    **** 0x80, 0x40, /*Set Display start line to 0*/
 392:Src/main.c    **** 0x80, 0xA0, /*Set Segment remap to normal*/
 393:Src/main.c    **** 0x80, 0x8D, /*Charge Pump*/
 394:Src/main.c    **** 0x80, 0x14, /*Charge Pump settings*/
 395:Src/main.c    **** 0x80, 0xDA, /*Set VCOM Pins hardware config*/
 396:Src/main.c    **** 0x80, 0x02, /*Combination 2*/
 397:Src/main.c    **** 0x80, 0x81, /*Contrast*/
 398:Src/main.c    **** 0x80, 0x33, /*^51*/
 399:Src/main.c    **** 0x80, 0xD9, /*Set pre-charge period*/
 400:Src/main.c    **** 0x80, 0xF1, /*Pre charge period*/
 401:Src/main.c    **** 0x80, 0xDB, /*Adjust VCOMH regulator ouput*/
 402:Src/main.c    **** 0x80, 0x30, /*VCOM level*/
 403:Src/main.c    **** 0x80, 0xA4, /*Enable the display GDDR*/
 404:Src/main.c    **** 0x80, 0XA6, /*Normal display*/
 405:Src/main.c    **** 0x80, 0x20, /*Memory Mode*/
 406:Src/main.c    **** 0x80, 0x00, /*Wrap memory*/
 407:Src/main.c    **** 0x80, 0xAF /*Display on*/
 408:Src/main.c    **** };
 409:Src/main.c    **** //not Ralim anymore
 410:Src/main.c    **** void disp_init(void) {
 411:Src/main.c    ****   memcpy(&screenBuffer[0], &REFRESH_COMMANDS[0], sizeof(REFRESH_COMMANDS));
 412:Src/main.c    ****   uint16_t _cnt = 0;
 413:Src/main.c    ****   while (HAL_I2C_GetState(&hi2c1) != HAL_I2C_STATE_READY) if (_cnt++ > 10000) break;
 414:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, &OLED_Setup_Array[0],sizeof(OLED_Setup_Array),100
 415:Src/main.c    **** }
 416:Src/main.c    **** 
 417:Src/main.c    **** void refresh(void) {
 418:Src/main.c    ****   uint16_t _cnt = 0;
 419:Src/main.c    ****   while (HAL_I2C_GetState(&hi2c1) != HAL_I2C_STATE_READY) if (_cnt++ > 10000) break;
 420:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, screenBuffer,FRAMEBUFFER_START + (OLED_WIDTH * 2)
 421:Src/main.c    **** }
 422:Src/main.c    **** 
 423:Src/main.c    **** void clear_screen(void) {
 424:Src/main.c    ****   memset(&screenBuffer[FRAMEBUFFER_START], 0, OLED_WIDTH * 2);
 425:Src/main.c    **** }
 426:Src/main.c    **** void set_screen(void) {
 427:Src/main.c    ****   memset(&screenBuffer[FRAMEBUFFER_START], 255, OLED_WIDTH * 2);
 428:Src/main.c    **** }
 429:Src/main.c    **** 
 430:Src/main.c    **** void draw_v_line(int16_t x, int16_t y, uint16_t h, uint8_t color){
 431:Src/main.c    ****   for(int i = 0; i <= h; i++){
 432:Src/main.c    ****     write_pixel(x, y+i, color);
 433:Src/main.c    ****   }
 434:Src/main.c    **** }
 435:Src/main.c    **** 
 436:Src/main.c    **** void write_pixel(int16_t x, int16_t y, uint8_t color){
 437:Src/main.c    ****   if(x>95 || y >15){
 438:Src/main.c    ****     return;
 439:Src/main.c    ****   }
 440:Src/main.c    ****   if(color == 1){
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 31


 441:Src/main.c    ****     screenBuffer[FRAMEBUFFER_START + (x + ((y/8)*96))] |=  (1 << y % 8);
 442:Src/main.c    ****   } else if (color == 0){
 443:Src/main.c    ****     screenBuffer[FRAMEBUFFER_START + (x + ((y/8)*96))] &= ~(1 << y % 8);
 444:Src/main.c    ****   }
 445:Src/main.c    **** }
 446:Src/main.c    **** 
 447:Src/main.c    **** #define CHAR_WIDTH 6
 448:Src/main.c    **** #define CHAR_HEIGHT 8
 449:Src/main.c    **** void draw_char(unsigned char c, uint8_t x, uint8_t y, uint8_t brightness) {
 450:Src/main.c    ****     c = c & 0x7F;
 451:Src/main.c    ****     if (c < ' ') {
 452:Src/main.c    ****         c = 0;
 453:Src/main.c    ****     } else {
 454:Src/main.c    ****         c -= ' ';
 455:Src/main.c    ****     }
 456:Src/main.c    ****     uint8_t * chr = (uint8_t *) font[c];
 457:Src/main.c    ****     for (uint8_t j=0; j<CHAR_WIDTH; j++) {
 458:Src/main.c    ****         for (uint8_t i=0; i<CHAR_HEIGHT; i++) {
 459:Src/main.c    ****             if (chr[j] & (1<<i)) {
 460:Src/main.c    ****                 write_pixel(x+j, y+i, 1);
 461:Src/main.c    ****             } else {
 462:Src/main.c    ****                 write_pixel(x+j, y+i, 0);
 463:Src/main.c    ****             }
 464:Src/main.c    ****         }
 465:Src/main.c    ****     }
 466:Src/main.c    **** }
 467:Src/main.c    **** 
 468:Src/main.c    **** void draw_string(const unsigned char* str, uint8_t x, uint8_t y, uint8_t brightness) {
 469:Src/main.c    ****     while (*str) {
 470:Src/main.c    ****         draw_char(*str++, x, y, brightness);
 471:Src/main.c    ****         x += CHAR_WIDTH;
 472:Src/main.c    ****     }
 473:Src/main.c    **** }
 474:Src/main.c    **** 
 475:Src/main.c    **** void SystemClock_Config(void)
 476:Src/main.c    **** {
 477:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 478:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 479:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 480:Src/main.c    **** 
 481:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14
 482:Src/main.c    ****                               |RCC_OSCILLATORTYPE_HSI48;
 483:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 484:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 485:Src/main.c    ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 486:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 487:Src/main.c    ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 488:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 489:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI48;
 490:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 491:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV2;
 492:Src/main.c    ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 493:Src/main.c    **** 
 494:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 495:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 496:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 497:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 32


 498:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 499:Src/main.c    **** 
 500:Src/main.c    ****   HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1);
 501:Src/main.c    **** 
 502:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_I2C1;
 503:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 504:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 505:Src/main.c    **** 
 506:Src/main.c    ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 507:Src/main.c    **** }
 508:Src/main.c    **** 
 509:Src/main.c    **** static void MX_ADC_Init(void)
 510:Src/main.c    **** {
 511:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 512:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE();
 513:Src/main.c    **** 
 514:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 515:Src/main.c    **** 
 516:Src/main.c    ****   hadc.Instance = ADC1;
 517:Src/main.c    ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 518:Src/main.c    ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 519:Src/main.c    ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 520:Src/main.c    ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 521:Src/main.c    ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 522:Src/main.c    ****   hadc.Init.LowPowerAutoWait = DISABLE;
 523:Src/main.c    ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 524:Src/main.c    ****   hadc.Init.ContinuousConvMode = DISABLE;
 525:Src/main.c    ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 526:Src/main.c    ****   hadc.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_CC4;//ADC_EXTERNALTRIGCONV_T2_TRGO;
 527:Src/main.c    ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 528:Src/main.c    ****   hadc.Init.DMAContinuousRequests = ENABLE;
 529:Src/main.c    ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 530:Src/main.c    ****   HAL_ADC_Init(&hadc);
 531:Src/main.c    **** 
 532:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_0;
 533:Src/main.c    ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 534:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_71CYCLES_5;
 535:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 536:Src/main.c    **** 
 537:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_1;
 538:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 539:Src/main.c    **** 
 540:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_2;
 541:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 542:Src/main.c    **** 
 543:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_5;
 544:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 545:Src/main.c    **** 
 546:Src/main.c    ****   HAL_ADC_MspInit(&hadc);
 547:Src/main.c    **** }
 548:Src/main.c    **** 
 549:Src/main.c    **** static void MX_I2C1_Init(void)
 550:Src/main.c    **** {
 551:Src/main.c    **** 
 552:Src/main.c    ****   hi2c1.Instance = I2C1;
 553:Src/main.c    ****   hi2c1.Init.Timing = 0x2000090E;
 554:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 33


 555:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 556:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 557:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 558:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 559:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 560:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 561:Src/main.c    ****   HAL_I2C_Init(&hi2c1);
 562:Src/main.c    **** 
 563:Src/main.c    ****   HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE);
 564:Src/main.c    **** 
 565:Src/main.c    ****   HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0);
 566:Src/main.c    **** }
 567:Src/main.c    **** 
 568:Src/main.c    **** static void MX_I2C2_Init(void)
 569:Src/main.c    **** {
 570:Src/main.c    **** 
 571:Src/main.c    ****   hi2c2.Instance = I2C2;
 572:Src/main.c    ****   hi2c2.Init.Timing = 0x20303E5D;
 573:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 574:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 575:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 576:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 577:Src/main.c    ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 578:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 579:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 580:Src/main.c    ****   HAL_I2C_Init(&hi2c2);
 581:Src/main.c    **** 
 582:Src/main.c    ****   HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE);
 583:Src/main.c    **** 
 584:Src/main.c    ****   HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0);
 585:Src/main.c    **** }
 586:Src/main.c    **** 
 587:Src/main.c    **** static void MX_IWDG_Init(void)
 588:Src/main.c    **** {
 589:Src/main.c    ****   hiwdg.Instance = IWDG;
 590:Src/main.c    ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 591:Src/main.c    ****   hiwdg.Init.Window = 4095;
 592:Src/main.c    ****   hiwdg.Init.Reload = 4095;
 593:Src/main.c    ****   HAL_IWDG_Init(&hiwdg);
 594:Src/main.c    **** }
 595:Src/main.c    **** 
 596:Src/main.c    **** static void TIM3_Init(void)
 597:Src/main.c    **** {
 598:Src/main.c    ****   __HAL_RCC_TIM3_CLK_ENABLE();
 599:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 600:Src/main.c    **** 
 601:Src/main.c    ****   /*
 602:Src/main.c    ****        + Period = 10000 - 1
 603:Src/main.c    ****        + Prescaler = ((8000000/2)/10000) - 1
 604:Src/main.c    **** 
 605:Src/main.c    ****   */
 606:Src/main.c    ****   htim3.Instance = TIM3;
 607:Src/main.c    ****   htim3.Init.Period = (CDC_POLLING_INTERVAL*1000) - 1;
 608:Src/main.c    ****   htim3.Init.Prescaler = 399;
 609:Src/main.c    ****   htim3.Init.ClockDivision = 0;
 610:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 611:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 34


 612:Src/main.c    ****   if(HAL_TIM_Base_Init(&htim3) != HAL_OK)
 613:Src/main.c    ****   {
 614:Src/main.c    ****     /* Initialization Error */
 615:Src/main.c    ****     Error_Handler();
 616:Src/main.c    ****   }
 617:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 618:Src/main.c    ****   HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig);
 619:Src/main.c    **** }
 620:Src/main.c    **** 
 621:Src/main.c    **** static void MX_TIM1_Init(void)
 622:Src/main.c    **** {
 623:Src/main.c    **** 
 624:Src/main.c    ****   __HAL_RCC_TIM1_CLK_ENABLE();
 625:Src/main.c    **** 
 626:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 627:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 628:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 629:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 630:Src/main.c    **** 
 631:Src/main.c    ****   htim1.Instance = TIM1;
 632:Src/main.c    ****   htim1.Init.Prescaler = 2048; // 2048
 633:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 634:Src/main.c    ****   htim1.Init.Period = 4096; // 4096
 635:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
 636:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 637:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 638:Src/main.c    ****   HAL_TIM_Base_Init(&htim1);
 639:Src/main.c    **** 
 640:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 641:Src/main.c    ****   HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig);
 642:Src/main.c    **** 
 643:Src/main.c    ****   HAL_TIM_PWM_Init(&htim1);
 644:Src/main.c    ****   HAL_TIM_OC_Init(&htim1);
 645:Src/main.c    **** 
 646:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 647:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 648:Src/main.c    ****   HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 649:Src/main.c    **** 
 650:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 651:Src/main.c    ****   sConfigOC.Pulse = 50;
 652:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 653:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 654:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 655:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 656:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 657:Src/main.c    ****   HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1);
 658:Src/main.c    **** 
 659:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM2;
 660:Src/main.c    ****   sConfigOC.Pulse = 4050;
 661:Src/main.c    ****   HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4);
 662:Src/main.c    **** 
 663:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 664:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 665:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 666:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 667:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 668:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 35


 669:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 670:Src/main.c    ****   HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig);
 671:Src/main.c    **** 
 672:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
 673:Src/main.c    **** }
 674:Src/main.c    **** /*
 675:Src/main.c    **** static void MX_TIM2_Init(void)
 676:Src/main.c    **** {
 677:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 678:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 679:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 680:Src/main.c    **** 
 681:Src/main.c    ****   htim2.Instance = TIM2;
 682:Src/main.c    ****   htim2.Init.Prescaler = 2096;
 683:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 684:Src/main.c    ****   htim2.Init.Period = 4096;
 685:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
 686:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 687:Src/main.c    ****   HAL_TIM_PWM_Init(&htim2);
 688:Src/main.c    **** 
 689:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 690:Src/main.c    ****   HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig);
 691:Src/main.c    **** 
 692:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 693:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 694:Src/main.c    ****   HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
 695:Src/main.c    **** 
 696:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 697:Src/main.c    ****   sConfigOC.Pulse = 30;
 698:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 699:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 700:Src/main.c    ****   HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2);
 701:Src/main.c    **** 
 702:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 703:Src/main.c    **** 
 704:Src/main.c    **** }
 705:Src/main.c    **** */
 706:Src/main.c    **** 
 707:Src/main.c    **** static void MX_DMA_Init(void)
 708:Src/main.c    **** {
 709:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 710:Src/main.c    **** 
 711:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 712:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 713:Src/main.c    **** 
 714:Src/main.c    ****   HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 715:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM3_IRQn);
 716:Src/main.c    ****   /*
 717:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 718:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 719:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel4_5_6_7_IRQn, 0, 0);
 720:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_5_6_7_IRQn);
 721:Src/main.c    ****   */
 722:Src/main.c    **** 
 723:Src/main.c    **** }
 724:Src/main.c    **** 
 725:Src/main.c    **** static void MX_GPIO_Init(void)
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 36


 726:Src/main.c    **** {
 101              		.loc 1 726 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 32
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105 0000 30B5     		push	{r4, r5, lr}
 106              	.LCFI0:
 107              		.cfi_def_cfa_offset 12
 108              		.cfi_offset 4, -12
 109              		.cfi_offset 5, -8
 110              		.cfi_offset 14, -4
 111 0002 89B0     		sub	sp, sp, #36
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 48
 727:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 114              		.loc 1 727 3 view .LVU15
 115              		.loc 1 727 20 is_stmt 0 view .LVU16
 116 0004 1422     		movs	r2, #20
 117 0006 0021     		movs	r1, #0
 118 0008 03A8     		add	r0, sp, #12
 119 000a FFF7FEFF 		bl	memset
 120              	.LVL0:
 728:Src/main.c    **** 
 729:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 121              		.loc 1 729 3 is_stmt 1 view .LVU17
 122              	.LBB14:
 123              		.loc 1 729 3 view .LVU18
 124              		.loc 1 729 3 view .LVU19
 125 000e 1D4B     		ldr	r3, .L6
 126 0010 5A69     		ldr	r2, [r3, #20]
 127 0012 8021     		movs	r1, #128
 128 0014 8902     		lsls	r1, r1, #10
 129 0016 0A43     		orrs	r2, r1
 130 0018 5A61     		str	r2, [r3, #20]
 131              		.loc 1 729 3 view .LVU20
 132 001a 5A69     		ldr	r2, [r3, #20]
 133 001c 0A40     		ands	r2, r1
 134 001e 0092     		str	r2, [sp]
 135              		.loc 1 729 3 view .LVU21
 136 0020 009A     		ldr	r2, [sp]
 137              	.LBE14:
 138              		.loc 1 729 3 view .LVU22
 730:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 139              		.loc 1 730 3 view .LVU23
 140              	.LBB15:
 141              		.loc 1 730 3 view .LVU24
 142              		.loc 1 730 3 view .LVU25
 143 0022 5A69     		ldr	r2, [r3, #20]
 144 0024 8021     		movs	r1, #128
 145 0026 C902     		lsls	r1, r1, #11
 146 0028 0A43     		orrs	r2, r1
 147 002a 5A61     		str	r2, [r3, #20]
 148              		.loc 1 730 3 view .LVU26
 149 002c 5A69     		ldr	r2, [r3, #20]
 150 002e 0A40     		ands	r2, r1
 151 0030 0192     		str	r2, [sp, #4]
 152              		.loc 1 730 3 view .LVU27
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 37


 153 0032 019A     		ldr	r2, [sp, #4]
 154              	.LBE15:
 155              		.loc 1 730 3 view .LVU28
 731:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 156              		.loc 1 731 3 view .LVU29
 157              	.LBB16:
 158              		.loc 1 731 3 view .LVU30
 159              		.loc 1 731 3 view .LVU31
 160 0034 5A69     		ldr	r2, [r3, #20]
 161 0036 8021     		movs	r1, #128
 162 0038 0903     		lsls	r1, r1, #12
 163 003a 0A43     		orrs	r2, r1
 164 003c 5A61     		str	r2, [r3, #20]
 165              		.loc 1 731 3 view .LVU32
 166 003e 5B69     		ldr	r3, [r3, #20]
 167 0040 0B40     		ands	r3, r1
 168 0042 0293     		str	r3, [sp, #8]
 169              		.loc 1 731 3 view .LVU33
 170 0044 029B     		ldr	r3, [sp, #8]
 171              	.LBE16:
 172              		.loc 1 731 3 view .LVU34
 732:Src/main.c    **** 
 733:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin|B2_Pin;
 173              		.loc 1 733 3 view .LVU35
 174              		.loc 1 733 23 is_stmt 0 view .LVU36
 175 0046 1823     		movs	r3, #24
 176 0048 0393     		str	r3, [sp, #12]
 734:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 177              		.loc 1 734 3 is_stmt 1 view .LVU37
 735:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 178              		.loc 1 735 3 view .LVU38
 179              		.loc 1 735 24 is_stmt 0 view .LVU39
 180 004a 0225     		movs	r5, #2
 181 004c 0595     		str	r5, [sp, #20]
 736:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 182              		.loc 1 736 3 is_stmt 1 view .LVU40
 183 004e 9020     		movs	r0, #144
 184 0050 03A9     		add	r1, sp, #12
 185 0052 C005     		lsls	r0, r0, #23
 186 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 187              	.LVL1:
 737:Src/main.c    **** 
 738:Src/main.c    ****   GPIO_InitStruct.Pin = B1_1_Pin;
 188              		.loc 1 738 3 view .LVU41
 189              		.loc 1 738 23 is_stmt 0 view .LVU42
 190 0058 8023     		movs	r3, #128
 191 005a 9B01     		lsls	r3, r3, #6
 192 005c 0393     		str	r3, [sp, #12]
 739:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 193              		.loc 1 739 3 is_stmt 1 view .LVU43
 194              		.loc 1 739 24 is_stmt 0 view .LVU44
 195 005e 0024     		movs	r4, #0
 196 0060 0494     		str	r4, [sp, #16]
 740:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 197              		.loc 1 740 3 is_stmt 1 view .LVU45
 198              		.loc 1 740 24 is_stmt 0 view .LVU46
 199 0062 0595     		str	r5, [sp, #20]
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 38


 741:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 200              		.loc 1 741 3 is_stmt 1 view .LVU47
 201 0064 03A9     		add	r1, sp, #12
 202 0066 0848     		ldr	r0, .L6+4
 203 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 204              	.LVL2:
 742:Src/main.c    **** 
 743:Src/main.c    **** 
 744:Src/main.c    **** 
 745:Src/main.c    ****   GPIO_InitStruct.Pin = INT_N_Pin;
 205              		.loc 1 745 3 view .LVU48
 206              		.loc 1 745 23 is_stmt 0 view .LVU49
 207 006c 8023     		movs	r3, #128
 208 006e 5B01     		lsls	r3, r3, #5
 209 0070 0393     		str	r3, [sp, #12]
 746:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 210              		.loc 1 746 3 is_stmt 1 view .LVU50
 211              		.loc 1 746 24 is_stmt 0 view .LVU51
 212 0072 0494     		str	r4, [sp, #16]
 747:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 213              		.loc 1 747 3 is_stmt 1 view .LVU52
 214              		.loc 1 747 24 is_stmt 0 view .LVU53
 215 0074 0594     		str	r4, [sp, #20]
 748:Src/main.c    ****   HAL_GPIO_Init(INT_N_GPIO_Port, &GPIO_InitStruct);
 216              		.loc 1 748 3 is_stmt 1 view .LVU54
 217 0076 03A9     		add	r1, sp, #12
 218 0078 0448     		ldr	r0, .L6+8
 219 007a FFF7FEFF 		bl	HAL_GPIO_Init
 220              	.LVL3:
 749:Src/main.c    **** 
 750:Src/main.c    **** }
 221              		.loc 1 750 1 is_stmt 0 view .LVU55
 222 007e 09B0     		add	sp, sp, #36
 223              		@ sp needed
 224 0080 30BD     		pop	{r4, r5, pc}
 225              	.L7:
 226 0082 C046     		.align	2
 227              	.L6:
 228 0084 00100240 		.word	1073876992
 229 0088 00080048 		.word	1207961600
 230 008c 00040048 		.word	1207960576
 231              		.cfi_endproc
 232              	.LFE57:
 234              		.section	.text.MX_DMA_Init,"ax",%progbits
 235              		.align	1
 236              		.syntax unified
 237              		.code	16
 238              		.thumb_func
 240              	MX_DMA_Init:
 241              	.LFB56:
 708:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 242              		.loc 1 708 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 00B5     		push	{lr}
 247              	.LCFI2:
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 39


 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 14, -4
 250 0002 83B0     		sub	sp, sp, #12
 251              	.LCFI3:
 252              		.cfi_def_cfa_offset 16
 709:Src/main.c    **** 
 253              		.loc 1 709 3 view .LVU57
 254              	.LBB17:
 709:Src/main.c    **** 
 255              		.loc 1 709 3 view .LVU58
 709:Src/main.c    **** 
 256              		.loc 1 709 3 view .LVU59
 257 0004 0D4A     		ldr	r2, .L9
 258 0006 5169     		ldr	r1, [r2, #20]
 259 0008 0123     		movs	r3, #1
 260 000a 1943     		orrs	r1, r3
 261 000c 5161     		str	r1, [r2, #20]
 709:Src/main.c    **** 
 262              		.loc 1 709 3 view .LVU60
 263 000e 5269     		ldr	r2, [r2, #20]
 264 0010 1340     		ands	r3, r2
 265 0012 0193     		str	r3, [sp, #4]
 709:Src/main.c    **** 
 266              		.loc 1 709 3 view .LVU61
 267 0014 019B     		ldr	r3, [sp, #4]
 268              	.LBE17:
 709:Src/main.c    **** 
 269              		.loc 1 709 3 view .LVU62
 711:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 270              		.loc 1 711 3 view .LVU63
 271 0016 0022     		movs	r2, #0
 272 0018 0021     		movs	r1, #0
 273 001a 0920     		movs	r0, #9
 274 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 275              	.LVL4:
 712:Src/main.c    **** 
 276              		.loc 1 712 3 view .LVU64
 277 0020 0920     		movs	r0, #9
 278 0022 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 279              	.LVL5:
 714:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM3_IRQn);
 280              		.loc 1 714 3 view .LVU65
 281 0026 0022     		movs	r2, #0
 282 0028 0021     		movs	r1, #0
 283 002a 1020     		movs	r0, #16
 284 002c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 285              	.LVL6:
 715:Src/main.c    ****   /*
 286              		.loc 1 715 3 view .LVU66
 287 0030 1020     		movs	r0, #16
 288 0032 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 289              	.LVL7:
 723:Src/main.c    **** 
 290              		.loc 1 723 1 is_stmt 0 view .LVU67
 291 0036 03B0     		add	sp, sp, #12
 292              		@ sp needed
 293 0038 00BD     		pop	{pc}
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 40


 294              	.L10:
 295 003a C046     		.align	2
 296              	.L9:
 297 003c 00100240 		.word	1073876992
 298              		.cfi_endproc
 299              	.LFE56:
 301              		.section	.text.MX_ADC_Init,"ax",%progbits
 302              		.align	1
 303              		.syntax unified
 304              		.code	16
 305              		.thumb_func
 307              	MX_ADC_Init:
 308              	.LFB50:
 510:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 309              		.loc 1 510 1 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 24
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 70B5     		push	{r4, r5, r6, lr}
 314              	.LCFI4:
 315              		.cfi_def_cfa_offset 16
 316              		.cfi_offset 4, -16
 317              		.cfi_offset 5, -12
 318              		.cfi_offset 6, -8
 319              		.cfi_offset 14, -4
 320 0002 86B0     		sub	sp, sp, #24
 321              	.LCFI5:
 322              		.cfi_def_cfa_offset 40
 511:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE();
 323              		.loc 1 511 3 view .LVU69
 324              	.LBB18:
 511:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE();
 325              		.loc 1 511 3 view .LVU70
 511:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE();
 326              		.loc 1 511 3 view .LVU71
 327 0004 274B     		ldr	r3, .L12
 328 0006 5A69     		ldr	r2, [r3, #20]
 329 0008 0126     		movs	r6, #1
 330 000a 3243     		orrs	r2, r6
 331 000c 5A61     		str	r2, [r3, #20]
 511:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE();
 332              		.loc 1 511 3 view .LVU72
 333 000e 5A69     		ldr	r2, [r3, #20]
 334 0010 3240     		ands	r2, r6
 335 0012 0192     		str	r2, [sp, #4]
 511:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE();
 336              		.loc 1 511 3 view .LVU73
 337 0014 019A     		ldr	r2, [sp, #4]
 338              	.LBE18:
 511:Src/main.c    ****   __HAL_RCC_ADC1_CLK_ENABLE();
 339              		.loc 1 511 3 view .LVU74
 512:Src/main.c    **** 
 340              		.loc 1 512 3 view .LVU75
 341              	.LBB19:
 512:Src/main.c    **** 
 342              		.loc 1 512 3 view .LVU76
 512:Src/main.c    **** 
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 41


 343              		.loc 1 512 3 view .LVU77
 344 0016 9A69     		ldr	r2, [r3, #24]
 345 0018 8021     		movs	r1, #128
 346 001a 8900     		lsls	r1, r1, #2
 347 001c 0A43     		orrs	r2, r1
 348 001e 9A61     		str	r2, [r3, #24]
 512:Src/main.c    **** 
 349              		.loc 1 512 3 view .LVU78
 350 0020 9B69     		ldr	r3, [r3, #24]
 351 0022 0B40     		ands	r3, r1
 352 0024 0293     		str	r3, [sp, #8]
 512:Src/main.c    **** 
 353              		.loc 1 512 3 view .LVU79
 354 0026 029B     		ldr	r3, [sp, #8]
 355              	.LBE19:
 512:Src/main.c    **** 
 356              		.loc 1 512 3 view .LVU80
 514:Src/main.c    **** 
 357              		.loc 1 514 3 view .LVU81
 514:Src/main.c    **** 
 358              		.loc 1 514 26 is_stmt 0 view .LVU82
 359 0028 0C22     		movs	r2, #12
 360 002a 0021     		movs	r1, #0
 361 002c 03A8     		add	r0, sp, #12
 362 002e FFF7FEFF 		bl	memset
 363              	.LVL8:
 516:Src/main.c    ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 364              		.loc 1 516 3 is_stmt 1 view .LVU83
 516:Src/main.c    ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 365              		.loc 1 516 17 is_stmt 0 view .LVU84
 366 0032 1D4C     		ldr	r4, .L12+4
 367 0034 1D4B     		ldr	r3, .L12+8
 368 0036 2360     		str	r3, [r4]
 517:Src/main.c    ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 369              		.loc 1 517 3 is_stmt 1 view .LVU85
 517:Src/main.c    ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 370              		.loc 1 517 28 is_stmt 0 view .LVU86
 371 0038 0025     		movs	r5, #0
 372 003a 6560     		str	r5, [r4, #4]
 518:Src/main.c    ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 373              		.loc 1 518 3 is_stmt 1 view .LVU87
 518:Src/main.c    ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 374              		.loc 1 518 24 is_stmt 0 view .LVU88
 375 003c A560     		str	r5, [r4, #8]
 519:Src/main.c    ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 376              		.loc 1 519 3 is_stmt 1 view .LVU89
 519:Src/main.c    ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 377              		.loc 1 519 23 is_stmt 0 view .LVU90
 378 003e E560     		str	r5, [r4, #12]
 520:Src/main.c    ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 379              		.loc 1 520 3 is_stmt 1 view .LVU91
 520:Src/main.c    ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 380              		.loc 1 520 26 is_stmt 0 view .LVU92
 381 0040 2661     		str	r6, [r4, #16]
 521:Src/main.c    ****   hadc.Init.LowPowerAutoWait = DISABLE;
 382              		.loc 1 521 3 is_stmt 1 view .LVU93
 521:Src/main.c    ****   hadc.Init.LowPowerAutoWait = DISABLE;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 42


 383              		.loc 1 521 26 is_stmt 0 view .LVU94
 384 0042 0823     		movs	r3, #8
 385 0044 6361     		str	r3, [r4, #20]
 522:Src/main.c    ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 386              		.loc 1 522 3 is_stmt 1 view .LVU95
 522:Src/main.c    ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 387              		.loc 1 522 30 is_stmt 0 view .LVU96
 388 0046 A561     		str	r5, [r4, #24]
 523:Src/main.c    ****   hadc.Init.ContinuousConvMode = DISABLE;
 389              		.loc 1 523 3 is_stmt 1 view .LVU97
 523:Src/main.c    ****   hadc.Init.ContinuousConvMode = DISABLE;
 390              		.loc 1 523 34 is_stmt 0 view .LVU98
 391 0048 E561     		str	r5, [r4, #28]
 524:Src/main.c    ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 392              		.loc 1 524 3 is_stmt 1 view .LVU99
 524:Src/main.c    ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 393              		.loc 1 524 32 is_stmt 0 view .LVU100
 394 004a 2562     		str	r5, [r4, #32]
 525:Src/main.c    ****   hadc.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_CC4;//ADC_EXTERNALTRIGCONV_T2_TRGO;
 395              		.loc 1 525 3 is_stmt 1 view .LVU101
 525:Src/main.c    ****   hadc.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_CC4;//ADC_EXTERNALTRIGCONV_T2_TRGO;
 396              		.loc 1 525 35 is_stmt 0 view .LVU102
 397 004c 6562     		str	r5, [r4, #36]
 526:Src/main.c    ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 398              		.loc 1 526 3 is_stmt 1 view .LVU103
 526:Src/main.c    ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 399              		.loc 1 526 30 is_stmt 0 view .LVU104
 400 004e 3833     		adds	r3, r3, #56
 401 0050 A362     		str	r3, [r4, #40]
 527:Src/main.c    ****   hadc.Init.DMAContinuousRequests = ENABLE;
 402              		.loc 1 527 3 is_stmt 1 view .LVU105
 527:Src/main.c    ****   hadc.Init.DMAContinuousRequests = ENABLE;
 403              		.loc 1 527 34 is_stmt 0 view .LVU106
 404 0052 8023     		movs	r3, #128
 405 0054 DB00     		lsls	r3, r3, #3
 406 0056 E362     		str	r3, [r4, #44]
 528:Src/main.c    ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 407              		.loc 1 528 3 is_stmt 1 view .LVU107
 528:Src/main.c    ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 408              		.loc 1 528 35 is_stmt 0 view .LVU108
 409 0058 2663     		str	r6, [r4, #48]
 529:Src/main.c    ****   HAL_ADC_Init(&hadc);
 410              		.loc 1 529 3 is_stmt 1 view .LVU109
 529:Src/main.c    ****   HAL_ADC_Init(&hadc);
 411              		.loc 1 529 21 is_stmt 0 view .LVU110
 412 005a 6663     		str	r6, [r4, #52]
 530:Src/main.c    **** 
 413              		.loc 1 530 3 is_stmt 1 view .LVU111
 414 005c 2000     		movs	r0, r4
 415 005e FFF7FEFF 		bl	HAL_ADC_Init
 416              	.LVL9:
 532:Src/main.c    ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 417              		.loc 1 532 3 view .LVU112
 532:Src/main.c    ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 418              		.loc 1 532 19 is_stmt 0 view .LVU113
 419 0062 0395     		str	r5, [sp, #12]
 533:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_71CYCLES_5;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 43


 420              		.loc 1 533 3 is_stmt 1 view .LVU114
 533:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_71CYCLES_5;
 421              		.loc 1 533 16 is_stmt 0 view .LVU115
 422 0064 8023     		movs	r3, #128
 423 0066 5B01     		lsls	r3, r3, #5
 424 0068 0493     		str	r3, [sp, #16]
 534:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 425              		.loc 1 534 3 is_stmt 1 view .LVU116
 534:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 426              		.loc 1 534 24 is_stmt 0 view .LVU117
 427 006a 0623     		movs	r3, #6
 428 006c 0593     		str	r3, [sp, #20]
 535:Src/main.c    **** 
 429              		.loc 1 535 3 is_stmt 1 view .LVU118
 430 006e 03A9     		add	r1, sp, #12
 431 0070 2000     		movs	r0, r4
 432 0072 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 433              	.LVL10:
 537:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 434              		.loc 1 537 3 view .LVU119
 537:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 435              		.loc 1 537 19 is_stmt 0 view .LVU120
 436 0076 0396     		str	r6, [sp, #12]
 538:Src/main.c    **** 
 437              		.loc 1 538 3 is_stmt 1 view .LVU121
 438 0078 03A9     		add	r1, sp, #12
 439 007a 2000     		movs	r0, r4
 440 007c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 441              	.LVL11:
 540:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 442              		.loc 1 540 3 view .LVU122
 540:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 443              		.loc 1 540 19 is_stmt 0 view .LVU123
 444 0080 0223     		movs	r3, #2
 445 0082 0393     		str	r3, [sp, #12]
 541:Src/main.c    **** 
 446              		.loc 1 541 3 is_stmt 1 view .LVU124
 447 0084 03A9     		add	r1, sp, #12
 448 0086 2000     		movs	r0, r4
 449 0088 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 450              	.LVL12:
 543:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 451              		.loc 1 543 3 view .LVU125
 543:Src/main.c    ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 452              		.loc 1 543 19 is_stmt 0 view .LVU126
 453 008c 0523     		movs	r3, #5
 454 008e 0393     		str	r3, [sp, #12]
 544:Src/main.c    **** 
 455              		.loc 1 544 3 is_stmt 1 view .LVU127
 456 0090 03A9     		add	r1, sp, #12
 457 0092 2000     		movs	r0, r4
 458 0094 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 459              	.LVL13:
 546:Src/main.c    **** }
 460              		.loc 1 546 3 view .LVU128
 461 0098 2000     		movs	r0, r4
 462 009a FFF7FEFF 		bl	HAL_ADC_MspInit
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 44


 463              	.LVL14:
 547:Src/main.c    **** 
 464              		.loc 1 547 1 is_stmt 0 view .LVU129
 465 009e 06B0     		add	sp, sp, #24
 466              		@ sp needed
 467 00a0 70BD     		pop	{r4, r5, r6, pc}
 468              	.L13:
 469 00a2 C046     		.align	2
 470              	.L12:
 471 00a4 00100240 		.word	1073876992
 472 00a8 00000000 		.word	hadc
 473 00ac 00240140 		.word	1073816576
 474              		.cfi_endproc
 475              	.LFE50:
 477              		.section	.text.MX_I2C1_Init,"ax",%progbits
 478              		.align	1
 479              		.syntax unified
 480              		.code	16
 481              		.thumb_func
 483              	MX_I2C1_Init:
 484              	.LFB51:
 550:Src/main.c    **** 
 485              		.loc 1 550 1 is_stmt 1 view -0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489 0000 10B5     		push	{r4, lr}
 490              	.LCFI6:
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 4, -8
 493              		.cfi_offset 14, -4
 552:Src/main.c    ****   hi2c1.Init.Timing = 0x2000090E;
 494              		.loc 1 552 3 view .LVU131
 552:Src/main.c    ****   hi2c1.Init.Timing = 0x2000090E;
 495              		.loc 1 552 18 is_stmt 0 view .LVU132
 496 0002 0D4C     		ldr	r4, .L15
 497 0004 0D4B     		ldr	r3, .L15+4
 498 0006 2360     		str	r3, [r4]
 553:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 499              		.loc 1 553 3 is_stmt 1 view .LVU133
 553:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 500              		.loc 1 553 21 is_stmt 0 view .LVU134
 501 0008 0D4B     		ldr	r3, .L15+8
 502 000a 6360     		str	r3, [r4, #4]
 554:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 503              		.loc 1 554 3 is_stmt 1 view .LVU135
 554:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 504              		.loc 1 554 26 is_stmt 0 view .LVU136
 505 000c 0023     		movs	r3, #0
 506 000e A360     		str	r3, [r4, #8]
 555:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 507              		.loc 1 555 3 is_stmt 1 view .LVU137
 555:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 508              		.loc 1 555 29 is_stmt 0 view .LVU138
 509 0010 0122     		movs	r2, #1
 510 0012 E260     		str	r2, [r4, #12]
 556:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 45


 511              		.loc 1 556 3 is_stmt 1 view .LVU139
 556:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 512              		.loc 1 556 30 is_stmt 0 view .LVU140
 513 0014 2361     		str	r3, [r4, #16]
 557:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 514              		.loc 1 557 3 is_stmt 1 view .LVU141
 557:Src/main.c    ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 515              		.loc 1 557 26 is_stmt 0 view .LVU142
 516 0016 6361     		str	r3, [r4, #20]
 558:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 517              		.loc 1 558 3 is_stmt 1 view .LVU143
 558:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 518              		.loc 1 558 31 is_stmt 0 view .LVU144
 519 0018 A361     		str	r3, [r4, #24]
 559:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 520              		.loc 1 559 3 is_stmt 1 view .LVU145
 559:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 521              		.loc 1 559 30 is_stmt 0 view .LVU146
 522 001a E361     		str	r3, [r4, #28]
 560:Src/main.c    ****   HAL_I2C_Init(&hi2c1);
 523              		.loc 1 560 3 is_stmt 1 view .LVU147
 560:Src/main.c    ****   HAL_I2C_Init(&hi2c1);
 524              		.loc 1 560 28 is_stmt 0 view .LVU148
 525 001c 2362     		str	r3, [r4, #32]
 561:Src/main.c    **** 
 526              		.loc 1 561 3 is_stmt 1 view .LVU149
 527 001e 2000     		movs	r0, r4
 528 0020 FFF7FEFF 		bl	HAL_I2C_Init
 529              	.LVL15:
 563:Src/main.c    **** 
 530              		.loc 1 563 3 view .LVU150
 531 0024 0021     		movs	r1, #0
 532 0026 2000     		movs	r0, r4
 533 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 534              	.LVL16:
 565:Src/main.c    **** }
 535              		.loc 1 565 3 view .LVU151
 536 002c 0021     		movs	r1, #0
 537 002e 2000     		movs	r0, r4
 538 0030 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 539              	.LVL17:
 566:Src/main.c    **** 
 540              		.loc 1 566 1 is_stmt 0 view .LVU152
 541              		@ sp needed
 542 0034 10BD     		pop	{r4, pc}
 543              	.L16:
 544 0036 C046     		.align	2
 545              	.L15:
 546 0038 00000000 		.word	hi2c1
 547 003c 00540040 		.word	1073763328
 548 0040 0E090020 		.word	536873230
 549              		.cfi_endproc
 550              	.LFE51:
 552              		.section	.text.MX_I2C2_Init,"ax",%progbits
 553              		.align	1
 554              		.syntax unified
 555              		.code	16
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 46


 556              		.thumb_func
 558              	MX_I2C2_Init:
 559              	.LFB52:
 569:Src/main.c    **** 
 560              		.loc 1 569 1 is_stmt 1 view -0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564 0000 10B5     		push	{r4, lr}
 565              	.LCFI7:
 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 4, -8
 568              		.cfi_offset 14, -4
 571:Src/main.c    ****   hi2c2.Init.Timing = 0x20303E5D;
 569              		.loc 1 571 3 view .LVU154
 571:Src/main.c    ****   hi2c2.Init.Timing = 0x20303E5D;
 570              		.loc 1 571 18 is_stmt 0 view .LVU155
 571 0002 0D4C     		ldr	r4, .L18
 572 0004 0D4B     		ldr	r3, .L18+4
 573 0006 2360     		str	r3, [r4]
 572:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 574              		.loc 1 572 3 is_stmt 1 view .LVU156
 572:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 575              		.loc 1 572 21 is_stmt 0 view .LVU157
 576 0008 0D4B     		ldr	r3, .L18+8
 577 000a 6360     		str	r3, [r4, #4]
 573:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 578              		.loc 1 573 3 is_stmt 1 view .LVU158
 573:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 579              		.loc 1 573 26 is_stmt 0 view .LVU159
 580 000c 0023     		movs	r3, #0
 581 000e A360     		str	r3, [r4, #8]
 574:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 582              		.loc 1 574 3 is_stmt 1 view .LVU160
 574:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 583              		.loc 1 574 29 is_stmt 0 view .LVU161
 584 0010 0122     		movs	r2, #1
 585 0012 E260     		str	r2, [r4, #12]
 575:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 586              		.loc 1 575 3 is_stmt 1 view .LVU162
 575:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 587              		.loc 1 575 30 is_stmt 0 view .LVU163
 588 0014 2361     		str	r3, [r4, #16]
 576:Src/main.c    ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 589              		.loc 1 576 3 is_stmt 1 view .LVU164
 576:Src/main.c    ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 590              		.loc 1 576 26 is_stmt 0 view .LVU165
 591 0016 6361     		str	r3, [r4, #20]
 577:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 592              		.loc 1 577 3 is_stmt 1 view .LVU166
 577:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 593              		.loc 1 577 31 is_stmt 0 view .LVU167
 594 0018 A361     		str	r3, [r4, #24]
 578:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 595              		.loc 1 578 3 is_stmt 1 view .LVU168
 578:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 596              		.loc 1 578 30 is_stmt 0 view .LVU169
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 47


 597 001a E361     		str	r3, [r4, #28]
 579:Src/main.c    ****   HAL_I2C_Init(&hi2c2);
 598              		.loc 1 579 3 is_stmt 1 view .LVU170
 579:Src/main.c    ****   HAL_I2C_Init(&hi2c2);
 599              		.loc 1 579 28 is_stmt 0 view .LVU171
 600 001c 2362     		str	r3, [r4, #32]
 580:Src/main.c    **** 
 601              		.loc 1 580 3 is_stmt 1 view .LVU172
 602 001e 2000     		movs	r0, r4
 603 0020 FFF7FEFF 		bl	HAL_I2C_Init
 604              	.LVL18:
 582:Src/main.c    **** 
 605              		.loc 1 582 3 view .LVU173
 606 0024 0021     		movs	r1, #0
 607 0026 2000     		movs	r0, r4
 608 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 609              	.LVL19:
 584:Src/main.c    **** }
 610              		.loc 1 584 3 view .LVU174
 611 002c 0021     		movs	r1, #0
 612 002e 2000     		movs	r0, r4
 613 0030 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 614              	.LVL20:
 585:Src/main.c    **** 
 615              		.loc 1 585 1 is_stmt 0 view .LVU175
 616              		@ sp needed
 617 0034 10BD     		pop	{r4, pc}
 618              	.L19:
 619 0036 C046     		.align	2
 620              	.L18:
 621 0038 00000000 		.word	hi2c2
 622 003c 00580040 		.word	1073764352
 623 0040 5D3E3020 		.word	540032605
 624              		.cfi_endproc
 625              	.LFE52:
 627              		.section	.text.TIM3_Init,"ax",%progbits
 628              		.align	1
 629              		.syntax unified
 630              		.code	16
 631              		.thumb_func
 633              	TIM3_Init:
 634              	.LFB54:
 597:Src/main.c    ****   __HAL_RCC_TIM3_CLK_ENABLE();
 635              		.loc 1 597 1 is_stmt 1 view -0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 24
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639 0000 10B5     		push	{r4, lr}
 640              	.LCFI8:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 4, -8
 643              		.cfi_offset 14, -4
 644 0002 86B0     		sub	sp, sp, #24
 645              	.LCFI9:
 646              		.cfi_def_cfa_offset 32
 598:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 647              		.loc 1 598 3 view .LVU177
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 48


 648              	.LBB20:
 598:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 649              		.loc 1 598 3 view .LVU178
 598:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 650              		.loc 1 598 3 view .LVU179
 651 0004 124A     		ldr	r2, .L21
 652 0006 D169     		ldr	r1, [r2, #28]
 653 0008 0223     		movs	r3, #2
 654 000a 1943     		orrs	r1, r3
 655 000c D161     		str	r1, [r2, #28]
 598:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 656              		.loc 1 598 3 view .LVU180
 657 000e D269     		ldr	r2, [r2, #28]
 658 0010 1340     		ands	r3, r2
 659 0012 0193     		str	r3, [sp, #4]
 598:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 660              		.loc 1 598 3 view .LVU181
 661 0014 019B     		ldr	r3, [sp, #4]
 662              	.LBE20:
 598:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 663              		.loc 1 598 3 view .LVU182
 599:Src/main.c    **** 
 664              		.loc 1 599 3 view .LVU183
 599:Src/main.c    **** 
 665              		.loc 1 599 26 is_stmt 0 view .LVU184
 666 0016 1022     		movs	r2, #16
 667 0018 0021     		movs	r1, #0
 668 001a 02A8     		add	r0, sp, #8
 669 001c FFF7FEFF 		bl	memset
 670              	.LVL21:
 606:Src/main.c    ****   htim3.Init.Period = (CDC_POLLING_INTERVAL*1000) - 1;
 671              		.loc 1 606 3 is_stmt 1 view .LVU185
 606:Src/main.c    ****   htim3.Init.Period = (CDC_POLLING_INTERVAL*1000) - 1;
 672              		.loc 1 606 18 is_stmt 0 view .LVU186
 673 0020 0C4C     		ldr	r4, .L21+4
 674 0022 0D4B     		ldr	r3, .L21+8
 675 0024 2360     		str	r3, [r4]
 607:Src/main.c    ****   htim3.Init.Prescaler = 399;
 676              		.loc 1 607 3 is_stmt 1 view .LVU187
 607:Src/main.c    ****   htim3.Init.Prescaler = 399;
 677              		.loc 1 607 21 is_stmt 0 view .LVU188
 678 0026 0D4B     		ldr	r3, .L21+12
 679 0028 E360     		str	r3, [r4, #12]
 608:Src/main.c    ****   htim3.Init.ClockDivision = 0;
 680              		.loc 1 608 3 is_stmt 1 view .LVU189
 608:Src/main.c    ****   htim3.Init.ClockDivision = 0;
 681              		.loc 1 608 24 is_stmt 0 view .LVU190
 682 002a 9023     		movs	r3, #144
 683 002c FF33     		adds	r3, r3, #255
 684 002e 6360     		str	r3, [r4, #4]
 609:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 685              		.loc 1 609 3 is_stmt 1 view .LVU191
 609:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 686              		.loc 1 609 28 is_stmt 0 view .LVU192
 687 0030 0023     		movs	r3, #0
 688 0032 2361     		str	r3, [r4, #16]
 610:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 49


 689              		.loc 1 610 3 is_stmt 1 view .LVU193
 610:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 690              		.loc 1 610 26 is_stmt 0 view .LVU194
 691 0034 A360     		str	r3, [r4, #8]
 611:Src/main.c    ****   if(HAL_TIM_Base_Init(&htim3) != HAL_OK)
 692              		.loc 1 611 3 is_stmt 1 view .LVU195
 611:Src/main.c    ****   if(HAL_TIM_Base_Init(&htim3) != HAL_OK)
 693              		.loc 1 611 32 is_stmt 0 view .LVU196
 694 0036 A361     		str	r3, [r4, #24]
 612:Src/main.c    ****   {
 695              		.loc 1 612 3 is_stmt 1 view .LVU197
 612:Src/main.c    ****   {
 696              		.loc 1 612 6 is_stmt 0 view .LVU198
 697 0038 2000     		movs	r0, r4
 698 003a FFF7FEFF 		bl	HAL_TIM_Base_Init
 699              	.LVL22:
 615:Src/main.c    ****   }
 700              		.loc 1 615 5 is_stmt 1 view .LVU199
 617:Src/main.c    ****   HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig);
 701              		.loc 1 617 3 view .LVU200
 617:Src/main.c    ****   HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig);
 702              		.loc 1 617 34 is_stmt 0 view .LVU201
 703 003e 8023     		movs	r3, #128
 704 0040 5B01     		lsls	r3, r3, #5
 705 0042 0293     		str	r3, [sp, #8]
 618:Src/main.c    **** }
 706              		.loc 1 618 3 is_stmt 1 view .LVU202
 707 0044 02A9     		add	r1, sp, #8
 708 0046 2000     		movs	r0, r4
 709 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 710              	.LVL23:
 619:Src/main.c    **** 
 711              		.loc 1 619 1 is_stmt 0 view .LVU203
 712 004c 06B0     		add	sp, sp, #24
 713              		@ sp needed
 714 004e 10BD     		pop	{r4, pc}
 715              	.L22:
 716              		.align	2
 717              	.L21:
 718 0050 00100240 		.word	1073876992
 719 0054 00000000 		.word	htim3
 720 0058 00040040 		.word	1073742848
 721 005c 0F270000 		.word	9999
 722              		.cfi_endproc
 723              	.LFE54:
 725              		.section	.text.MX_TIM1_Init,"ax",%progbits
 726              		.align	1
 727              		.syntax unified
 728              		.code	16
 729              		.thumb_func
 731              	MX_TIM1_Init:
 732              	.LFB55:
 622:Src/main.c    **** 
 733              		.loc 1 622 1 is_stmt 1 view -0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 88
 736              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 50


 737 0000 70B5     		push	{r4, r5, r6, lr}
 738              	.LCFI10:
 739              		.cfi_def_cfa_offset 16
 740              		.cfi_offset 4, -16
 741              		.cfi_offset 5, -12
 742              		.cfi_offset 6, -8
 743              		.cfi_offset 14, -4
 744 0002 96B0     		sub	sp, sp, #88
 745              	.LCFI11:
 746              		.cfi_def_cfa_offset 104
 624:Src/main.c    **** 
 747              		.loc 1 624 3 view .LVU205
 748              	.LBB21:
 624:Src/main.c    **** 
 749              		.loc 1 624 3 view .LVU206
 624:Src/main.c    **** 
 750              		.loc 1 624 3 view .LVU207
 751 0004 354B     		ldr	r3, .L24
 752 0006 9A69     		ldr	r2, [r3, #24]
 753 0008 8025     		movs	r5, #128
 754 000a 2D01     		lsls	r5, r5, #4
 755 000c 2A43     		orrs	r2, r5
 756 000e 9A61     		str	r2, [r3, #24]
 624:Src/main.c    **** 
 757              		.loc 1 624 3 view .LVU208
 758 0010 9B69     		ldr	r3, [r3, #24]
 759 0012 2B40     		ands	r3, r5
 760 0014 0193     		str	r3, [sp, #4]
 624:Src/main.c    **** 
 761              		.loc 1 624 3 view .LVU209
 762 0016 019B     		ldr	r3, [sp, #4]
 763              	.LBE21:
 624:Src/main.c    **** 
 764              		.loc 1 624 3 view .LVU210
 626:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 765              		.loc 1 626 3 view .LVU211
 626:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 766              		.loc 1 626 26 is_stmt 0 view .LVU212
 767 0018 1022     		movs	r2, #16
 768 001a 0021     		movs	r1, #0
 769 001c 12A8     		add	r0, sp, #72
 770 001e FFF7FEFF 		bl	memset
 771              	.LVL24:
 627:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 772              		.loc 1 627 3 is_stmt 1 view .LVU213
 627:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 773              		.loc 1 627 27 is_stmt 0 view .LVU214
 774 0022 0822     		movs	r2, #8
 775 0024 0021     		movs	r1, #0
 776 0026 10A8     		add	r0, sp, #64
 777 0028 FFF7FEFF 		bl	memset
 778              	.LVL25:
 628:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 779              		.loc 1 628 3 is_stmt 1 view .LVU215
 628:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 780              		.loc 1 628 22 is_stmt 0 view .LVU216
 781 002c 1C22     		movs	r2, #28
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 51


 782 002e 0021     		movs	r1, #0
 783 0030 09A8     		add	r0, sp, #36
 784 0032 FFF7FEFF 		bl	memset
 785              	.LVL26:
 629:Src/main.c    **** 
 786              		.loc 1 629 3 is_stmt 1 view .LVU217
 629:Src/main.c    **** 
 787              		.loc 1 629 34 is_stmt 0 view .LVU218
 788 0036 1C22     		movs	r2, #28
 789 0038 0021     		movs	r1, #0
 790 003a 02A8     		add	r0, sp, #8
 791 003c FFF7FEFF 		bl	memset
 792              	.LVL27:
 631:Src/main.c    ****   htim1.Init.Prescaler = 2048; // 2048
 793              		.loc 1 631 3 is_stmt 1 view .LVU219
 631:Src/main.c    ****   htim1.Init.Prescaler = 2048; // 2048
 794              		.loc 1 631 18 is_stmt 0 view .LVU220
 795 0040 274C     		ldr	r4, .L24+4
 796 0042 284B     		ldr	r3, .L24+8
 797 0044 2360     		str	r3, [r4]
 632:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 798              		.loc 1 632 3 is_stmt 1 view .LVU221
 632:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 799              		.loc 1 632 24 is_stmt 0 view .LVU222
 800 0046 6560     		str	r5, [r4, #4]
 633:Src/main.c    ****   htim1.Init.Period = 4096; // 4096
 801              		.loc 1 633 3 is_stmt 1 view .LVU223
 633:Src/main.c    ****   htim1.Init.Period = 4096; // 4096
 802              		.loc 1 633 26 is_stmt 0 view .LVU224
 803 0048 0025     		movs	r5, #0
 804 004a A560     		str	r5, [r4, #8]
 634:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
 805              		.loc 1 634 3 is_stmt 1 view .LVU225
 634:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
 806              		.loc 1 634 21 is_stmt 0 view .LVU226
 807 004c 8026     		movs	r6, #128
 808 004e 7601     		lsls	r6, r6, #5
 809 0050 E660     		str	r6, [r4, #12]
 635:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 810              		.loc 1 635 3 is_stmt 1 view .LVU227
 635:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 811              		.loc 1 635 28 is_stmt 0 view .LVU228
 812 0052 8023     		movs	r3, #128
 813 0054 9B00     		lsls	r3, r3, #2
 814 0056 2361     		str	r3, [r4, #16]
 636:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 815              		.loc 1 636 3 is_stmt 1 view .LVU229
 636:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 816              		.loc 1 636 32 is_stmt 0 view .LVU230
 817 0058 6561     		str	r5, [r4, #20]
 637:Src/main.c    ****   HAL_TIM_Base_Init(&htim1);
 818              		.loc 1 637 3 is_stmt 1 view .LVU231
 637:Src/main.c    ****   HAL_TIM_Base_Init(&htim1);
 819              		.loc 1 637 32 is_stmt 0 view .LVU232
 820 005a 813B     		subs	r3, r3, #129
 821 005c FF3B     		subs	r3, r3, #255
 822 005e A361     		str	r3, [r4, #24]
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 52


 638:Src/main.c    **** 
 823              		.loc 1 638 3 is_stmt 1 view .LVU233
 824 0060 2000     		movs	r0, r4
 825 0062 FFF7FEFF 		bl	HAL_TIM_Base_Init
 826              	.LVL28:
 640:Src/main.c    ****   HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig);
 827              		.loc 1 640 3 view .LVU234
 640:Src/main.c    ****   HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig);
 828              		.loc 1 640 34 is_stmt 0 view .LVU235
 829 0066 1296     		str	r6, [sp, #72]
 641:Src/main.c    **** 
 830              		.loc 1 641 3 is_stmt 1 view .LVU236
 831 0068 12A9     		add	r1, sp, #72
 832 006a 2000     		movs	r0, r4
 833 006c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 834              	.LVL29:
 643:Src/main.c    ****   HAL_TIM_OC_Init(&htim1);
 835              		.loc 1 643 3 view .LVU237
 836 0070 2000     		movs	r0, r4
 837 0072 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 838              	.LVL30:
 644:Src/main.c    **** 
 839              		.loc 1 644 3 view .LVU238
 840 0076 2000     		movs	r0, r4
 841 0078 FFF7FEFF 		bl	HAL_TIM_OC_Init
 842              	.LVL31:
 646:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 843              		.loc 1 646 3 view .LVU239
 646:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 844              		.loc 1 646 37 is_stmt 0 view .LVU240
 845 007c 1095     		str	r5, [sp, #64]
 647:Src/main.c    ****   HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 846              		.loc 1 647 3 is_stmt 1 view .LVU241
 647:Src/main.c    ****   HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 847              		.loc 1 647 33 is_stmt 0 view .LVU242
 848 007e 1195     		str	r5, [sp, #68]
 648:Src/main.c    **** 
 849              		.loc 1 648 3 is_stmt 1 view .LVU243
 850 0080 10A9     		add	r1, sp, #64
 851 0082 2000     		movs	r0, r4
 852 0084 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 853              	.LVL32:
 650:Src/main.c    ****   sConfigOC.Pulse = 50;
 854              		.loc 1 650 3 view .LVU244
 650:Src/main.c    ****   sConfigOC.Pulse = 50;
 855              		.loc 1 650 20 is_stmt 0 view .LVU245
 856 0088 6023     		movs	r3, #96
 857 008a 0993     		str	r3, [sp, #36]
 651:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 858              		.loc 1 651 3 is_stmt 1 view .LVU246
 651:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 859              		.loc 1 651 19 is_stmt 0 view .LVU247
 860 008c 2E3B     		subs	r3, r3, #46
 861 008e 0A93     		str	r3, [sp, #40]
 652:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 862              		.loc 1 652 3 is_stmt 1 view .LVU248
 652:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 53


 863              		.loc 1 652 24 is_stmt 0 view .LVU249
 864 0090 0B95     		str	r5, [sp, #44]
 653:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 865              		.loc 1 653 3 is_stmt 1 view .LVU250
 653:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 866              		.loc 1 653 25 is_stmt 0 view .LVU251
 867 0092 0C95     		str	r5, [sp, #48]
 654:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 868              		.loc 1 654 3 is_stmt 1 view .LVU252
 654:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 869              		.loc 1 654 24 is_stmt 0 view .LVU253
 870 0094 0D95     		str	r5, [sp, #52]
 655:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 871              		.loc 1 655 3 is_stmt 1 view .LVU254
 655:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 872              		.loc 1 655 25 is_stmt 0 view .LVU255
 873 0096 0E95     		str	r5, [sp, #56]
 656:Src/main.c    ****   HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1);
 874              		.loc 1 656 3 is_stmt 1 view .LVU256
 656:Src/main.c    ****   HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1);
 875              		.loc 1 656 26 is_stmt 0 view .LVU257
 876 0098 0F95     		str	r5, [sp, #60]
 657:Src/main.c    **** 
 877              		.loc 1 657 3 is_stmt 1 view .LVU258
 878 009a 0022     		movs	r2, #0
 879 009c 09A9     		add	r1, sp, #36
 880 009e 2000     		movs	r0, r4
 881 00a0 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 882              	.LVL33:
 659:Src/main.c    ****   sConfigOC.Pulse = 4050;
 883              		.loc 1 659 3 view .LVU259
 659:Src/main.c    ****   sConfigOC.Pulse = 4050;
 884              		.loc 1 659 20 is_stmt 0 view .LVU260
 885 00a4 7023     		movs	r3, #112
 886 00a6 0993     		str	r3, [sp, #36]
 660:Src/main.c    ****   HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4);
 887              		.loc 1 660 3 is_stmt 1 view .LVU261
 660:Src/main.c    ****   HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4);
 888              		.loc 1 660 19 is_stmt 0 view .LVU262
 889 00a8 0F4B     		ldr	r3, .L24+12
 890 00aa 0A93     		str	r3, [sp, #40]
 661:Src/main.c    **** 
 891              		.loc 1 661 3 is_stmt 1 view .LVU263
 892 00ac 0C22     		movs	r2, #12
 893 00ae 09A9     		add	r1, sp, #36
 894 00b0 2000     		movs	r0, r4
 895 00b2 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 896              	.LVL34:
 663:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 897              		.loc 1 663 3 view .LVU264
 663:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 898              		.loc 1 663 40 is_stmt 0 view .LVU265
 899 00b6 0295     		str	r5, [sp, #8]
 664:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 900              		.loc 1 664 3 is_stmt 1 view .LVU266
 664:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 901              		.loc 1 664 41 is_stmt 0 view .LVU267
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 54


 902 00b8 0395     		str	r5, [sp, #12]
 665:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 903              		.loc 1 665 3 is_stmt 1 view .LVU268
 665:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 904              		.loc 1 665 34 is_stmt 0 view .LVU269
 905 00ba 0495     		str	r5, [sp, #16]
 666:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 906              		.loc 1 666 3 is_stmt 1 view .LVU270
 666:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 907              		.loc 1 666 33 is_stmt 0 view .LVU271
 908 00bc 0595     		str	r5, [sp, #20]
 667:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 909              		.loc 1 667 3 is_stmt 1 view .LVU272
 667:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 910              		.loc 1 667 35 is_stmt 0 view .LVU273
 911 00be 0695     		str	r5, [sp, #24]
 668:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 912              		.loc 1 668 3 is_stmt 1 view .LVU274
 668:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 913              		.loc 1 668 38 is_stmt 0 view .LVU275
 914 00c0 8023     		movs	r3, #128
 915 00c2 9B01     		lsls	r3, r3, #6
 916 00c4 0793     		str	r3, [sp, #28]
 669:Src/main.c    ****   HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig);
 917              		.loc 1 669 3 is_stmt 1 view .LVU276
 669:Src/main.c    ****   HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig);
 918              		.loc 1 669 40 is_stmt 0 view .LVU277
 919 00c6 0895     		str	r5, [sp, #32]
 670:Src/main.c    **** 
 920              		.loc 1 670 3 is_stmt 1 view .LVU278
 921 00c8 02A9     		add	r1, sp, #8
 922 00ca 2000     		movs	r0, r4
 923 00cc FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 924              	.LVL35:
 672:Src/main.c    **** }
 925              		.loc 1 672 3 view .LVU279
 926 00d0 2000     		movs	r0, r4
 927 00d2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 928              	.LVL36:
 673:Src/main.c    **** /*
 929              		.loc 1 673 1 is_stmt 0 view .LVU280
 930 00d6 16B0     		add	sp, sp, #88
 931              		@ sp needed
 932 00d8 70BD     		pop	{r4, r5, r6, pc}
 933              	.L25:
 934 00da C046     		.align	2
 935              	.L24:
 936 00dc 00100240 		.word	1073876992
 937 00e0 00000000 		.word	htim1
 938 00e4 002C0140 		.word	1073818624
 939 00e8 D20F0000 		.word	4050
 940              		.cfi_endproc
 941              	.LFE55:
 943              		.section	.text.MX_IWDG_Init,"ax",%progbits
 944              		.align	1
 945              		.syntax unified
 946              		.code	16
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 55


 947              		.thumb_func
 949              	MX_IWDG_Init:
 950              	.LFB53:
 588:Src/main.c    ****   hiwdg.Instance = IWDG;
 951              		.loc 1 588 1 is_stmt 1 view -0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955 0000 10B5     		push	{r4, lr}
 956              	.LCFI12:
 957              		.cfi_def_cfa_offset 8
 958              		.cfi_offset 4, -8
 959              		.cfi_offset 14, -4
 589:Src/main.c    ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 960              		.loc 1 589 3 view .LVU282
 589:Src/main.c    ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 961              		.loc 1 589 18 is_stmt 0 view .LVU283
 962 0002 0548     		ldr	r0, .L27
 963 0004 054B     		ldr	r3, .L27+4
 964 0006 0360     		str	r3, [r0]
 590:Src/main.c    ****   hiwdg.Init.Window = 4095;
 965              		.loc 1 590 3 is_stmt 1 view .LVU284
 590:Src/main.c    ****   hiwdg.Init.Window = 4095;
 966              		.loc 1 590 24 is_stmt 0 view .LVU285
 967 0008 0023     		movs	r3, #0
 968 000a 4360     		str	r3, [r0, #4]
 591:Src/main.c    ****   hiwdg.Init.Reload = 4095;
 969              		.loc 1 591 3 is_stmt 1 view .LVU286
 591:Src/main.c    ****   hiwdg.Init.Reload = 4095;
 970              		.loc 1 591 21 is_stmt 0 view .LVU287
 971 000c 044B     		ldr	r3, .L27+8
 972 000e C360     		str	r3, [r0, #12]
 592:Src/main.c    ****   HAL_IWDG_Init(&hiwdg);
 973              		.loc 1 592 3 is_stmt 1 view .LVU288
 592:Src/main.c    ****   HAL_IWDG_Init(&hiwdg);
 974              		.loc 1 592 21 is_stmt 0 view .LVU289
 975 0010 8360     		str	r3, [r0, #8]
 593:Src/main.c    **** }
 976              		.loc 1 593 3 is_stmt 1 view .LVU290
 977 0012 FFF7FEFF 		bl	HAL_IWDG_Init
 978              	.LVL37:
 594:Src/main.c    **** 
 979              		.loc 1 594 1 is_stmt 0 view .LVU291
 980              		@ sp needed
 981 0016 10BD     		pop	{r4, pc}
 982              	.L28:
 983              		.align	2
 984              	.L27:
 985 0018 00000000 		.word	hiwdg
 986 001c 00300040 		.word	1073754112
 987 0020 FF0F0000 		.word	4095
 988              		.cfi_endproc
 989              	.LFE53:
 991              		.global	__aeabi_fcmpge
 992              		.section	.text.check_usbpd,"ax",%progbits
 993              		.align	1
 994              		.global	check_usbpd
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 56


 995              		.syntax unified
 996              		.code	16
 997              		.thumb_func
 999              	check_usbpd:
 1000              	.LFB38:
 305:Src/main.c    ****  #ifdef CHECKUSBPD
 1001              		.loc 1 305 27 is_stmt 1 view -0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005 0000 10B5     		push	{r4, lr}
 1006              	.LCFI13:
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 4, -8
 1009              		.cfi_offset 14, -4
 307:Src/main.c    ****  #else
 1010              		.loc 1 307 3 view .LVU293
 307:Src/main.c    ****  #else
 1011              		.loc 1 307 12 is_stmt 0 view .LVU294
 1012 0002 0A4B     		ldr	r3, .L36
 1013 0004 9868     		ldr	r0, [r3, #8]
 307:Src/main.c    ****  #else
 1014              		.loc 1 307 32 view .LVU295
 1015 0006 0A49     		ldr	r1, .L36+4
 1016 0008 FFF7FEFF 		bl	__aeabi_fcmpge
 1017              	.LVL38:
 1018 000c 0028     		cmp	r0, #0
 1019 000e 09D0     		beq	.L35
 307:Src/main.c    ****  #else
 1020              		.loc 1 307 36 discriminator 1 view .LVU296
 1021 0010 064B     		ldr	r3, .L36
 1022 0012 5869     		ldr	r0, [r3, #20]
 307:Src/main.c    ****  #else
 1023              		.loc 1 307 32 discriminator 1 view .LVU297
 1024 0014 FE21     		movs	r1, #254
 1025 0016 8905     		lsls	r1, r1, #22
 1026 0018 FFF7FEFF 		bl	__aeabi_fcmpge
 1027              	.LVL39:
 1028 001c 0028     		cmp	r0, #0
 1029 001e 02D0     		beq	.L30
 307:Src/main.c    ****  #else
 1030              		.loc 1 307 32 discriminator 3 view .LVU298
 1031 0020 0120     		movs	r0, #1
 1032 0022 00E0     		b	.L30
 1033              	.L35:
 307:Src/main.c    ****  #else
 1034              		.loc 1 307 32 discriminator 4 view .LVU299
 1035 0024 0020     		movs	r0, #0
 1036              	.L30:
 307:Src/main.c    ****  #else
 1037              		.loc 1 307 32 discriminator 7 view .LVU300
 1038 0026 C0B2     		uxtb	r0, r0
 311:Src/main.c    **** 
 1039              		.loc 1 311 1 view .LVU301
 1040              		@ sp needed
 1041 0028 10BD     		pop	{r4, pc}
 1042              	.L37:
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 57


 1043 002a C046     		.align	2
 1044              	.L36:
 1045 002c 00000000 		.word	s
 1046 0030 00007041 		.word	1097859072
 1047              		.cfi_endproc
 1048              	.LFE38:
 1050              		.global	__aeabi_ui2f
 1051              		.global	__aeabi_f2d
 1052              		.global	__aeabi_ddiv
 1053              		.global	__aeabi_dmul
 1054              		.global	__aeabi_dsub
 1055              		.global	__aeabi_d2f
 1056              		.global	__aeabi_i2f
 1057              		.global	__aeabi_fsub
 1058              		.global	__aeabi_fmul
 1059              		.global	__aeabi_fdiv
 1060              		.global	__aeabi_fadd
 1061              		.global	__aeabi_i2d
 1062              		.global	__aeabi_dadd
 1063              		.global	__aeabi_fcmple
 1064              		.global	__aeabi_fcmpgt
 1065              		.global	__aeabi_fcmplt
 1066              		.global	__aeabi_f2iz
 1067              		.section	.text.reg,"ax",%progbits
 1068              		.align	1
 1069              		.global	reg
 1070              		.syntax unified
 1071              		.code	16
 1072              		.thumb_func
 1074              	reg:
 1075              	.LFB39:
 314:Src/main.c    ****   s.tref = ((((float)ADC_raw[3]/4095.0)*3.3)-0.5)/0.01;
 1076              		.loc 1 314 16 is_stmt 1 view -0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1081              	.LCFI14:
 1082              		.cfi_def_cfa_offset 20
 1083              		.cfi_offset 4, -20
 1084              		.cfi_offset 5, -16
 1085              		.cfi_offset 6, -12
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 C646     		mov	lr, r8
 1089 0004 00B5     		push	{lr}
 1090              	.LCFI15:
 1091              		.cfi_def_cfa_offset 24
 1092              		.cfi_offset 8, -24
 315:Src/main.c    ****   s.ttip = ((ADC_raw[1]-tipcal.offset)*tipcal.coefficient)/1000+s.tref;
 1093              		.loc 1 315 3 view .LVU303
 315:Src/main.c    ****   s.ttip = ((ADC_raw[1]-tipcal.offset)*tipcal.coefficient)/1000+s.tref;
 1094              		.loc 1 315 29 is_stmt 0 view .LVU304
 1095 0006 874B     		ldr	r3, .L56
 1096 0008 9846     		mov	r8, r3
 1097 000a D888     		ldrh	r0, [r3, #6]
 315:Src/main.c    ****   s.ttip = ((ADC_raw[1]-tipcal.offset)*tipcal.coefficient)/1000+s.tref;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 58


 1098              		.loc 1 315 15 view .LVU305
 1099 000c FFF7FEFF 		bl	__aeabi_ui2f
 1100              	.LVL40:
 1101 0010 FFF7FEFF 		bl	__aeabi_f2d
 1102              	.LVL41:
 315:Src/main.c    ****   s.ttip = ((ADC_raw[1]-tipcal.offset)*tipcal.coefficient)/1000+s.tref;
 1103              		.loc 1 315 32 view .LVU306
 1104 0014 0022     		movs	r2, #0
 1105 0016 844B     		ldr	r3, .L56+4
 1106 0018 FFF7FEFF 		bl	__aeabi_ddiv
 1107              	.LVL42:
 315:Src/main.c    ****   s.ttip = ((ADC_raw[1]-tipcal.offset)*tipcal.coefficient)/1000+s.tref;
 1108              		.loc 1 315 40 view .LVU307
 1109 001c 834A     		ldr	r2, .L56+8
 1110 001e 844B     		ldr	r3, .L56+12
 1111 0020 FFF7FEFF 		bl	__aeabi_dmul
 1112              	.LVL43:
 315:Src/main.c    ****   s.ttip = ((ADC_raw[1]-tipcal.offset)*tipcal.coefficient)/1000+s.tref;
 1113              		.loc 1 315 45 view .LVU308
 1114 0024 0022     		movs	r2, #0
 1115 0026 834B     		ldr	r3, .L56+16
 1116 0028 FFF7FEFF 		bl	__aeabi_dsub
 1117              	.LVL44:
 315:Src/main.c    ****   s.ttip = ((ADC_raw[1]-tipcal.offset)*tipcal.coefficient)/1000+s.tref;
 1118              		.loc 1 315 50 view .LVU309
 1119 002c 824A     		ldr	r2, .L56+20
 1120 002e 834B     		ldr	r3, .L56+24
 1121 0030 FFF7FEFF 		bl	__aeabi_ddiv
 1122              	.LVL45:
 1123 0034 FFF7FEFF 		bl	__aeabi_d2f
 1124              	.LVL46:
 1125 0038 051C     		adds	r5, r0, #0
 315:Src/main.c    ****   s.ttip = ((ADC_raw[1]-tipcal.offset)*tipcal.coefficient)/1000+s.tref;
 1126              		.loc 1 315 10 view .LVU310
 1127 003a 814C     		ldr	r4, .L56+28
 1128 003c A061     		str	r0, [r4, #24]
 316:Src/main.c    ****   s.uin = ((ADC_raw[2]/4095.0)*3.3)*6.6;
 1129              		.loc 1 316 3 is_stmt 1 view .LVU311
 316:Src/main.c    ****   s.uin = ((ADC_raw[2]/4095.0)*3.3)*6.6;
 1130              		.loc 1 316 21 is_stmt 0 view .LVU312
 1131 003e 4346     		mov	r3, r8
 1132 0040 5888     		ldrh	r0, [r3, #2]
 316:Src/main.c    ****   s.uin = ((ADC_raw[2]/4095.0)*3.3)*6.6;
 1133              		.loc 1 316 31 view .LVU313
 1134 0042 804E     		ldr	r6, .L56+32
 1135 0044 3768     		ldr	r7, [r6]
 316:Src/main.c    ****   s.uin = ((ADC_raw[2]/4095.0)*3.3)*6.6;
 1136              		.loc 1 316 24 view .LVU314
 1137 0046 FFF7FEFF 		bl	__aeabi_i2f
 1138              	.LVL47:
 1139 004a 391C     		adds	r1, r7, #0
 1140 004c FFF7FEFF 		bl	__aeabi_fsub
 1141              	.LVL48:
 316:Src/main.c    ****   s.uin = ((ADC_raw[2]/4095.0)*3.3)*6.6;
 1142              		.loc 1 316 46 view .LVU315
 1143 0050 7168     		ldr	r1, [r6, #4]
 316:Src/main.c    ****   s.uin = ((ADC_raw[2]/4095.0)*3.3)*6.6;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 59


 1144              		.loc 1 316 39 view .LVU316
 1145 0052 FFF7FEFF 		bl	__aeabi_fmul
 1146              	.LVL49:
 316:Src/main.c    ****   s.uin = ((ADC_raw[2]/4095.0)*3.3)*6.6;
 1147              		.loc 1 316 59 view .LVU317
 1148 0056 7C49     		ldr	r1, .L56+36
 1149 0058 FFF7FEFF 		bl	__aeabi_fdiv
 1150              	.LVL50:
 1151 005c 011C     		adds	r1, r0, #0
 316:Src/main.c    ****   s.uin = ((ADC_raw[2]/4095.0)*3.3)*6.6;
 1152              		.loc 1 316 64 view .LVU318
 1153 005e 281C     		adds	r0, r5, #0
 1154 0060 FFF7FEFF 		bl	__aeabi_fadd
 1155              	.LVL51:
 1156 0064 051C     		adds	r5, r0, #0
 316:Src/main.c    ****   s.uin = ((ADC_raw[2]/4095.0)*3.3)*6.6;
 1157              		.loc 1 316 10 view .LVU319
 1158 0066 2060     		str	r0, [r4]
 317:Src/main.c    ****   s.iin = FILT(s.iin, ((ADC_raw[0]/4095.0)*3.3*1.659)/(0.01*(2370/33)), TTIP_AVG_FILTER);
 1159              		.loc 1 317 3 is_stmt 1 view .LVU320
 317:Src/main.c    ****   s.iin = FILT(s.iin, ((ADC_raw[0]/4095.0)*3.3*1.659)/(0.01*(2370/33)), TTIP_AVG_FILTER);
 1160              		.loc 1 317 20 is_stmt 0 view .LVU321
 1161 0068 4346     		mov	r3, r8
 1162 006a 9888     		ldrh	r0, [r3, #4]
 317:Src/main.c    ****   s.iin = FILT(s.iin, ((ADC_raw[0]/4095.0)*3.3*1.659)/(0.01*(2370/33)), TTIP_AVG_FILTER);
 1163              		.loc 1 317 23 view .LVU322
 1164 006c FFF7FEFF 		bl	__aeabi_i2d
 1165              	.LVL52:
 1166 0070 0022     		movs	r2, #0
 1167 0072 6D4B     		ldr	r3, .L56+4
 1168 0074 FFF7FEFF 		bl	__aeabi_ddiv
 1169              	.LVL53:
 317:Src/main.c    ****   s.iin = FILT(s.iin, ((ADC_raw[0]/4095.0)*3.3*1.659)/(0.01*(2370/33)), TTIP_AVG_FILTER);
 1170              		.loc 1 317 31 view .LVU323
 1171 0078 6C4A     		ldr	r2, .L56+8
 1172 007a 6D4B     		ldr	r3, .L56+12
 1173 007c FFF7FEFF 		bl	__aeabi_dmul
 1174              	.LVL54:
 317:Src/main.c    ****   s.iin = FILT(s.iin, ((ADC_raw[0]/4095.0)*3.3*1.659)/(0.01*(2370/33)), TTIP_AVG_FILTER);
 1175              		.loc 1 317 36 view .LVU324
 1176 0080 6A4A     		ldr	r2, .L56+8
 1177 0082 724B     		ldr	r3, .L56+40
 1178 0084 FFF7FEFF 		bl	__aeabi_dmul
 1179              	.LVL55:
 1180 0088 FFF7FEFF 		bl	__aeabi_d2f
 1181              	.LVL56:
 317:Src/main.c    ****   s.iin = FILT(s.iin, ((ADC_raw[0]/4095.0)*3.3*1.659)/(0.01*(2370/33)), TTIP_AVG_FILTER);
 1182              		.loc 1 317 9 view .LVU325
 1183 008c A060     		str	r0, [r4, #8]
 318:Src/main.c    **** 
 1184              		.loc 1 318 3 is_stmt 1 view .LVU326
 318:Src/main.c    **** 
 1185              		.loc 1 318 11 is_stmt 0 view .LVU327
 1186 008e E068     		ldr	r0, [r4, #12]
 1187 0090 6F49     		ldr	r1, .L56+44
 1188 0092 FFF7FEFF 		bl	__aeabi_fmul
 1189              	.LVL57:
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 60


 1190 0096 FFF7FEFF 		bl	__aeabi_f2d
 1191              	.LVL58:
 1192 009a 0600     		movs	r6, r0
 1193 009c 0F00     		movs	r7, r1
 1194 009e 4346     		mov	r3, r8
 1195 00a0 1888     		ldrh	r0, [r3]
 1196 00a2 FFF7FEFF 		bl	__aeabi_i2d
 1197              	.LVL59:
 1198 00a6 0022     		movs	r2, #0
 1199 00a8 5F4B     		ldr	r3, .L56+4
 1200 00aa FFF7FEFF 		bl	__aeabi_ddiv
 1201              	.LVL60:
 1202 00ae 5F4A     		ldr	r2, .L56+8
 1203 00b0 5F4B     		ldr	r3, .L56+12
 1204 00b2 FFF7FEFF 		bl	__aeabi_dmul
 1205              	.LVL61:
 1206 00b6 674A     		ldr	r2, .L56+48
 1207 00b8 674B     		ldr	r3, .L56+52
 1208 00ba FFF7FEFF 		bl	__aeabi_dmul
 1209              	.LVL62:
 1210 00be 674A     		ldr	r2, .L56+56
 1211 00c0 674B     		ldr	r3, .L56+60
 1212 00c2 FFF7FEFF 		bl	__aeabi_ddiv
 1213              	.LVL63:
 1214 00c6 0022     		movs	r2, #0
 1215 00c8 664B     		ldr	r3, .L56+64
 1216 00ca FFF7FEFF 		bl	__aeabi_dmul
 1217              	.LVL64:
 1218 00ce 0200     		movs	r2, r0
 1219 00d0 0B00     		movs	r3, r1
 1220 00d2 3000     		movs	r0, r6
 1221 00d4 3900     		movs	r1, r7
 1222 00d6 FFF7FEFF 		bl	__aeabi_dadd
 1223              	.LVL65:
 1224 00da FFF7FEFF 		bl	__aeabi_d2f
 1225              	.LVL66:
 318:Src/main.c    **** 
 1226              		.loc 1 318 9 view .LVU328
 1227 00de E060     		str	r0, [r4, #12]
 320:Src/main.c    **** 
 1228              		.loc 1 320 3 is_stmt 1 view .LVU329
 320:Src/main.c    **** 
 1229              		.loc 1 320 15 is_stmt 0 view .LVU330
 1230 00e0 6068     		ldr	r0, [r4, #4]
 1231 00e2 5B49     		ldr	r1, .L56+44
 1232 00e4 FFF7FEFF 		bl	__aeabi_fmul
 1233              	.LVL67:
 1234 00e8 061C     		adds	r6, r0, #0
 1235 00ea 5F49     		ldr	r1, .L56+68
 1236 00ec 281C     		adds	r0, r5, #0
 1237 00ee FFF7FEFF 		bl	__aeabi_fmul
 1238              	.LVL68:
 1239 00f2 011C     		adds	r1, r0, #0
 1240 00f4 301C     		adds	r0, r6, #0
 1241 00f6 FFF7FEFF 		bl	__aeabi_fadd
 1242              	.LVL69:
 1243 00fa 051C     		adds	r5, r0, #0
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 61


 320:Src/main.c    **** 
 1244              		.loc 1 320 13 view .LVU331
 1245 00fc 6060     		str	r0, [r4, #4]
 323:Src/main.c    ****     r.error = r.target - s.ttipavg;
 1246              		.loc 1 323 3 is_stmt 1 view .LVU332
 323:Src/main.c    ****     r.error = r.target - s.ttipavg;
 1247              		.loc 1 323 20 is_stmt 0 view .LVU333
 1248 00fe 5B4B     		ldr	r3, .L56+72
 1249 0100 1C68     		ldr	r4, [r3]
 323:Src/main.c    ****     r.error = r.target - s.ttipavg;
 1250              		.loc 1 323 29 view .LVU334
 1251 0102 DE6A     		ldr	r6, [r3, #44]
 323:Src/main.c    ****     r.error = r.target - s.ttipavg;
 1252              		.loc 1 323 27 view .LVU335
 1253 0104 311C     		adds	r1, r6, #0
 1254 0106 201C     		adds	r0, r4, #0
 1255 0108 FFF7FEFF 		bl	__aeabi_fsub
 1256              	.LVL70:
 1257 010c 011C     		adds	r1, r0, #0
 323:Src/main.c    ****     r.error = r.target - s.ttipavg;
 1258              		.loc 1 323 5 view .LVU336
 1259 010e 281C     		adds	r0, r5, #0
 1260 0110 FFF7FEFF 		bl	__aeabi_fcmpge
 1261              	.LVL71:
 1262 0114 0028     		cmp	r0, #0
 1263 0116 5AD0     		beq	.L39
 323:Src/main.c    ****     r.error = r.target - s.ttipavg;
 1264              		.loc 1 323 63 discriminator 1 view .LVU337
 1265 0118 311C     		adds	r1, r6, #0
 1266 011a 201C     		adds	r0, r4, #0
 1267 011c FFF7FEFF 		bl	__aeabi_fadd
 1268              	.LVL72:
 1269 0120 011C     		adds	r1, r0, #0
 323:Src/main.c    ****     r.error = r.target - s.ttipavg;
 1270              		.loc 1 323 39 discriminator 1 view .LVU338
 1271 0122 281C     		adds	r0, r5, #0
 1272 0124 FFF7FEFF 		bl	__aeabi_fcmple
 1273              	.LVL73:
 1274 0128 0028     		cmp	r0, #0
 1275 012a 50D0     		beq	.L39
 324:Src/main.c    ****     r.ierror = r.ierror + (r.error*r.cycletime);
 1276              		.loc 1 324 5 is_stmt 1 view .LVU339
 324:Src/main.c    ****     r.ierror = r.ierror + (r.error*r.cycletime);
 1277              		.loc 1 324 24 is_stmt 0 view .LVU340
 1278 012c 291C     		adds	r1, r5, #0
 1279 012e 201C     		adds	r0, r4, #0
 1280 0130 FFF7FEFF 		bl	__aeabi_fsub
 1281              	.LVL74:
 1282 0134 051C     		adds	r5, r0, #0
 324:Src/main.c    ****     r.ierror = r.ierror + (r.error*r.cycletime);
 1283              		.loc 1 324 13 view .LVU341
 1284 0136 4D4C     		ldr	r4, .L56+72
 1285 0138 6060     		str	r0, [r4, #4]
 325:Src/main.c    ****     r.ierror = CLAMP(r.ierror,-r.imax,r.imax);
 1286              		.loc 1 325 5 is_stmt 1 view .LVU342
 325:Src/main.c    ****     r.ierror = CLAMP(r.ierror,-r.imax,r.imax);
 1287              		.loc 1 325 17 is_stmt 0 view .LVU343
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 62


 1288 013a E668     		ldr	r6, [r4, #12]
 325:Src/main.c    ****     r.ierror = CLAMP(r.ierror,-r.imax,r.imax);
 1289              		.loc 1 325 37 view .LVU344
 1290 013c E369     		ldr	r3, [r4, #28]
 1291 013e 9846     		mov	r8, r3
 325:Src/main.c    ****     r.ierror = CLAMP(r.ierror,-r.imax,r.imax);
 1292              		.loc 1 325 35 view .LVU345
 1293 0140 191C     		adds	r1, r3, #0
 1294 0142 FFF7FEFF 		bl	__aeabi_fmul
 1295              	.LVL75:
 1296 0146 011C     		adds	r1, r0, #0
 325:Src/main.c    ****     r.ierror = CLAMP(r.ierror,-r.imax,r.imax);
 1297              		.loc 1 325 25 view .LVU346
 1298 0148 301C     		adds	r0, r6, #0
 1299 014a FFF7FEFF 		bl	__aeabi_fadd
 1300              	.LVL76:
 1301 014e 061C     		adds	r6, r0, #0
 325:Src/main.c    ****     r.ierror = CLAMP(r.ierror,-r.imax,r.imax);
 1302              		.loc 1 325 14 view .LVU347
 1303 0150 E060     		str	r0, [r4, #12]
 326:Src/main.c    ****     r.derror = (r.error - r.errorprior)/r.cycletime;
 1304              		.loc 1 326 5 is_stmt 1 view .LVU348
 326:Src/main.c    ****     r.derror = (r.error - r.errorprior)/r.cycletime;
 1305              		.loc 1 326 16 is_stmt 0 view .LVU349
 1306 0152 2769     		ldr	r7, [r4, #16]
 1307 0154 391C     		adds	r1, r7, #0
 1308 0156 FFF7FEFF 		bl	__aeabi_fcmpgt
 1309              	.LVL77:
 1310 015a 0028     		cmp	r0, #0
 1311 015c 09D1     		bne	.L42
 326:Src/main.c    ****     r.derror = (r.error - r.errorprior)/r.cycletime;
 1312              		.loc 1 326 16 discriminator 2 view .LVU350
 1313 015e 8023     		movs	r3, #128
 1314 0160 1B06     		lsls	r3, r3, #24
 1315 0162 F918     		adds	r1, r7, r3
 1316 0164 0F1C     		adds	r7, r1, #0
 1317 0166 301C     		adds	r0, r6, #0
 1318 0168 FFF7FEFF 		bl	__aeabi_fcmplt
 1319              	.LVL78:
 1320 016c 0028     		cmp	r0, #0
 1321 016e 00D1     		bne	.L42
 326:Src/main.c    ****     r.derror = (r.error - r.errorprior)/r.cycletime;
 1322              		.loc 1 326 16 discriminator 5 view .LVU351
 1323 0170 371C     		adds	r7, r6, #0
 1324              	.L42:
 326:Src/main.c    ****     r.derror = (r.error - r.errorprior)/r.cycletime;
 1325              		.loc 1 326 14 discriminator 8 view .LVU352
 1326 0172 3E4C     		ldr	r4, .L56+72
 1327 0174 E760     		str	r7, [r4, #12]
 327:Src/main.c    ****     r.duty = (r.Kp*r.error + r.Ki*r.ierror + r.Kd*r.derror)*MAX_DUTY;
 1328              		.loc 1 327 5 is_stmt 1 view .LVU353
 327:Src/main.c    ****     r.duty = (r.Kp*r.error + r.Ki*r.ierror + r.Kd*r.derror)*MAX_DUTY;
 1329              		.loc 1 327 28 is_stmt 0 view .LVU354
 1330 0176 A168     		ldr	r1, [r4, #8]
 327:Src/main.c    ****     r.duty = (r.Kp*r.error + r.Ki*r.ierror + r.Kd*r.derror)*MAX_DUTY;
 1331              		.loc 1 327 25 view .LVU355
 1332 0178 281C     		adds	r0, r5, #0
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 63


 1333 017a FFF7FEFF 		bl	__aeabi_fsub
 1334              	.LVL79:
 327:Src/main.c    ****     r.duty = (r.Kp*r.error + r.Ki*r.ierror + r.Kd*r.derror)*MAX_DUTY;
 1335              		.loc 1 327 40 view .LVU356
 1336 017e 4146     		mov	r1, r8
 1337 0180 FFF7FEFF 		bl	__aeabi_fdiv
 1338              	.LVL80:
 1339 0184 061C     		adds	r6, r0, #0
 327:Src/main.c    ****     r.duty = (r.Kp*r.error + r.Ki*r.ierror + r.Kd*r.derror)*MAX_DUTY;
 1340              		.loc 1 327 14 view .LVU357
 1341 0186 6061     		str	r0, [r4, #20]
 328:Src/main.c    ****     r.errorprior = r.error;
 1342              		.loc 1 328 5 is_stmt 1 view .LVU358
 328:Src/main.c    ****     r.errorprior = r.error;
 1343              		.loc 1 328 16 is_stmt 0 view .LVU359
 1344 0188 216A     		ldr	r1, [r4, #32]
 328:Src/main.c    ****     r.errorprior = r.error;
 1345              		.loc 1 328 19 view .LVU360
 1346 018a 281C     		adds	r0, r5, #0
 1347 018c FFF7FEFF 		bl	__aeabi_fmul
 1348              	.LVL81:
 1349 0190 8046     		mov	r8, r0
 328:Src/main.c    ****     r.errorprior = r.error;
 1350              		.loc 1 328 31 view .LVU361
 1351 0192 606A     		ldr	r0, [r4, #36]
 328:Src/main.c    ****     r.errorprior = r.error;
 1352              		.loc 1 328 34 view .LVU362
 1353 0194 391C     		adds	r1, r7, #0
 1354 0196 FFF7FEFF 		bl	__aeabi_fmul
 1355              	.LVL82:
 1356 019a 011C     		adds	r1, r0, #0
 328:Src/main.c    ****     r.errorprior = r.error;
 1357              		.loc 1 328 28 view .LVU363
 1358 019c 4046     		mov	r0, r8
 1359 019e FFF7FEFF 		bl	__aeabi_fadd
 1360              	.LVL83:
 1361 01a2 071C     		adds	r7, r0, #0
 328:Src/main.c    ****     r.errorprior = r.error;
 1362              		.loc 1 328 47 view .LVU364
 1363 01a4 A16A     		ldr	r1, [r4, #40]
 328:Src/main.c    ****     r.errorprior = r.error;
 1364              		.loc 1 328 50 view .LVU365
 1365 01a6 301C     		adds	r0, r6, #0
 1366 01a8 FFF7FEFF 		bl	__aeabi_fmul
 1367              	.LVL84:
 1368 01ac 011C     		adds	r1, r0, #0
 328:Src/main.c    ****     r.errorprior = r.error;
 1369              		.loc 1 328 44 view .LVU366
 1370 01ae 381C     		adds	r0, r7, #0
 1371 01b0 FFF7FEFF 		bl	__aeabi_fadd
 1372              	.LVL85:
 1373 01b4 061C     		adds	r6, r0, #0
 328:Src/main.c    ****     r.errorprior = r.error;
 1374              		.loc 1 328 60 view .LVU367
 1375 01b6 2E4B     		ldr	r3, .L56+76
 1376 01b8 1888     		ldrh	r0, [r3]
 1377 01ba FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 64


 1378              	.LVL86:
 1379 01be 311C     		adds	r1, r6, #0
 1380 01c0 FFF7FEFF 		bl	__aeabi_fmul
 1381              	.LVL87:
 328:Src/main.c    ****     r.errorprior = r.error;
 1382              		.loc 1 328 12 view .LVU368
 1383 01c4 FFF7FEFF 		bl	__aeabi_f2iz
 1384              	.LVL88:
 1385 01c8 2083     		strh	r0, [r4, #24]
 329:Src/main.c    ****   } else {
 1386              		.loc 1 329 5 is_stmt 1 view .LVU369
 329:Src/main.c    ****   } else {
 1387              		.loc 1 329 18 is_stmt 0 view .LVU370
 1388 01ca A560     		str	r5, [r4, #8]
 1389 01cc 0BE0     		b	.L44
 1390              	.L39:
 331:Src/main.c    ****       r.duty = MAX_DUTY;
 1391              		.loc 1 331 5 is_stmt 1 view .LVU371
 331:Src/main.c    ****       r.duty = MAX_DUTY;
 1392              		.loc 1 331 7 is_stmt 0 view .LVU372
 1393 01ce 211C     		adds	r1, r4, #0
 1394 01d0 281C     		adds	r0, r5, #0
 1395 01d2 FFF7FEFF 		bl	__aeabi_fcmple
 1396              	.LVL89:
 1397 01d6 0028     		cmp	r0, #0
 1398 01d8 1AD0     		beq	.L54
 332:Src/main.c    ****       r.error = 12.0;
 1399              		.loc 1 332 7 is_stmt 1 view .LVU373
 332:Src/main.c    ****       r.error = 12.0;
 1400              		.loc 1 332 14 is_stmt 0 view .LVU374
 1401 01da 244B     		ldr	r3, .L56+72
 1402 01dc 244A     		ldr	r2, .L56+76
 1403 01de 1288     		ldrh	r2, [r2]
 1404 01e0 1A83     		strh	r2, [r3, #24]
 333:Src/main.c    ****     } else {
 1405              		.loc 1 333 7 is_stmt 1 view .LVU375
 333:Src/main.c    ****     } else {
 1406              		.loc 1 333 15 is_stmt 0 view .LVU376
 1407 01e2 244A     		ldr	r2, .L56+80
 1408 01e4 5A60     		str	r2, [r3, #4]
 1409              	.L44:
 340:Src/main.c    **** 
 1410              		.loc 1 340 3 is_stmt 1 view .LVU377
 340:Src/main.c    **** 
 1411              		.loc 1 340 12 is_stmt 0 view .LVU378
 1412 01e6 214B     		ldr	r3, .L56+72
 1413 01e8 1822     		movs	r2, #24
 1414 01ea 9A5E     		ldrsh	r2, [r3, r2]
 1415 01ec 204B     		ldr	r3, .L56+76
 1416 01ee 1B88     		ldrh	r3, [r3]
 340:Src/main.c    **** 
 1417              		.loc 1 340 10 view .LVU379
 1418 01f0 9A42     		cmp	r2, r3
 1419 01f2 15DC     		bgt	.L47
 340:Src/main.c    **** 
 1420              		.loc 1 340 10 discriminator 1 view .LVU380
 1421 01f4 131C     		adds	r3, r2, #0
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 65


 1422 01f6 002A     		cmp	r2, #0
 1423 01f8 10DB     		blt	.L55
 1424              	.L48:
 1425 01fa 1BB2     		sxth	r3, r3
 1426              	.L49:
 340:Src/main.c    **** 
 1427              		.loc 1 340 10 discriminator 4 view .LVU381
 1428 01fc 1B4A     		ldr	r2, .L56+72
 1429 01fe 1383     		strh	r3, [r2, #24]
 352:Src/main.c    ****   __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_4, 4050);
 1430              		.loc 1 352 3 is_stmt 1 view .LVU382
 1431 0200 1D4A     		ldr	r2, .L56+84
 1432 0202 1268     		ldr	r2, [r2]
 1433 0204 5363     		str	r3, [r2, #52]
 353:Src/main.c    **** }
 1434              		.loc 1 353 3 view .LVU383
 1435 0206 1D4B     		ldr	r3, .L56+88
 1436 0208 1364     		str	r3, [r2, #64]
 354:Src/main.c    **** 
 1437              		.loc 1 354 1 is_stmt 0 view .LVU384
 1438              		@ sp needed
 1439 020a 80BC     		pop	{r7}
 1440 020c B846     		mov	r8, r7
 1441 020e F0BD     		pop	{r4, r5, r6, r7, pc}
 1442              	.L54:
 335:Src/main.c    ****       r.error = 0.0;
 1443              		.loc 1 335 7 is_stmt 1 view .LVU385
 335:Src/main.c    ****       r.error = 0.0;
 1444              		.loc 1 335 14 is_stmt 0 view .LVU386
 1445 0210 164B     		ldr	r3, .L56+72
 1446 0212 0022     		movs	r2, #0
 1447 0214 1A83     		strh	r2, [r3, #24]
 336:Src/main.c    ****     }
 1448              		.loc 1 336 7 is_stmt 1 view .LVU387
 336:Src/main.c    ****     }
 1449              		.loc 1 336 15 is_stmt 0 view .LVU388
 1450 0216 0022     		movs	r2, #0
 1451 0218 5A60     		str	r2, [r3, #4]
 1452 021a E4E7     		b	.L44
 1453              	.L55:
 340:Src/main.c    **** 
 1454              		.loc 1 340 10 discriminator 1 view .LVU389
 1455 021c 0023     		movs	r3, #0
 1456 021e ECE7     		b	.L48
 1457              	.L47:
 340:Src/main.c    **** 
 1458              		.loc 1 340 10 discriminator 2 view .LVU390
 1459 0220 1BB2     		sxth	r3, r3
 1460 0222 EBE7     		b	.L49
 1461              	.L57:
 1462              		.align	2
 1463              	.L56:
 1464 0224 00000000 		.word	ADC_raw
 1465 0228 00FEAF40 		.word	1085275648
 1466 022c 66666666 		.word	1717986918
 1467 0230 66660A40 		.word	1074423398
 1468 0234 0000E03F 		.word	1071644672
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 66


 1469 0238 7B14AE47 		.word	1202590843
 1470 023c E17A843F 		.word	1065646817
 1471 0240 00000000 		.word	s
 1472 0244 00000000 		.word	tipcal
 1473 0248 00007A44 		.word	1148846080
 1474 024c 66661A40 		.word	1075471974
 1475 0250 6666663F 		.word	1063675494
 1476 0254 25068195 		.word	-1786706395
 1477 0258 438BFA3F 		.word	1073384259
 1478 025c B81E85EB 		.word	-343597384
 1479 0260 51B8E63F 		.word	1072085073
 1480 0264 9A99B93F 		.word	1069128090
 1481 0268 D0CCCC3D 		.word	1036831952
 1482 026c 00000000 		.word	r
 1483 0270 00000000 		.word	MAX_DUTY
 1484 0274 00004041 		.word	1094713344
 1485 0278 00000000 		.word	htim1
 1486 027c D20F0000 		.word	4050
 1487              		.cfi_endproc
 1488              	.LFE39:
 1490              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1491              		.align	1
 1492              		.global	HAL_TIM_PeriodElapsedCallback
 1493              		.syntax unified
 1494              		.code	16
 1495              		.thumb_func
 1497              	HAL_TIM_PeriodElapsedCallback:
 1498              	.LVL90:
 1499              	.LFB40:
 357:Src/main.c    ****   if(sendDataUSB) // WIP need to fix this, should me timer based only
 1500              		.loc 1 357 1 is_stmt 1 view -0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 357:Src/main.c    ****   if(sendDataUSB) // WIP need to fix this, should me timer based only
 1504              		.loc 1 357 1 is_stmt 0 view .LVU392
 1505 0000 10B5     		push	{r4, lr}
 1506              	.LCFI16:
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 4, -8
 1509              		.cfi_offset 14, -4
 358:Src/main.c    ****   {
 1510              		.loc 1 358 3 is_stmt 1 view .LVU393
 358:Src/main.c    ****   {
 1511              		.loc 1 358 6 is_stmt 0 view .LVU394
 1512 0002 094B     		ldr	r3, .L61
 1513 0004 1B68     		ldr	r3, [r3]
 358:Src/main.c    ****   {
 1514              		.loc 1 358 5 view .LVU395
 1515 0006 002B     		cmp	r3, #0
 1516 0008 00D1     		bne	.L60
 1517              	.LVL91:
 1518              	.L58:
 365:Src/main.c    **** 
 1519              		.loc 1 365 1 view .LVU396
 1520              		@ sp needed
 1521 000a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 67


 1522              	.LVL92:
 1523              	.L60:
 360:Src/main.c    **** 
 1524              		.loc 1 360 5 is_stmt 1 view .LVU397
 360:Src/main.c    **** 
 1525              		.loc 1 360 17 is_stmt 0 view .LVU398
 1526 000c 064B     		ldr	r3, .L61
 1527 000e 0022     		movs	r2, #0
 1528 0010 1A60     		str	r2, [r3]
 362:Src/main.c    ****     USBD_CDC_TransmitPacket(&USBD_Device);
 1529              		.loc 1 362 5 is_stmt 1 view .LVU399
 1530 0012 8032     		adds	r2, r2, #128
 1531 0014 0549     		ldr	r1, .L61+4
 1532 0016 064C     		ldr	r4, .L61+8
 1533 0018 9200     		lsls	r2, r2, #2
 1534 001a 2000     		movs	r0, r4
 1535              	.LVL93:
 362:Src/main.c    ****     USBD_CDC_TransmitPacket(&USBD_Device);
 1536              		.loc 1 362 5 is_stmt 0 view .LVU400
 1537 001c FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 1538              	.LVL94:
 363:Src/main.c    ****   }
 1539              		.loc 1 363 5 is_stmt 1 view .LVU401
 1540 0020 2000     		movs	r0, r4
 1541 0022 FFF7FEFF 		bl	USBD_CDC_TransmitPacket
 1542              	.LVL95:
 365:Src/main.c    **** 
 1543              		.loc 1 365 1 is_stmt 0 view .LVU402
 1544 0026 F0E7     		b	.L58
 1545              	.L62:
 1546              		.align	2
 1547              	.L61:
 1548 0028 00000000 		.word	sendDataUSB
 1549 002c 00000000 		.word	UserTxBuffer
 1550 0030 00000000 		.word	USBD_Device
 1551              		.cfi_endproc
 1552              	.LFE40:
 1554              		.section	.text.disp_init,"ax",%progbits
 1555              		.align	1
 1556              		.global	disp_init
 1557              		.syntax unified
 1558              		.code	16
 1559              		.thumb_func
 1561              	disp_init:
 1562              	.LFB41:
 410:Src/main.c    ****   memcpy(&screenBuffer[0], &REFRESH_COMMANDS[0], sizeof(REFRESH_COMMANDS));
 1563              		.loc 1 410 22 is_stmt 1 view -0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 0, uses_anonymous_args = 0
 1567 0000 30B5     		push	{r4, r5, lr}
 1568              	.LCFI17:
 1569              		.cfi_def_cfa_offset 12
 1570              		.cfi_offset 4, -12
 1571              		.cfi_offset 5, -8
 1572              		.cfi_offset 14, -4
 1573 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 68


 1574              	.LCFI18:
 1575              		.cfi_def_cfa_offset 24
 411:Src/main.c    ****   uint16_t _cnt = 0;
 1576              		.loc 1 411 3 view .LVU404
 1577 0004 104A     		ldr	r2, .L67
 1578 0006 114B     		ldr	r3, .L67+4
 1579 0008 31CB     		ldmia	r3!, {r0, r4, r5}
 1580 000a 31C2     		stmia	r2!, {r0, r4, r5}
 1581 000c 1100     		movs	r1, r2
 1582 000e 1A68     		ldr	r2, [r3]
 1583 0010 0A60     		str	r2, [r1]
 1584 0012 1B79     		ldrb	r3, [r3, #4]
 1585 0014 0B71     		strb	r3, [r1, #4]
 412:Src/main.c    ****   while (HAL_I2C_GetState(&hi2c1) != HAL_I2C_STATE_READY) if (_cnt++ > 10000) break;
 1586              		.loc 1 412 3 view .LVU405
 1587              	.LVL96:
 413:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, &OLED_Setup_Array[0],sizeof(OLED_Setup_Array),100
 1588              		.loc 1 413 3 view .LVU406
 412:Src/main.c    ****   while (HAL_I2C_GetState(&hi2c1) != HAL_I2C_STATE_READY) if (_cnt++ > 10000) break;
 1589              		.loc 1 412 12 is_stmt 0 view .LVU407
 1590 0016 0024     		movs	r4, #0
 1591              	.LVL97:
 1592              	.L64:
 413:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, &OLED_Setup_Array[0],sizeof(OLED_Setup_Array),100
 1593              		.loc 1 413 35 is_stmt 1 discriminator 1 view .LVU408
 413:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, &OLED_Setup_Array[0],sizeof(OLED_Setup_Array),100
 1594              		.loc 1 413 10 is_stmt 0 discriminator 1 view .LVU409
 1595 0018 0D48     		ldr	r0, .L67+8
 1596 001a FFF7FEFF 		bl	HAL_I2C_GetState
 1597              	.LVL98:
 413:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, &OLED_Setup_Array[0],sizeof(OLED_Setup_Array),100
 1598              		.loc 1 413 35 discriminator 1 view .LVU410
 1599 001e 2028     		cmp	r0, #32
 1600 0020 06D0     		beq	.L65
 413:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, &OLED_Setup_Array[0],sizeof(OLED_Setup_Array),100
 1601              		.loc 1 413 59 is_stmt 1 discriminator 2 view .LVU411
 413:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, &OLED_Setup_Array[0],sizeof(OLED_Setup_Array),100
 1602              		.loc 1 413 67 is_stmt 0 discriminator 2 view .LVU412
 1603 0022 631C     		adds	r3, r4, #1
 1604 0024 9BB2     		uxth	r3, r3
 1605              	.LVL99:
 413:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, &OLED_Setup_Array[0],sizeof(OLED_Setup_Array),100
 1606              		.loc 1 413 62 discriminator 2 view .LVU413
 1607 0026 0B4A     		ldr	r2, .L67+12
 1608 0028 9442     		cmp	r4, r2
 1609 002a 01D8     		bhi	.L65
 413:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, &OLED_Setup_Array[0],sizeof(OLED_Setup_Array),100
 1610              		.loc 1 413 67 discriminator 2 view .LVU414
 1611 002c 1C00     		movs	r4, r3
 1612 002e F3E7     		b	.L64
 1613              	.LVL100:
 1614              	.L65:
 414:Src/main.c    **** }
 1615              		.loc 1 414 3 is_stmt 1 view .LVU415
 1616 0030 094A     		ldr	r2, .L67+16
 1617 0032 0748     		ldr	r0, .L67+8
 1618 0034 FA23     		movs	r3, #250
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 69


 1619 0036 9B00     		lsls	r3, r3, #2
 1620 0038 0093     		str	r3, [sp]
 1621 003a 3223     		movs	r3, #50
 1622 003c 7821     		movs	r1, #120
 1623 003e FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1624              	.LVL101:
 415:Src/main.c    **** 
 1625              		.loc 1 415 1 is_stmt 0 view .LVU416
 1626 0042 03B0     		add	sp, sp, #12
 1627              		@ sp needed
 1628 0044 30BD     		pop	{r4, r5, pc}
 1629              	.L68:
 1630 0046 C046     		.align	2
 1631              	.L67:
 1632 0048 00000000 		.word	screenBuffer
 1633 004c 00000000 		.word	REFRESH_COMMANDS
 1634 0050 00000000 		.word	hi2c1
 1635 0054 10270000 		.word	10000
 1636 0058 00000000 		.word	OLED_Setup_Array
 1637              		.cfi_endproc
 1638              	.LFE41:
 1640              		.section	.text.refresh,"ax",%progbits
 1641              		.align	1
 1642              		.global	refresh
 1643              		.syntax unified
 1644              		.code	16
 1645              		.thumb_func
 1647              	refresh:
 1648              	.LFB42:
 417:Src/main.c    ****   uint16_t _cnt = 0;
 1649              		.loc 1 417 20 is_stmt 1 view -0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 0
 1652              		@ frame_needed = 0, uses_anonymous_args = 0
 1653 0000 10B5     		push	{r4, lr}
 1654              	.LCFI19:
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 4, -8
 1657              		.cfi_offset 14, -4
 1658 0002 82B0     		sub	sp, sp, #8
 1659              	.LCFI20:
 1660              		.cfi_def_cfa_offset 16
 418:Src/main.c    ****   while (HAL_I2C_GetState(&hi2c1) != HAL_I2C_STATE_READY) if (_cnt++ > 10000) break;
 1661              		.loc 1 418 3 view .LVU418
 1662              	.LVL102:
 419:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, screenBuffer,FRAMEBUFFER_START + (OLED_WIDTH * 2)
 1663              		.loc 1 419 3 view .LVU419
 418:Src/main.c    ****   while (HAL_I2C_GetState(&hi2c1) != HAL_I2C_STATE_READY) if (_cnt++ > 10000) break;
 1664              		.loc 1 418 12 is_stmt 0 view .LVU420
 1665 0004 0024     		movs	r4, #0
 1666              	.LVL103:
 1667              	.L70:
 419:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, screenBuffer,FRAMEBUFFER_START + (OLED_WIDTH * 2)
 1668              		.loc 1 419 35 is_stmt 1 discriminator 1 view .LVU421
 419:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, screenBuffer,FRAMEBUFFER_START + (OLED_WIDTH * 2)
 1669              		.loc 1 419 10 is_stmt 0 discriminator 1 view .LVU422
 1670 0006 0B48     		ldr	r0, .L73
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 70


 1671 0008 FFF7FEFF 		bl	HAL_I2C_GetState
 1672              	.LVL104:
 419:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, screenBuffer,FRAMEBUFFER_START + (OLED_WIDTH * 2)
 1673              		.loc 1 419 35 discriminator 1 view .LVU423
 1674 000c 2028     		cmp	r0, #32
 1675 000e 06D0     		beq	.L71
 419:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, screenBuffer,FRAMEBUFFER_START + (OLED_WIDTH * 2)
 1676              		.loc 1 419 59 is_stmt 1 discriminator 2 view .LVU424
 419:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, screenBuffer,FRAMEBUFFER_START + (OLED_WIDTH * 2)
 1677              		.loc 1 419 67 is_stmt 0 discriminator 2 view .LVU425
 1678 0010 631C     		adds	r3, r4, #1
 1679 0012 9BB2     		uxth	r3, r3
 1680              	.LVL105:
 419:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, screenBuffer,FRAMEBUFFER_START + (OLED_WIDTH * 2)
 1681              		.loc 1 419 62 discriminator 2 view .LVU426
 1682 0014 084A     		ldr	r2, .L73+4
 1683 0016 9442     		cmp	r4, r2
 1684 0018 01D8     		bhi	.L71
 419:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1,DEVICEADDR_OLED, screenBuffer,FRAMEBUFFER_START + (OLED_WIDTH * 2)
 1685              		.loc 1 419 67 discriminator 2 view .LVU427
 1686 001a 1C00     		movs	r4, r3
 1687 001c F3E7     		b	.L70
 1688              	.LVL106:
 1689              	.L71:
 420:Src/main.c    **** }
 1690              		.loc 1 420 3 is_stmt 1 view .LVU428
 1691 001e 074A     		ldr	r2, .L73+8
 1692 0020 0448     		ldr	r0, .L73
 1693 0022 FA23     		movs	r3, #250
 1694 0024 9B00     		lsls	r3, r3, #2
 1695 0026 0093     		str	r3, [sp]
 1696 0028 D123     		movs	r3, #209
 1697 002a 7821     		movs	r1, #120
 1698 002c FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1699              	.LVL107:
 421:Src/main.c    **** 
 1700              		.loc 1 421 1 is_stmt 0 view .LVU429
 1701 0030 02B0     		add	sp, sp, #8
 1702              		@ sp needed
 1703 0032 10BD     		pop	{r4, pc}
 1704              	.L74:
 1705              		.align	2
 1706              	.L73:
 1707 0034 00000000 		.word	hi2c1
 1708 0038 10270000 		.word	10000
 1709 003c 00000000 		.word	screenBuffer
 1710              		.cfi_endproc
 1711              	.LFE42:
 1713              		.section	.text.clear_screen,"ax",%progbits
 1714              		.align	1
 1715              		.global	clear_screen
 1716              		.syntax unified
 1717              		.code	16
 1718              		.thumb_func
 1720              	clear_screen:
 1721              	.LFB43:
 423:Src/main.c    ****   memset(&screenBuffer[FRAMEBUFFER_START], 0, OLED_WIDTH * 2);
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 71


 1722              		.loc 1 423 25 is_stmt 1 view -0
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 0
 1725              		@ frame_needed = 0, uses_anonymous_args = 0
 1726 0000 10B5     		push	{r4, lr}
 1727              	.LCFI21:
 1728              		.cfi_def_cfa_offset 8
 1729              		.cfi_offset 4, -8
 1730              		.cfi_offset 14, -4
 424:Src/main.c    **** }
 1731              		.loc 1 424 3 view .LVU431
 1732 0002 0348     		ldr	r0, .L76
 1733 0004 C022     		movs	r2, #192
 1734 0006 0021     		movs	r1, #0
 1735 0008 FFF7FEFF 		bl	memset
 1736              	.LVL108:
 425:Src/main.c    **** void set_screen(void) {
 1737              		.loc 1 425 1 is_stmt 0 view .LVU432
 1738              		@ sp needed
 1739 000c 10BD     		pop	{r4, pc}
 1740              	.L77:
 1741 000e C046     		.align	2
 1742              	.L76:
 1743 0010 11000000 		.word	screenBuffer+17
 1744              		.cfi_endproc
 1745              	.LFE43:
 1747              		.section	.text.set_screen,"ax",%progbits
 1748              		.align	1
 1749              		.global	set_screen
 1750              		.syntax unified
 1751              		.code	16
 1752              		.thumb_func
 1754              	set_screen:
 1755              	.LFB44:
 426:Src/main.c    ****   memset(&screenBuffer[FRAMEBUFFER_START], 255, OLED_WIDTH * 2);
 1756              		.loc 1 426 23 is_stmt 1 view -0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 0
 1759              		@ frame_needed = 0, uses_anonymous_args = 0
 1760 0000 10B5     		push	{r4, lr}
 1761              	.LCFI22:
 1762              		.cfi_def_cfa_offset 8
 1763              		.cfi_offset 4, -8
 1764              		.cfi_offset 14, -4
 427:Src/main.c    **** }
 1765              		.loc 1 427 3 view .LVU434
 1766 0002 0348     		ldr	r0, .L79
 1767 0004 C022     		movs	r2, #192
 1768 0006 FF21     		movs	r1, #255
 1769 0008 FFF7FEFF 		bl	memset
 1770              	.LVL109:
 428:Src/main.c    **** 
 1771              		.loc 1 428 1 is_stmt 0 view .LVU435
 1772              		@ sp needed
 1773 000c 10BD     		pop	{r4, pc}
 1774              	.L80:
 1775 000e C046     		.align	2
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 72


 1776              	.L79:
 1777 0010 11000000 		.word	screenBuffer+17
 1778              		.cfi_endproc
 1779              	.LFE44:
 1781              		.section	.text.write_pixel,"ax",%progbits
 1782              		.align	1
 1783              		.global	write_pixel
 1784              		.syntax unified
 1785              		.code	16
 1786              		.thumb_func
 1788              	write_pixel:
 1789              	.LVL110:
 1790              	.LFB46:
 436:Src/main.c    ****   if(x>95 || y >15){
 1791              		.loc 1 436 54 is_stmt 1 view -0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 0
 1794              		@ frame_needed = 0, uses_anonymous_args = 0
 436:Src/main.c    ****   if(x>95 || y >15){
 1795              		.loc 1 436 54 is_stmt 0 view .LVU437
 1796 0000 70B5     		push	{r4, r5, r6, lr}
 1797              	.LCFI23:
 1798              		.cfi_def_cfa_offset 16
 1799              		.cfi_offset 4, -16
 1800              		.cfi_offset 5, -12
 1801              		.cfi_offset 6, -8
 1802              		.cfi_offset 14, -4
 437:Src/main.c    ****     return;
 1803              		.loc 1 437 3 is_stmt 1 view .LVU438
 437:Src/main.c    ****     return;
 1804              		.loc 1 437 5 is_stmt 0 view .LVU439
 1805 0002 5F28     		cmp	r0, #95
 1806 0004 35DC     		bgt	.L81
 437:Src/main.c    ****     return;
 1807              		.loc 1 437 11 discriminator 1 view .LVU440
 1808 0006 0F29     		cmp	r1, #15
 1809 0008 33DC     		bgt	.L81
 440:Src/main.c    ****     screenBuffer[FRAMEBUFFER_START + (x + ((y/8)*96))] |=  (1 << y % 8);
 1810              		.loc 1 440 3 is_stmt 1 view .LVU441
 440:Src/main.c    ****     screenBuffer[FRAMEBUFFER_START + (x + ((y/8)*96))] |=  (1 << y % 8);
 1811              		.loc 1 440 5 is_stmt 0 view .LVU442
 1812 000a 012A     		cmp	r2, #1
 1813 000c 1AD0     		beq	.L84
 442:Src/main.c    ****     screenBuffer[FRAMEBUFFER_START + (x + ((y/8)*96))] &= ~(1 << y % 8);
 1814              		.loc 1 442 10 is_stmt 1 view .LVU443
 442:Src/main.c    ****     screenBuffer[FRAMEBUFFER_START + (x + ((y/8)*96))] &= ~(1 << y % 8);
 1815              		.loc 1 442 13 is_stmt 0 view .LVU444
 1816 000e 002A     		cmp	r2, #0
 1817 0010 2FD1     		bne	.L81
 443:Src/main.c    ****   }
 1818              		.loc 1 443 5 is_stmt 1 view .LVU445
 443:Src/main.c    ****   }
 1819              		.loc 1 443 17 is_stmt 0 view .LVU446
 1820 0012 CE17     		asrs	r6, r1, #31
 1821 0014 0732     		adds	r2, r2, #7
 1822              	.LVL111:
 443:Src/main.c    ****   }
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 73


 1823              		.loc 1 443 17 view .LVU447
 1824 0016 1400     		movs	r4, r2
 1825 0018 3440     		ands	r4, r6
 1826 001a 6418     		adds	r4, r4, r1
 1827 001c E410     		asrs	r4, r4, #3
 1828 001e 6300     		lsls	r3, r4, #1
 1829 0020 1B19     		adds	r3, r3, r4
 1830 0022 5B01     		lsls	r3, r3, #5
 1831 0024 1818     		adds	r0, r3, r0
 1832              	.LVL112:
 443:Src/main.c    ****   }
 1833              		.loc 1 443 17 view .LVU448
 1834 0026 1130     		adds	r0, r0, #17
 1835 0028 124C     		ldr	r4, .L85
 1836 002a 255C     		ldrb	r5, [r4, r0]
 443:Src/main.c    ****   }
 1837              		.loc 1 443 68 view .LVU449
 1838 002c 760F     		lsrs	r6, r6, #29
 1839 002e 8919     		adds	r1, r1, r6
 1840              	.LVL113:
 443:Src/main.c    ****   }
 1841              		.loc 1 443 68 view .LVU450
 1842 0030 0A40     		ands	r2, r1
 1843              	.LVL114:
 443:Src/main.c    ****   }
 1844              		.loc 1 443 68 view .LVU451
 1845 0032 921B     		subs	r2, r2, r6
 1846 0034 12B2     		sxth	r2, r2
 443:Src/main.c    ****   }
 1847              		.loc 1 443 63 view .LVU452
 1848 0036 0123     		movs	r3, #1
 1849 0038 9340     		lsls	r3, r3, r2
 443:Src/main.c    ****   }
 1850              		.loc 1 443 56 view .LVU453
 1851 003a DB43     		mvns	r3, r3
 1852 003c 5BB2     		sxtb	r3, r3
 1853 003e 2B40     		ands	r3, r5
 1854 0040 2354     		strb	r3, [r4, r0]
 1855 0042 16E0     		b	.L81
 1856              	.LVL115:
 1857              	.L84:
 441:Src/main.c    ****   } else if (color == 0){
 1858              		.loc 1 441 5 is_stmt 1 view .LVU454
 441:Src/main.c    ****   } else if (color == 0){
 1859              		.loc 1 441 17 is_stmt 0 view .LVU455
 1860 0044 CD17     		asrs	r5, r1, #31
 1861 0046 0632     		adds	r2, r2, #6
 1862              	.LVL116:
 441:Src/main.c    ****   } else if (color == 0){
 1863              		.loc 1 441 17 view .LVU456
 1864 0048 1400     		movs	r4, r2
 1865 004a 2C40     		ands	r4, r5
 1866 004c 6418     		adds	r4, r4, r1
 1867 004e E410     		asrs	r4, r4, #3
 1868 0050 6300     		lsls	r3, r4, #1
 1869 0052 1B19     		adds	r3, r3, r4
 1870 0054 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 74


 1871 0056 1B18     		adds	r3, r3, r0
 1872 0058 1133     		adds	r3, r3, #17
 1873 005a 064E     		ldr	r6, .L85
 1874 005c F45C     		ldrb	r4, [r6, r3]
 441:Src/main.c    ****   } else if (color == 0){
 1875              		.loc 1 441 68 view .LVU457
 1876 005e 6D0F     		lsrs	r5, r5, #29
 1877 0060 4919     		adds	r1, r1, r5
 1878              	.LVL117:
 441:Src/main.c    ****   } else if (color == 0){
 1879              		.loc 1 441 68 view .LVU458
 1880 0062 0A40     		ands	r2, r1
 1881 0064 521B     		subs	r2, r2, r5
 1882 0066 12B2     		sxth	r2, r2
 441:Src/main.c    ****   } else if (color == 0){
 1883              		.loc 1 441 63 view .LVU459
 1884 0068 0121     		movs	r1, #1
 1885 006a 9140     		lsls	r1, r1, r2
 1886 006c 0A00     		movs	r2, r1
 441:Src/main.c    ****   } else if (color == 0){
 1887              		.loc 1 441 56 view .LVU460
 1888 006e 2243     		orrs	r2, r4
 1889 0070 F254     		strb	r2, [r6, r3]
 1890              	.LVL118:
 1891              	.L81:
 445:Src/main.c    **** 
 1892              		.loc 1 445 1 view .LVU461
 1893              		@ sp needed
 1894 0072 70BD     		pop	{r4, r5, r6, pc}
 1895              	.L86:
 1896              		.align	2
 1897              	.L85:
 1898 0074 00000000 		.word	screenBuffer
 1899              		.cfi_endproc
 1900              	.LFE46:
 1902              		.section	.text.draw_v_line,"ax",%progbits
 1903              		.align	1
 1904              		.global	draw_v_line
 1905              		.syntax unified
 1906              		.code	16
 1907              		.thumb_func
 1909              	draw_v_line:
 1910              	.LVL119:
 1911              	.LFB45:
 430:Src/main.c    ****   for(int i = 0; i <= h; i++){
 1912              		.loc 1 430 66 is_stmt 1 view -0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 0
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 430:Src/main.c    ****   for(int i = 0; i <= h; i++){
 1916              		.loc 1 430 66 is_stmt 0 view .LVU463
 1917 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1918              	.LCFI24:
 1919              		.cfi_def_cfa_offset 20
 1920              		.cfi_offset 4, -20
 1921              		.cfi_offset 5, -16
 1922              		.cfi_offset 6, -12
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 75


 1923              		.cfi_offset 7, -8
 1924              		.cfi_offset 14, -4
 1925 0002 C646     		mov	lr, r8
 1926 0004 00B5     		push	{lr}
 1927              	.LCFI25:
 1928              		.cfi_def_cfa_offset 24
 1929              		.cfi_offset 8, -24
 1930 0006 8046     		mov	r8, r0
 1931 0008 0F00     		movs	r7, r1
 1932 000a 1500     		movs	r5, r2
 1933 000c 1E00     		movs	r6, r3
 431:Src/main.c    ****     write_pixel(x, y+i, color);
 1934              		.loc 1 431 3 is_stmt 1 view .LVU464
 1935              	.LBB22:
 431:Src/main.c    ****     write_pixel(x, y+i, color);
 1936              		.loc 1 431 7 view .LVU465
 1937              	.LVL120:
 431:Src/main.c    ****     write_pixel(x, y+i, color);
 1938              		.loc 1 431 11 is_stmt 0 view .LVU466
 1939 000e 0024     		movs	r4, #0
 431:Src/main.c    ****     write_pixel(x, y+i, color);
 1940              		.loc 1 431 3 view .LVU467
 1941 0010 06E0     		b	.L88
 1942              	.LVL121:
 1943              	.L89:
 432:Src/main.c    ****   }
 1944              		.loc 1 432 5 is_stmt 1 view .LVU468
 432:Src/main.c    ****   }
 1945              		.loc 1 432 21 is_stmt 0 view .LVU469
 1946 0012 E119     		adds	r1, r4, r7
 432:Src/main.c    ****   }
 1947              		.loc 1 432 5 view .LVU470
 1948 0014 09B2     		sxth	r1, r1
 1949 0016 3200     		movs	r2, r6
 1950 0018 4046     		mov	r0, r8
 1951 001a FFF7FEFF 		bl	write_pixel
 1952              	.LVL122:
 431:Src/main.c    ****     write_pixel(x, y+i, color);
 1953              		.loc 1 431 27 is_stmt 1 discriminator 3 view .LVU471
 1954 001e 0134     		adds	r4, r4, #1
 1955              	.LVL123:
 1956              	.L88:
 431:Src/main.c    ****     write_pixel(x, y+i, color);
 1957              		.loc 1 431 20 discriminator 1 view .LVU472
 1958 0020 A542     		cmp	r5, r4
 1959 0022 F6DA     		bge	.L89
 1960              	.LBE22:
 434:Src/main.c    **** 
 1961              		.loc 1 434 1 is_stmt 0 view .LVU473
 1962              		@ sp needed
 1963              	.LVL124:
 1964              	.LVL125:
 1965              	.LVL126:
 1966              	.LVL127:
 1967              	.LVL128:
 434:Src/main.c    **** 
 1968              		.loc 1 434 1 view .LVU474
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 76


 1969 0024 80BC     		pop	{r7}
 1970 0026 B846     		mov	r8, r7
 1971 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 1972              		.cfi_endproc
 1973              	.LFE45:
 1975              		.section	.text.draw_char,"ax",%progbits
 1976              		.align	1
 1977              		.global	draw_char
 1978              		.syntax unified
 1979              		.code	16
 1980              		.thumb_func
 1982              	draw_char:
 1983              	.LVL129:
 1984              	.LFB47:
 449:Src/main.c    ****     c = c & 0x7F;
 1985              		.loc 1 449 75 is_stmt 1 view -0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 0
 1988              		@ frame_needed = 0, uses_anonymous_args = 0
 449:Src/main.c    ****     c = c & 0x7F;
 1989              		.loc 1 449 75 is_stmt 0 view .LVU476
 1990 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1991              	.LCFI26:
 1992              		.cfi_def_cfa_offset 20
 1993              		.cfi_offset 4, -20
 1994              		.cfi_offset 5, -16
 1995              		.cfi_offset 6, -12
 1996              		.cfi_offset 7, -8
 1997              		.cfi_offset 14, -4
 1998 0002 C646     		mov	lr, r8
 1999 0004 00B5     		push	{lr}
 2000              	.LCFI27:
 2001              		.cfi_def_cfa_offset 24
 2002              		.cfi_offset 8, -24
 2003 0006 0F00     		movs	r7, r1
 2004 0008 9046     		mov	r8, r2
 450:Src/main.c    ****     if (c < ' ') {
 2005              		.loc 1 450 5 is_stmt 1 view .LVU477
 450:Src/main.c    ****     if (c < ' ') {
 2006              		.loc 1 450 7 is_stmt 0 view .LVU478
 2007 000a 7F23     		movs	r3, #127
 2008              	.LVL130:
 450:Src/main.c    ****     if (c < ' ') {
 2009              		.loc 1 450 7 view .LVU479
 2010 000c 0340     		ands	r3, r0
 2011              	.LVL131:
 451:Src/main.c    ****         c = 0;
 2012              		.loc 1 451 5 is_stmt 1 view .LVU480
 2013 000e 6021     		movs	r1, #96
 2014              	.LVL132:
 451:Src/main.c    ****         c = 0;
 2015              		.loc 1 451 5 is_stmt 0 view .LVU481
 2016 0010 0A00     		movs	r2, r1
 2017              	.LVL133:
 451:Src/main.c    ****         c = 0;
 2018              		.loc 1 451 5 view .LVU482
 2019 0012 0240     		ands	r2, r0
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 77


 451:Src/main.c    ****         c = 0;
 2020              		.loc 1 451 8 view .LVU483
 2021 0014 0142     		tst	r1, r0
 2022 0016 01D0     		beq	.L91
 454:Src/main.c    ****     }
 2023              		.loc 1 454 9 is_stmt 1 view .LVU484
 454:Src/main.c    ****     }
 2024              		.loc 1 454 11 is_stmt 0 view .LVU485
 2025 0018 203B     		subs	r3, r3, #32
 2026              	.LVL134:
 454:Src/main.c    ****     }
 2027              		.loc 1 454 11 view .LVU486
 2028 001a DAB2     		uxtb	r2, r3
 2029              	.LVL135:
 2030              	.L91:
 456:Src/main.c    ****     for (uint8_t j=0; j<CHAR_WIDTH; j++) {
 2031              		.loc 1 456 5 is_stmt 1 view .LVU487
 456:Src/main.c    ****     for (uint8_t j=0; j<CHAR_WIDTH; j++) {
 2032              		.loc 1 456 15 is_stmt 0 view .LVU488
 2033 001c 5600     		lsls	r6, r2, #1
 2034 001e B618     		adds	r6, r6, r2
 2035 0020 7600     		lsls	r6, r6, #1
 2036 0022 114B     		ldr	r3, .L100
 2037 0024 F618     		adds	r6, r6, r3
 2038              	.LVL136:
 457:Src/main.c    ****         for (uint8_t i=0; i<CHAR_HEIGHT; i++) {
 2039              		.loc 1 457 5 is_stmt 1 view .LVU489
 2040              	.LBB23:
 457:Src/main.c    ****         for (uint8_t i=0; i<CHAR_HEIGHT; i++) {
 2041              		.loc 1 457 10 view .LVU490
 457:Src/main.c    ****         for (uint8_t i=0; i<CHAR_HEIGHT; i++) {
 2042              		.loc 1 457 18 is_stmt 0 view .LVU491
 2043 0026 0025     		movs	r5, #0
 457:Src/main.c    ****         for (uint8_t i=0; i<CHAR_HEIGHT; i++) {
 2044              		.loc 1 457 5 view .LVU492
 2045 0028 16E0     		b	.L92
 2046              	.LVL137:
 2047              	.L93:
 2048              	.LBB24:
 462:Src/main.c    ****             }
 2049              		.loc 1 462 17 is_stmt 1 view .LVU493
 2050 002a 4346     		mov	r3, r8
 2051 002c 1919     		adds	r1, r3, r4
 2052 002e 7819     		adds	r0, r7, r5
 2053 0030 0022     		movs	r2, #0
 2054 0032 FFF7FEFF 		bl	write_pixel
 2055              	.LVL138:
 2056              	.L94:
 458:Src/main.c    ****             if (chr[j] & (1<<i)) {
 2057              		.loc 1 458 43 discriminator 2 view .LVU494
 2058 0036 0134     		adds	r4, r4, #1
 2059              	.LVL139:
 458:Src/main.c    ****             if (chr[j] & (1<<i)) {
 2060              		.loc 1 458 43 is_stmt 0 discriminator 2 view .LVU495
 2061 0038 E4B2     		uxtb	r4, r4
 2062              	.LVL140:
 2063              	.L96:
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 78


 458:Src/main.c    ****             if (chr[j] & (1<<i)) {
 2064              		.loc 1 458 28 is_stmt 1 discriminator 1 view .LVU496
 2065 003a 072C     		cmp	r4, #7
 2066 003c 0AD8     		bhi	.L98
 459:Src/main.c    ****                 write_pixel(x+j, y+i, 1);
 2067              		.loc 1 459 13 view .LVU497
 459:Src/main.c    ****                 write_pixel(x+j, y+i, 1);
 2068              		.loc 1 459 20 is_stmt 0 view .LVU498
 2069 003e 735D     		ldrb	r3, [r6, r5]
 459:Src/main.c    ****                 write_pixel(x+j, y+i, 1);
 2070              		.loc 1 459 17 view .LVU499
 2071 0040 2341     		asrs	r3, r3, r4
 459:Src/main.c    ****                 write_pixel(x+j, y+i, 1);
 2072              		.loc 1 459 16 view .LVU500
 2073 0042 DB07     		lsls	r3, r3, #31
 2074 0044 F1D5     		bpl	.L93
 460:Src/main.c    ****             } else {
 2075              		.loc 1 460 17 is_stmt 1 view .LVU501
 2076 0046 4346     		mov	r3, r8
 2077 0048 1919     		adds	r1, r3, r4
 2078 004a 7819     		adds	r0, r7, r5
 2079 004c 0122     		movs	r2, #1
 2080 004e FFF7FEFF 		bl	write_pixel
 2081              	.LVL141:
 2082 0052 F0E7     		b	.L94
 2083              	.L98:
 460:Src/main.c    ****             } else {
 2084              		.loc 1 460 17 is_stmt 0 view .LVU502
 2085              	.LBE24:
 457:Src/main.c    ****         for (uint8_t i=0; i<CHAR_HEIGHT; i++) {
 2086              		.loc 1 457 38 is_stmt 1 discriminator 2 view .LVU503
 2087 0054 0135     		adds	r5, r5, #1
 2088              	.LVL142:
 457:Src/main.c    ****         for (uint8_t i=0; i<CHAR_HEIGHT; i++) {
 2089              		.loc 1 457 38 is_stmt 0 discriminator 2 view .LVU504
 2090 0056 EDB2     		uxtb	r5, r5
 2091              	.LVL143:
 2092              	.L92:
 457:Src/main.c    ****         for (uint8_t i=0; i<CHAR_HEIGHT; i++) {
 2093              		.loc 1 457 24 is_stmt 1 discriminator 1 view .LVU505
 2094 0058 052D     		cmp	r5, #5
 2095 005a 01D8     		bhi	.L99
 2096              	.LBB25:
 458:Src/main.c    ****             if (chr[j] & (1<<i)) {
 2097              		.loc 1 458 22 is_stmt 0 view .LVU506
 2098 005c 0024     		movs	r4, #0
 2099 005e ECE7     		b	.L96
 2100              	.L99:
 2101              	.LBE25:
 2102              	.LBE23:
 466:Src/main.c    **** 
 2103              		.loc 1 466 1 view .LVU507
 2104              		@ sp needed
 2105              	.LVL144:
 2106              	.LVL145:
 2107              	.LVL146:
 2108              	.LVL147:
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 79


 466:Src/main.c    **** 
 2109              		.loc 1 466 1 view .LVU508
 2110 0060 80BC     		pop	{r7}
 2111 0062 B846     		mov	r8, r7
 2112 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 2113              	.L101:
 2114 0066 C046     		.align	2
 2115              	.L100:
 2116 0068 00000000 		.word	font
 2117              		.cfi_endproc
 2118              	.LFE47:
 2120              		.section	.text.draw_string,"ax",%progbits
 2121              		.align	1
 2122              		.global	draw_string
 2123              		.syntax unified
 2124              		.code	16
 2125              		.thumb_func
 2127              	draw_string:
 2128              	.LVL148:
 2129              	.LFB48:
 468:Src/main.c    ****     while (*str) {
 2130              		.loc 1 468 86 is_stmt 1 view -0
 2131              		.cfi_startproc
 2132              		@ args = 0, pretend = 0, frame = 0
 2133              		@ frame_needed = 0, uses_anonymous_args = 0
 468:Src/main.c    ****     while (*str) {
 2134              		.loc 1 468 86 is_stmt 0 view .LVU510
 2135 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2136              	.LCFI28:
 2137              		.cfi_def_cfa_offset 24
 2138              		.cfi_offset 3, -24
 2139              		.cfi_offset 4, -20
 2140              		.cfi_offset 5, -16
 2141              		.cfi_offset 6, -12
 2142              		.cfi_offset 7, -8
 2143              		.cfi_offset 14, -4
 2144 0002 0500     		movs	r5, r0
 2145 0004 0C00     		movs	r4, r1
 2146 0006 1700     		movs	r7, r2
 2147 0008 1E00     		movs	r6, r3
 469:Src/main.c    ****         draw_char(*str++, x, y, brightness);
 2148              		.loc 1 469 5 is_stmt 1 view .LVU511
 469:Src/main.c    ****         draw_char(*str++, x, y, brightness);
 2149              		.loc 1 469 11 is_stmt 0 view .LVU512
 2150 000a 07E0     		b	.L103
 2151              	.LVL149:
 2152              	.L104:
 470:Src/main.c    ****         x += CHAR_WIDTH;
 2153              		.loc 1 470 9 is_stmt 1 view .LVU513
 470:Src/main.c    ****         x += CHAR_WIDTH;
 2154              		.loc 1 470 23 is_stmt 0 view .LVU514
 2155 000c 0135     		adds	r5, r5, #1
 2156              	.LVL150:
 470:Src/main.c    ****         x += CHAR_WIDTH;
 2157              		.loc 1 470 9 view .LVU515
 2158 000e 3300     		movs	r3, r6
 2159 0010 3A00     		movs	r2, r7
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 80


 2160 0012 2100     		movs	r1, r4
 2161 0014 FFF7FEFF 		bl	draw_char
 2162              	.LVL151:
 471:Src/main.c    ****     }
 2163              		.loc 1 471 9 is_stmt 1 view .LVU516
 471:Src/main.c    ****     }
 2164              		.loc 1 471 11 is_stmt 0 view .LVU517
 2165 0018 0634     		adds	r4, r4, #6
 2166              	.LVL152:
 471:Src/main.c    ****     }
 2167              		.loc 1 471 11 view .LVU518
 2168 001a E4B2     		uxtb	r4, r4
 2169              	.LVL153:
 2170              	.L103:
 469:Src/main.c    ****         draw_char(*str++, x, y, brightness);
 2171              		.loc 1 469 12 is_stmt 1 view .LVU519
 2172 001c 2878     		ldrb	r0, [r5]
 2173 001e 0028     		cmp	r0, #0
 2174 0020 F4D1     		bne	.L104
 473:Src/main.c    **** 
 2175              		.loc 1 473 1 is_stmt 0 view .LVU520
 2176              		@ sp needed
 2177              	.LVL154:
 2178              	.LVL155:
 2179              	.LVL156:
 2180              	.LVL157:
 473:Src/main.c    **** 
 2181              		.loc 1 473 1 view .LVU521
 2182 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2183              		.cfi_endproc
 2184              	.LFE48:
 2186              		.section	.text.SystemClock_Config,"ax",%progbits
 2187              		.align	1
 2188              		.global	SystemClock_Config
 2189              		.syntax unified
 2190              		.code	16
 2191              		.thumb_func
 2193              	SystemClock_Config:
 2194              	.LFB49:
 476:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2195              		.loc 1 476 1 is_stmt 1 view -0
 2196              		.cfi_startproc
 2197              		@ args = 0, pretend = 0, frame = 96
 2198              		@ frame_needed = 0, uses_anonymous_args = 0
 2199 0000 10B5     		push	{r4, lr}
 2200              	.LCFI29:
 2201              		.cfi_def_cfa_offset 8
 2202              		.cfi_offset 4, -8
 2203              		.cfi_offset 14, -4
 2204 0002 98B0     		sub	sp, sp, #96
 2205              	.LCFI30:
 2206              		.cfi_def_cfa_offset 104
 477:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2207              		.loc 1 477 3 view .LVU523
 477:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2208              		.loc 1 477 22 is_stmt 0 view .LVU524
 2209 0004 3422     		movs	r2, #52
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 81


 2210 0006 0021     		movs	r1, #0
 2211 0008 0BA8     		add	r0, sp, #44
 2212 000a FFF7FEFF 		bl	memset
 2213              	.LVL158:
 478:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 2214              		.loc 1 478 3 is_stmt 1 view .LVU525
 478:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 2215              		.loc 1 478 22 is_stmt 0 view .LVU526
 2216 000e 1024     		movs	r4, #16
 2217 0010 1022     		movs	r2, #16
 2218 0012 0021     		movs	r1, #0
 2219 0014 07A8     		add	r0, sp, #28
 2220 0016 FFF7FEFF 		bl	memset
 2221              	.LVL159:
 479:Src/main.c    **** 
 2222              		.loc 1 479 3 is_stmt 1 view .LVU527
 479:Src/main.c    **** 
 2223              		.loc 1 479 28 is_stmt 0 view .LVU528
 2224 001a 1C22     		movs	r2, #28
 2225 001c 0021     		movs	r1, #0
 2226 001e 6846     		mov	r0, sp
 2227 0020 FFF7FEFF 		bl	memset
 2228              	.LVL160:
 481:Src/main.c    ****                               |RCC_OSCILLATORTYPE_HSI48;
 2229              		.loc 1 481 3 is_stmt 1 view .LVU529
 481:Src/main.c    ****                               |RCC_OSCILLATORTYPE_HSI48;
 2230              		.loc 1 481 36 is_stmt 0 view .LVU530
 2231 0024 3223     		movs	r3, #50
 2232 0026 0B93     		str	r3, [sp, #44]
 483:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 2233              		.loc 1 483 3 is_stmt 1 view .LVU531
 483:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 2234              		.loc 1 483 30 is_stmt 0 view .LVU532
 2235 0028 313B     		subs	r3, r3, #49
 2236 002a 0E93     		str	r3, [sp, #56]
 484:Src/main.c    ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 2237              		.loc 1 484 3 is_stmt 1 view .LVU533
 484:Src/main.c    ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 2238              		.loc 1 484 32 is_stmt 0 view .LVU534
 2239 002c 1393     		str	r3, [sp, #76]
 485:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2240              		.loc 1 485 3 is_stmt 1 view .LVU535
 485:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2241              		.loc 1 485 32 is_stmt 0 view .LVU536
 2242 002e 1093     		str	r3, [sp, #64]
 486:Src/main.c    ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 2243              		.loc 1 486 3 is_stmt 1 view .LVU537
 486:Src/main.c    ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 2244              		.loc 1 486 41 is_stmt 0 view .LVU538
 2245 0030 0F94     		str	r4, [sp, #60]
 487:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2246              		.loc 1 487 3 is_stmt 1 view .LVU539
 487:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2247              		.loc 1 487 43 is_stmt 0 view .LVU540
 2248 0032 1194     		str	r4, [sp, #68]
 488:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI48;
 2249              		.loc 1 488 3 is_stmt 1 view .LVU541
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 82


 488:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI48;
 2250              		.loc 1 488 34 is_stmt 0 view .LVU542
 2251 0034 0E3C     		subs	r4, r4, #14
 2252 0036 1494     		str	r4, [sp, #80]
 489:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 2253              		.loc 1 489 3 is_stmt 1 view .LVU543
 489:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 2254              		.loc 1 489 35 is_stmt 0 view .LVU544
 2255 0038 C022     		movs	r2, #192
 2256 003a 5202     		lsls	r2, r2, #9
 2257 003c 1592     		str	r2, [sp, #84]
 490:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV2;
 2258              		.loc 1 490 3 is_stmt 1 view .LVU545
 491:Src/main.c    ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 2259              		.loc 1 491 3 view .LVU546
 491:Src/main.c    ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 2260              		.loc 1 491 32 is_stmt 0 view .LVU547
 2261 003e 1793     		str	r3, [sp, #92]
 492:Src/main.c    **** 
 2262              		.loc 1 492 3 is_stmt 1 view .LVU548
 2263 0040 0BA8     		add	r0, sp, #44
 2264 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2265              	.LVL161:
 494:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 2266              		.loc 1 494 3 view .LVU549
 494:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 2267              		.loc 1 494 31 is_stmt 0 view .LVU550
 2268 0046 0723     		movs	r3, #7
 2269 0048 0793     		str	r3, [sp, #28]
 496:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2270              		.loc 1 496 3 is_stmt 1 view .LVU551
 496:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2271              		.loc 1 496 34 is_stmt 0 view .LVU552
 2272 004a 0894     		str	r4, [sp, #32]
 497:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2273              		.loc 1 497 3 is_stmt 1 view .LVU553
 497:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2274              		.loc 1 497 35 is_stmt 0 view .LVU554
 2275 004c 0024     		movs	r4, #0
 2276 004e 0994     		str	r4, [sp, #36]
 498:Src/main.c    **** 
 2277              		.loc 1 498 3 is_stmt 1 view .LVU555
 498:Src/main.c    **** 
 2278              		.loc 1 498 36 is_stmt 0 view .LVU556
 2279 0050 0A94     		str	r4, [sp, #40]
 500:Src/main.c    **** 
 2280              		.loc 1 500 3 is_stmt 1 view .LVU557
 2281 0052 0121     		movs	r1, #1
 2282 0054 07A8     		add	r0, sp, #28
 2283 0056 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2284              	.LVL162:
 502:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 2285              		.loc 1 502 3 view .LVU558
 502:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 2286              		.loc 1 502 38 is_stmt 0 view .LVU559
 2287 005a 044B     		ldr	r3, .L106
 2288 005c 0093     		str	r3, [sp]
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 83


 503:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 2289              		.loc 1 503 3 is_stmt 1 view .LVU560
 503:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 2290              		.loc 1 503 36 is_stmt 0 view .LVU561
 2291 005e 0494     		str	r4, [sp, #16]
 504:Src/main.c    **** 
 2292              		.loc 1 504 3 is_stmt 1 view .LVU562
 504:Src/main.c    **** 
 2293              		.loc 1 504 35 is_stmt 0 view .LVU563
 2294 0060 0694     		str	r4, [sp, #24]
 506:Src/main.c    **** }
 2295              		.loc 1 506 3 is_stmt 1 view .LVU564
 2296 0062 6846     		mov	r0, sp
 2297 0064 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 2298              	.LVL163:
 507:Src/main.c    **** 
 2299              		.loc 1 507 1 is_stmt 0 view .LVU565
 2300 0068 18B0     		add	sp, sp, #96
 2301              		@ sp needed
 2302 006a 10BD     		pop	{r4, pc}
 2303              	.L107:
 2304              		.align	2
 2305              	.L106:
 2306 006c 20000200 		.word	131104
 2307              		.cfi_endproc
 2308              	.LFE49:
 2310              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2311              		.align	2
 2312              	.LC28:
 2313 0000 41646A75 		.ascii	"Adjust\000"
 2313      737400
 2314 0007 00       		.align	2
 2315              	.LC30:
 2316 0008 50726F66 		.ascii	"Profile\000"
 2316      696C6500 
 2317              		.align	2
 2318              	.LC32:
 2319 0010 21414354 		.ascii	"!ACTV\000"
 2319      5600
 2320 0016 0000     		.align	2
 2321              	.LC34:
 2322 0018 21505752 		.ascii	"!PWRD\000"
 2322      4400
 2323 001e 0000     		.align	2
 2324              	.LC43:
 2325 0020 50442025 		.ascii	"PD %s %1d\000"
 2325      73202531 
 2325      6400
 2326              		.global	__aeabi_f2uiz
 2327              		.global	__aeabi_d2uiz
 2328 002a 0000     		.align	2
 2329              	.LC45:
 2330 002c 2531642E 		.ascii	"%1d.%1d A %2d W\000"
 2330      25316420 
 2330      41202532 
 2330      64205700 
 2331              		.align	2
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 84


 2332              	.LC47:
 2333 003c 55534220 		.ascii	"USB !USB-PD\000"
 2333      21555342 
 2333      2D504400 
 2334              		.align	2
 2335              	.LC49:
 2336 0048 49726F6E 		.ascii	"Iron Disabled\000"
 2336      20446973 
 2336      61626C65 
 2336      6400
 2337 0056 0000     		.align	2
 2338              	.LC54:
 2339 0058 25642043 		.ascii	"%d C   \000"
 2339      20202000 
 2340              		.align	2
 2341              	.LC56:
 2342 0060 25642E25 		.ascii	"%d.%d C\000"
 2342      64204300 
 2343              		.align	2
 2344              	.LC58:
 2345 0068 25642E25 		.ascii	"%d.%d V\000"
 2345      64205600 
 2346              		.align	2
 2347              	.LC60:
 2348 0070 25642E25 		.ascii	"%d.%d A\000"
 2348      64204100 
 2349              		.section	.text.main,"ax",%progbits
 2350              		.align	1
 2351              		.global	main
 2352              		.syntax unified
 2353              		.code	16
 2354              		.thumb_func
 2356              	main:
 2357              	.LFB37:
 128:Src/main.c    ****   HAL_Init();
 2358              		.loc 1 128 1 is_stmt 1 view -0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 80
 2361              		@ frame_needed = 0, uses_anonymous_args = 0
 2362 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2363              	.LCFI31:
 2364              		.cfi_def_cfa_offset 20
 2365              		.cfi_offset 4, -20
 2366              		.cfi_offset 5, -16
 2367              		.cfi_offset 6, -12
 2368              		.cfi_offset 7, -8
 2369              		.cfi_offset 14, -4
 2370 0002 D646     		mov	lr, r10
 2371 0004 4F46     		mov	r7, r9
 2372 0006 4646     		mov	r6, r8
 2373 0008 C0B5     		push	{r6, r7, lr}
 2374              	.LCFI32:
 2375              		.cfi_def_cfa_offset 32
 2376              		.cfi_offset 8, -32
 2377              		.cfi_offset 9, -28
 2378              		.cfi_offset 10, -24
 2379 000a 96B0     		sub	sp, sp, #88
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 85


 2380              	.LCFI33:
 2381              		.cfi_def_cfa_offset 120
 129:Src/main.c    **** 
 2382              		.loc 1 129 3 view .LVU567
 2383 000c FFF7FEFF 		bl	HAL_Init
 2384              	.LVL164:
 131:Src/main.c    **** 
 2385              		.loc 1 131 3 view .LVU568
 2386 0010 FFF7FEFF 		bl	SystemClock_Config
 2387              	.LVL165:
 133:Src/main.c    ****   MX_DMA_Init();
 2388              		.loc 1 133 3 view .LVU569
 2389 0014 FFF7FEFF 		bl	MX_GPIO_Init
 2390              	.LVL166:
 134:Src/main.c    ****   MX_ADC_Init();
 2391              		.loc 1 134 3 view .LVU570
 2392 0018 FFF7FEFF 		bl	MX_DMA_Init
 2393              	.LVL167:
 135:Src/main.c    ****   MX_I2C1_Init();
 2394              		.loc 1 135 3 view .LVU571
 2395 001c FFF7FEFF 		bl	MX_ADC_Init
 2396              	.LVL168:
 136:Src/main.c    ****   MX_I2C2_Init();
 2397              		.loc 1 136 3 view .LVU572
 2398 0020 FFF7FEFF 		bl	MX_I2C1_Init
 2399              	.LVL169:
 137:Src/main.c    ****   MX_TIM1_Init();
 2400              		.loc 1 137 3 view .LVU573
 2401 0024 FFF7FEFF 		bl	MX_I2C2_Init
 2402              	.LVL170:
 138:Src/main.c    ****   TIM3_Init();
 2403              		.loc 1 138 3 view .LVU574
 2404 0028 FFF7FEFF 		bl	MX_TIM1_Init
 2405              	.LVL171:
 139:Src/main.c    **** 
 2406              		.loc 1 139 3 view .LVU575
 2407 002c FFF7FEFF 		bl	TIM3_Init
 2408              	.LVL172:
 142:Src/main.c    ****   // 30 W and 80 W - ensures iron is well behaved and enumerates PD profile before drawing it
 2409              		.loc 1 142 3 view .LVU576
 2410 0030 FA22     		movs	r2, #250
 2411 0032 5200     		lsls	r2, r2, #1
 2412 0034 9C49     		ldr	r1, .L143
 2413 0036 0120     		movs	r0, #1
 2414 0038 FFF7FEFF 		bl	stusb_update_pdo
 2415              	.LVL173:
 144:Src/main.c    ****   stusb_update_pdo(3, 20000, 2000);
 2416              		.loc 1 144 3 view .LVU577
 2417 003c 9B4A     		ldr	r2, .L143+4
 2418 003e 9C49     		ldr	r1, .L143+8
 2419 0040 0220     		movs	r0, #2
 2420 0042 FFF7FEFF 		bl	stusb_update_pdo
 2421              	.LVL174:
 145:Src/main.c    ****   stusb_set_valid_pdo(3);
 2422              		.loc 1 145 3 view .LVU578
 2423 0046 FA22     		movs	r2, #250
 2424 0048 D200     		lsls	r2, r2, #3
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 86


 2425 004a 9A49     		ldr	r1, .L143+12
 2426 004c 0320     		movs	r0, #3
 2427 004e FFF7FEFF 		bl	stusb_update_pdo
 2428              	.LVL175:
 146:Src/main.c    **** 
 2429              		.loc 1 146 3 view .LVU579
 2430 0052 0320     		movs	r0, #3
 2431 0054 FFF7FEFF 		bl	stusb_set_valid_pdo
 2432              	.LVL176:
 148:Src/main.c    ****   disp_init();
 2433              		.loc 1 148 3 view .LVU580
 2434 0058 3220     		movs	r0, #50
 2435 005a FFF7FEFF 		bl	HAL_Delay
 2436              	.LVL177:
 149:Src/main.c    ****   HAL_Delay(150);
 2437              		.loc 1 149 3 view .LVU581
 2438 005e FFF7FEFF 		bl	disp_init
 2439              	.LVL178:
 150:Src/main.c    ****   clear_screen();
 2440              		.loc 1 150 3 view .LVU582
 2441 0062 9620     		movs	r0, #150
 2442 0064 FFF7FEFF 		bl	HAL_Delay
 2443              	.LVL179:
 151:Src/main.c    **** 
 2444              		.loc 1 151 3 view .LVU583
 2445 0068 FFF7FEFF 		bl	clear_screen
 2446              	.LVL180:
 153:Src/main.c    ****   HAL_TIM_OC_Start(&htim1, TIM_CHANNEL_4);
 2447              		.loc 1 153 3 view .LVU584
 2448 006c 924C     		ldr	r4, .L143+16
 2449 006e 0021     		movs	r1, #0
 2450 0070 2000     		movs	r0, r4
 2451 0072 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2452              	.LVL181:
 154:Src/main.c    **** 
 2453              		.loc 1 154 3 view .LVU585
 2454 0076 0C21     		movs	r1, #12
 2455 0078 2000     		movs	r0, r4
 2456 007a FFF7FEFF 		bl	HAL_TIM_OC_Start
 2457              	.LVL182:
 156:Src/main.c    **** 
 2458              		.loc 1 156 3 view .LVU586
 2459 007e 8F49     		ldr	r1, .L143+20
 2460 0080 8F48     		ldr	r0, .L143+24
 2461 0082 0422     		movs	r2, #4
 2462 0084 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2463              	.LVL183:
 159:Src/main.c    ****     draw_string(dfu_string, 1, 1 ,1);
 2464              		.loc 1 159 3 view .LVU587
 159:Src/main.c    ****     draw_string(dfu_string, 1, 1 ,1);
 2465              		.loc 1 159 6 is_stmt 0 view .LVU588
 2466 0088 9020     		movs	r0, #144
 2467 008a 0821     		movs	r1, #8
 2468 008c C005     		lsls	r0, r0, #23
 2469 008e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2470              	.LVL184:
 159:Src/main.c    ****     draw_string(dfu_string, 1, 1 ,1);
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 87


 2471              		.loc 1 159 5 discriminator 1 view .LVU589
 2472 0092 0028     		cmp	r0, #0
 2473 0094 07D0     		beq	.L109
 159:Src/main.c    ****     draw_string(dfu_string, 1, 1 ,1);
 2474              		.loc 1 159 40 discriminator 1 view .LVU590
 2475 0096 9020     		movs	r0, #144
 2476 0098 1021     		movs	r1, #16
 2477 009a C005     		lsls	r0, r0, #23
 2478 009c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2479              	.LVL185:
 159:Src/main.c    ****     draw_string(dfu_string, 1, 1 ,1);
 2480              		.loc 1 159 37 discriminator 1 view .LVU591
 2481 00a0 0028     		cmp	r0, #0
 2482 00a2 00D0     		beq	.LCB2001
 2483 00a4 93E0     		b	.L138	@long jump
 2484              	.LCB2001:
 2485              	.L109:
 2486              	.LBB26:
 167:Src/main.c    ****     draw_string(by_string, 10, 9 ,1);
 2487              		.loc 1 167 5 is_stmt 1 view .LVU592
 2488 00a6 874B     		ldr	r3, .L143+28
 2489 00a8 1868     		ldr	r0, [r3]
 2490 00aa 0123     		movs	r3, #1
 2491 00ac 0122     		movs	r2, #1
 2492 00ae 0F21     		movs	r1, #15
 2493 00b0 FFF7FEFF 		bl	draw_string
 2494              	.LVL186:
 168:Src/main.c    ****     refresh();
 2495              		.loc 1 168 5 view .LVU593
 2496 00b4 844B     		ldr	r3, .L143+32
 2497 00b6 1868     		ldr	r0, [r3]
 2498 00b8 0123     		movs	r3, #1
 2499 00ba 0922     		movs	r2, #9
 2500 00bc 0A21     		movs	r1, #10
 2501 00be FFF7FEFF 		bl	draw_string
 2502              	.LVL187:
 169:Src/main.c    **** #ifdef ENABLESERIAL
 2503              		.loc 1 169 5 view .LVU594
 2504 00c2 FFF7FEFF 		bl	refresh
 2505              	.LVL188:
 182:Src/main.c    ****     unsigned char line2[22];
 2506              		.loc 1 182 5 view .LVU595
 183:Src/main.c    ****     STUSB_GEN1S_RDO_REG_STATUS_RegTypeDef Nego_RDO;
 2507              		.loc 1 183 5 view .LVU596
 184:Src/main.c    **** 
 2508              		.loc 1 184 5 view .LVU597
 186:Src/main.c    ****         s.imax = (float) Nego_RDO.b.MaxCurrent / 100.0;
 2509              		.loc 1 186 7 view .LVU598
 186:Src/main.c    ****         s.imax = (float) Nego_RDO.b.MaxCurrent / 100.0;
 2510              		.loc 1 186 11 is_stmt 0 view .LVU599
 2511 00c6 06A8     		add	r0, sp, #24
 2512 00c8 FFF7FEFF 		bl	stusb_read_rdo
 2513              	.LVL189:
 186:Src/main.c    ****         s.imax = (float) Nego_RDO.b.MaxCurrent / 100.0;
 2514              		.loc 1 186 10 discriminator 1 view .LVU600
 2515 00cc 0028     		cmp	r0, #0
 2516 00ce 00D0     		beq	.LCB2028
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 88


 2517 00d0 94E0     		b	.L110	@long jump
 2518              	.LCB2028:
 186:Src/main.c    ****         s.imax = (float) Nego_RDO.b.MaxCurrent / 100.0;
 2519              		.loc 1 186 72 discriminator 1 view .LVU601
 2520 00d2 1B23     		movs	r3, #27
 2521 00d4 6B44     		add	r3, r3, sp
 2522 00d6 1A78     		ldrb	r2, [r3]
 2523 00d8 7023     		movs	r3, #112
 186:Src/main.c    ****         s.imax = (float) Nego_RDO.b.MaxCurrent / 100.0;
 2524              		.loc 1 186 47 discriminator 1 view .LVU602
 2525 00da 1A42     		tst	r2, r3
 2526 00dc 00D1     		bne	.LCB2036
 2527 00de 8DE0     		b	.L110	@long jump
 2528              	.LCB2036:
 187:Src/main.c    ****         s.pdo = Nego_RDO.b.Object_Pos;
 2529              		.loc 1 187 9 is_stmt 1 view .LVU603
 187:Src/main.c    ****         s.pdo = Nego_RDO.b.Object_Pos;
 2530              		.loc 1 187 36 is_stmt 0 view .LVU604
 2531 00e0 06AB     		add	r3, sp, #24
 2532 00e2 1888     		ldrh	r0, [r3]
 2533 00e4 8005     		lsls	r0, r0, #22
 2534 00e6 800D     		lsrs	r0, r0, #22
 187:Src/main.c    ****         s.pdo = Nego_RDO.b.Object_Pos;
 2535              		.loc 1 187 18 view .LVU605
 2536 00e8 FFF7FEFF 		bl	__aeabi_ui2f
 2537              	.LVL190:
 187:Src/main.c    ****         s.pdo = Nego_RDO.b.Object_Pos;
 2538              		.loc 1 187 48 view .LVU606
 2539 00ec 7749     		ldr	r1, .L143+36
 2540 00ee FFF7FEFF 		bl	__aeabi_fdiv
 2541              	.LVL191:
 187:Src/main.c    ****         s.pdo = Nego_RDO.b.Object_Pos;
 2542              		.loc 1 187 16 view .LVU607
 2543 00f2 774A     		ldr	r2, .L143+40
 2544 00f4 5061     		str	r0, [r2, #20]
 188:Src/main.c    ****       } else {
 2545              		.loc 1 188 9 is_stmt 1 view .LVU608
 188:Src/main.c    ****       } else {
 2546              		.loc 1 188 27 is_stmt 0 view .LVU609
 2547 00f6 1B23     		movs	r3, #27
 2548 00f8 6B44     		add	r3, r3, sp
 2549 00fa 1B78     		ldrb	r3, [r3]
 2550 00fc 5B06     		lsls	r3, r3, #25
 2551 00fe 5B0F     		lsrs	r3, r3, #29
 188:Src/main.c    ****       } else {
 2552              		.loc 1 188 15 view .LVU610
 2553 0100 2521     		movs	r1, #37
 2554 0102 5354     		strb	r3, [r2, r1]
 2555              	.L111:
 202:Src/main.c    ****       sprintf((char * restrict) line1, "PD %s %1d", s.pdo > 3 ? "Adjust" : "Profile", s.pdo);
 2556              		.loc 1 202 5 is_stmt 1 view .LVU611
 202:Src/main.c    ****       sprintf((char * restrict) line1, "PD %s %1d", s.pdo > 3 ? "Adjust" : "Profile", s.pdo);
 2557              		.loc 1 202 10 is_stmt 0 view .LVU612
 2558 0104 724B     		ldr	r3, .L143+40
 2559 0106 2522     		movs	r2, #37
 2560 0108 9B5C     		ldrb	r3, [r3, r2]
 202:Src/main.c    ****       sprintf((char * restrict) line1, "PD %s %1d", s.pdo > 3 ? "Adjust" : "Profile", s.pdo);
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 89


 2561              		.loc 1 202 8 view .LVU613
 2562 010a 002B     		cmp	r3, #0
 2563 010c 00D1     		bne	.LCB2064
 2564 010e A6E0     		b	.L113	@long jump
 2565              	.LCB2064:
 203:Src/main.c    ****       sprintf((char * restrict) line2, "%1d.%1d A %2d W", (uint16_t)s.imax,(uint16_t)((s.imax-(uint
 2566              		.loc 1 203 7 is_stmt 1 view .LVU614
 2567 0110 032B     		cmp	r3, #3
 2568 0112 00D8     		bhi	.LCB2067
 2569 0114 A1E0     		b	.L130	@long jump
 2570              	.LCB2067:
 203:Src/main.c    ****       sprintf((char * restrict) line2, "%1d.%1d A %2d W", (uint16_t)s.imax,(uint16_t)((s.imax-(uint
 2571              		.loc 1 203 7 is_stmt 0 discriminator 1 view .LVU615
 2572 0116 6F4A     		ldr	r2, .L143+44
 2573              	.L114:
 203:Src/main.c    ****       sprintf((char * restrict) line2, "%1d.%1d A %2d W", (uint16_t)s.imax,(uint16_t)((s.imax-(uint
 2574              		.loc 1 203 7 discriminator 4 view .LVU616
 2575 0118 6F49     		ldr	r1, .L143+48
 2576 011a 0AA8     		add	r0, sp, #40
 2577 011c FFF7FEFF 		bl	sprintf
 2578              	.LVL192:
 204:Src/main.c    ****     } else {
 2579              		.loc 1 204 7 is_stmt 1 view .LVU617
 204:Src/main.c    ****     } else {
 2580              		.loc 1 204 70 is_stmt 0 view .LVU618
 2581 0120 6B4E     		ldr	r6, .L143+40
 2582 0122 7369     		ldr	r3, [r6, #20]
 2583 0124 9846     		mov	r8, r3
 204:Src/main.c    ****     } else {
 2584              		.loc 1 204 59 view .LVU619
 2585 0126 181C     		adds	r0, r3, #0
 2586 0128 FFF7FEFF 		bl	__aeabi_f2uiz
 2587              	.LVL193:
 2588 012c 84B2     		uxth	r4, r0
 204:Src/main.c    ****     } else {
 2589              		.loc 1 204 94 view .LVU620
 2590 012e 2000     		movs	r0, r4
 2591 0130 FFF7FEFF 		bl	__aeabi_i2f
 2592              	.LVL194:
 2593 0134 011C     		adds	r1, r0, #0
 2594 0136 4046     		mov	r0, r8
 2595 0138 FFF7FEFF 		bl	__aeabi_fsub
 2596              	.LVL195:
 204:Src/main.c    ****     } else {
 2597              		.loc 1 204 112 view .LVU621
 2598 013c 6749     		ldr	r1, .L143+52
 2599 013e FFF7FEFF 		bl	__aeabi_fmul
 2600              	.LVL196:
 204:Src/main.c    ****     } else {
 2601              		.loc 1 204 76 view .LVU622
 2602 0142 FFF7FEFF 		bl	__aeabi_f2uiz
 2603              	.LVL197:
 2604 0146 85B2     		uxth	r5, r0
 204:Src/main.c    ****     } else {
 2605              		.loc 1 204 139 view .LVU623
 2606 0148 B068     		ldr	r0, [r6, #8]
 204:Src/main.c    ****     } else {
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 90


 2607              		.loc 1 204 133 view .LVU624
 2608 014a FFF7FEFF 		bl	__aeabi_f2d
 2609              	.LVL198:
 2610 014e FFF7FEFF 		bl	ceil
 2611              	.LVL199:
 2612 0152 0600     		movs	r6, r0
 2613 0154 0F00     		movs	r7, r1
 204:Src/main.c    ****     } else {
 2614              		.loc 1 204 148 discriminator 1 view .LVU625
 2615 0156 4046     		mov	r0, r8
 2616 0158 FFF7FEFF 		bl	__aeabi_f2d
 2617              	.LVL200:
 2618 015c 0200     		movs	r2, r0
 2619 015e 0B00     		movs	r3, r1
 204:Src/main.c    ****     } else {
 2620              		.loc 1 204 145 discriminator 1 view .LVU626
 2621 0160 3000     		movs	r0, r6
 2622 0162 3900     		movs	r1, r7
 2623 0164 FFF7FEFF 		bl	__aeabi_dmul
 2624              	.LVL201:
 204:Src/main.c    ****     } else {
 2625              		.loc 1 204 121 discriminator 1 view .LVU627
 2626 0168 FFF7FEFF 		bl	__aeabi_d2uiz
 2627              	.LVL202:
 2628 016c 80B2     		uxth	r0, r0
 204:Src/main.c    ****     } else {
 2629              		.loc 1 204 7 discriminator 1 view .LVU628
 2630 016e 5C49     		ldr	r1, .L143+56
 2631 0170 0090     		str	r0, [sp]
 2632 0172 2B00     		movs	r3, r5
 2633 0174 2200     		movs	r2, r4
 2634 0176 10A8     		add	r0, sp, #64
 2635 0178 FFF7FEFF 		bl	sprintf
 2636              	.LVL203:
 2637              	.L115:
 209:Src/main.c    ****     draw_string(line1, 10, 1 ,1);
 2638              		.loc 1 209 5 is_stmt 1 view .LVU629
 2639 017c FFF7FEFF 		bl	clear_screen
 2640              	.LVL204:
 210:Src/main.c    ****     draw_string(line2, 10, 9 ,1);
 2641              		.loc 1 210 5 view .LVU630
 2642 0180 0123     		movs	r3, #1
 2643 0182 0122     		movs	r2, #1
 2644 0184 0A21     		movs	r1, #10
 2645 0186 0AA8     		add	r0, sp, #40
 2646 0188 FFF7FEFF 		bl	draw_string
 2647              	.LVL205:
 211:Src/main.c    ****     refresh();
 2648              		.loc 1 211 5 view .LVU631
 2649 018c 0123     		movs	r3, #1
 2650 018e 0922     		movs	r2, #9
 2651 0190 0A21     		movs	r1, #10
 2652 0192 10A8     		add	r0, sp, #64
 2653 0194 FFF7FEFF 		bl	draw_string
 2654              	.LVL206:
 212:Src/main.c    ****     HAL_Delay(1000);
 2655              		.loc 1 212 5 view .LVU632
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 91


 2656 0198 FFF7FEFF 		bl	refresh
 2657              	.LVL207:
 213:Src/main.c    **** #endif
 2658              		.loc 1 213 5 view .LVU633
 2659 019c FA24     		movs	r4, #250
 2660 019e A400     		lsls	r4, r4, #2
 2661 01a0 2000     		movs	r0, r4
 2662 01a2 FFF7FEFF 		bl	HAL_Delay
 2663              	.LVL208:
 2664              	.LBE26:
 217:Src/main.c    ****   MX_IWDG_Init();
 2665              		.loc 1 217 3 view .LVU634
 2666 01a6 2000     		movs	r0, r4
 2667 01a8 FFF7FEFF 		bl	HAL_Delay
 2668              	.LVL209:
 218:Src/main.c    **** 
 2669              		.loc 1 218 3 view .LVU635
 2670 01ac FFF7FEFF 		bl	MX_IWDG_Init
 2671              	.LVL210:
 220:Src/main.c    ****   if(r.target > 400) r.target = 220;  //initial temp set
 2672              		.loc 1 220 3 view .LVU636
 220:Src/main.c    ****   if(r.target > 400) r.target = 220;  //initial temp set
 2673              		.loc 1 220 14 is_stmt 0 view .LVU637
 2674 01b0 4C4B     		ldr	r3, .L143+60
 2675 01b2 1C88     		ldrh	r4, [r3]
 220:Src/main.c    ****   if(r.target > 400) r.target = 220;  //initial temp set
 2676              		.loc 1 220 12 view .LVU638
 2677 01b4 4C4D     		ldr	r5, .L143+64
 2678 01b6 2000     		movs	r0, r4
 2679 01b8 FFF7FEFF 		bl	__aeabi_ui2f
 2680              	.LVL211:
 2681 01bc 2860     		str	r0, [r5]
 221:Src/main.c    **** 
 2682              		.loc 1 221 3 is_stmt 1 view .LVU639
 221:Src/main.c    **** 
 2683              		.loc 1 221 5 is_stmt 0 view .LVU640
 2684 01be C823     		movs	r3, #200
 2685 01c0 5B00     		lsls	r3, r3, #1
 2686 01c2 9C42     		cmp	r4, r3
 2687 01c4 00D8     		bhi	.LCB2154
 2688 01c6 D6E1     		b	.L129	@long jump
 2689              	.LCB2154:
 221:Src/main.c    **** 
 2690              		.loc 1 221 22 is_stmt 1 discriminator 1 view .LVU641
 221:Src/main.c    **** 
 2691              		.loc 1 221 31 is_stmt 0 discriminator 1 view .LVU642
 2692 01c8 484A     		ldr	r2, .L143+68
 2693 01ca 2A60     		str	r2, [r5]
 2694 01cc D3E1     		b	.L129
 2695              	.L138:
 160:Src/main.c    ****     draw_string(dfu_string, 1, 8 ,1);
 2696              		.loc 1 160 5 is_stmt 1 view .LVU643
 2697 01ce 484C     		ldr	r4, .L143+72
 2698 01d0 0123     		movs	r3, #1
 2699 01d2 1A00     		movs	r2, r3
 2700 01d4 1900     		movs	r1, r3
 2701 01d6 2068     		ldr	r0, [r4]
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 92


 2702 01d8 FFF7FEFF 		bl	draw_string
 2703              	.LVL212:
 161:Src/main.c    ****     refresh();
 2704              		.loc 1 161 5 view .LVU644
 2705 01dc 0123     		movs	r3, #1
 2706 01de 0822     		movs	r2, #8
 2707 01e0 1900     		movs	r1, r3
 2708 01e2 2068     		ldr	r0, [r4]
 2709 01e4 FFF7FEFF 		bl	draw_string
 2710              	.LVL213:
 162:Src/main.c    ****     HAL_Delay(40);
 2711              		.loc 1 162 5 view .LVU645
 2712 01e8 FFF7FEFF 		bl	refresh
 2713              	.LVL214:
 163:Src/main.c    ****     *((unsigned long *)0x20003FF0) = 0xDEADBEEF;
 2714              		.loc 1 163 5 view .LVU646
 2715 01ec 2820     		movs	r0, #40
 2716 01ee FFF7FEFF 		bl	HAL_Delay
 2717              	.LVL215:
 164:Src/main.c    ****     NVIC_SystemReset();
 2718              		.loc 1 164 5 view .LVU647
 164:Src/main.c    ****     NVIC_SystemReset();
 2719              		.loc 1 164 36 is_stmt 0 view .LVU648
 2720 01f2 404B     		ldr	r3, .L143+76
 2721 01f4 404A     		ldr	r2, .L143+80
 2722 01f6 1A60     		str	r2, [r3]
 165:Src/main.c    ****   } else {
 2723              		.loc 1 165 5 is_stmt 1 view .LVU649
 2724 01f8 FFF7FEFF 		bl	NVIC_SystemReset
 2725              	.LVL216:
 2726              	.L110:
 2727              	.LBB27:
 190:Src/main.c    ****         stusb_update_pdo(3, 12000, 1000);
 2728              		.loc 1 190 9 view .LVU650
 2729 01fc E122     		movs	r2, #225
 2730 01fe 9200     		lsls	r2, r2, #2
 2731 0200 3E49     		ldr	r1, .L143+84
 2732 0202 0220     		movs	r0, #2
 2733 0204 FFF7FEFF 		bl	stusb_update_pdo
 2734              	.LVL217:
 191:Src/main.c    ****         stusb_soft_reset();
 2735              		.loc 1 191 9 view .LVU651
 2736 0208 FA22     		movs	r2, #250
 2737 020a 9200     		lsls	r2, r2, #2
 2738 020c 3C49     		ldr	r1, .L143+88
 2739 020e 0320     		movs	r0, #3
 2740 0210 FFF7FEFF 		bl	stusb_update_pdo
 2741              	.LVL218:
 192:Src/main.c    ****         HAL_Delay(300);
 2742              		.loc 1 192 9 view .LVU652
 2743 0214 FFF7FEFF 		bl	stusb_soft_reset
 2744              	.LVL219:
 193:Src/main.c    ****         if (stusb_read_rdo(&Nego_RDO) == HAL_OK) {
 2745              		.loc 1 193 9 view .LVU653
 2746 0218 9620     		movs	r0, #150
 2747 021a 4000     		lsls	r0, r0, #1
 2748 021c FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 93


 2749              	.LVL220:
 194:Src/main.c    ****           s.imax = (float) Nego_RDO.b.MaxCurrent / 100.0;
 2750              		.loc 1 194 9 view .LVU654
 194:Src/main.c    ****           s.imax = (float) Nego_RDO.b.MaxCurrent / 100.0;
 2751              		.loc 1 194 13 is_stmt 0 view .LVU655
 2752 0220 06A8     		add	r0, sp, #24
 2753 0222 FFF7FEFF 		bl	stusb_read_rdo
 2754              	.LVL221:
 194:Src/main.c    ****           s.imax = (float) Nego_RDO.b.MaxCurrent / 100.0;
 2755              		.loc 1 194 12 discriminator 1 view .LVU656
 2756 0226 0028     		cmp	r0, #0
 2757 0228 12D1     		bne	.L112
 195:Src/main.c    ****           s.pdo = Nego_RDO.b.Object_Pos;
 2758              		.loc 1 195 11 is_stmt 1 view .LVU657
 195:Src/main.c    ****           s.pdo = Nego_RDO.b.Object_Pos;
 2759              		.loc 1 195 38 is_stmt 0 view .LVU658
 2760 022a 06AB     		add	r3, sp, #24
 2761 022c 1888     		ldrh	r0, [r3]
 2762 022e 8005     		lsls	r0, r0, #22
 2763 0230 800D     		lsrs	r0, r0, #22
 195:Src/main.c    ****           s.pdo = Nego_RDO.b.Object_Pos;
 2764              		.loc 1 195 20 view .LVU659
 2765 0232 FFF7FEFF 		bl	__aeabi_ui2f
 2766              	.LVL222:
 195:Src/main.c    ****           s.pdo = Nego_RDO.b.Object_Pos;
 2767              		.loc 1 195 50 view .LVU660
 2768 0236 2549     		ldr	r1, .L143+36
 2769 0238 FFF7FEFF 		bl	__aeabi_fdiv
 2770              	.LVL223:
 195:Src/main.c    ****           s.pdo = Nego_RDO.b.Object_Pos;
 2771              		.loc 1 195 18 view .LVU661
 2772 023c 244A     		ldr	r2, .L143+40
 2773 023e 5061     		str	r0, [r2, #20]
 196:Src/main.c    ****         } else {
 2774              		.loc 1 196 11 is_stmt 1 view .LVU662
 196:Src/main.c    ****         } else {
 2775              		.loc 1 196 29 is_stmt 0 view .LVU663
 2776 0240 1B23     		movs	r3, #27
 2777 0242 6B44     		add	r3, r3, sp
 2778 0244 1B78     		ldrb	r3, [r3]
 2779 0246 5B06     		lsls	r3, r3, #25
 2780 0248 5B0F     		lsrs	r3, r3, #29
 196:Src/main.c    ****         } else {
 2781              		.loc 1 196 17 view .LVU664
 2782 024a 2521     		movs	r1, #37
 2783 024c 5354     		strb	r3, [r2, r1]
 2784 024e 59E7     		b	.L111
 2785              	.L112:
 198:Src/main.c    ****         }
 2786              		.loc 1 198 11 is_stmt 1 view .LVU665
 198:Src/main.c    ****         }
 2787              		.loc 1 198 17 is_stmt 0 view .LVU666
 2788 0250 1F4B     		ldr	r3, .L143+40
 2789 0252 2522     		movs	r2, #37
 2790 0254 0021     		movs	r1, #0
 2791 0256 9954     		strb	r1, [r3, r2]
 2792 0258 54E7     		b	.L111
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 94


 2793              	.L130:
 203:Src/main.c    ****       sprintf((char * restrict) line2, "%1d.%1d A %2d W", (uint16_t)s.imax,(uint16_t)((s.imax-(uint
 2794              		.loc 1 203 7 discriminator 2 view .LVU667
 2795 025a 2A4A     		ldr	r2, .L143+92
 2796 025c 5CE7     		b	.L114
 2797              	.L113:
 206:Src/main.c    ****       sprintf((char * restrict) line2, "Iron Disabled");
 2798              		.loc 1 206 7 is_stmt 1 view .LVU668
 2799 025e 0AAA     		add	r2, sp, #40
 2800 0260 294B     		ldr	r3, .L143+96
 2801 0262 31CB     		ldmia	r3!, {r0, r4, r5}
 2802 0264 31C2     		stmia	r2!, {r0, r4, r5}
 207:Src/main.c    ****     }
 2803              		.loc 1 207 7 view .LVU669
 2804 0266 10AA     		add	r2, sp, #64
 2805 0268 284B     		ldr	r3, .L143+100
 2806 026a 31CB     		ldmia	r3!, {r0, r4, r5}
 2807 026c 31C2     		stmia	r2!, {r0, r4, r5}
 2808 026e 1B88     		ldrh	r3, [r3]
 2809 0270 1380     		strh	r3, [r2]
 2810 0272 83E7     		b	.L115
 2811              	.L141:
 2812              	.LBE27:
 2813              	.LBB28:
 232:Src/main.c    ****       s.writeFlash = 1;
 2814              		.loc 1 232 7 view .LVU670
 232:Src/main.c    ****       s.writeFlash = 1;
 2815              		.loc 1 232 8 is_stmt 0 view .LVU671
 2816 0274 1C4C     		ldr	r4, .L143+64
 2817 0276 2068     		ldr	r0, [r4]
 232:Src/main.c    ****       s.writeFlash = 1;
 2818              		.loc 1 232 16 view .LVU672
 2819 0278 2549     		ldr	r1, .L143+104
 2820 027a FFF7FEFF 		bl	__aeabi_fsub
 2821              	.LVL224:
 2822 027e 2060     		str	r0, [r4]
 233:Src/main.c    ****       HAL_Delay(40);
 2823              		.loc 1 233 7 is_stmt 1 view .LVU673
 233:Src/main.c    ****       HAL_Delay(40);
 2824              		.loc 1 233 20 is_stmt 0 view .LVU674
 2825 0280 134B     		ldr	r3, .L143+40
 2826 0282 0122     		movs	r2, #1
 2827 0284 1A77     		strb	r2, [r3, #28]
 234:Src/main.c    ****     }
 2828              		.loc 1 234 7 is_stmt 1 view .LVU675
 2829 0286 2820     		movs	r0, #40
 2830 0288 FFF7FEFF 		bl	HAL_Delay
 2831              	.LVL225:
 2832 028c 8EE1     		b	.L117
 2833              	.L142:
 238:Src/main.c    ****       s.writeFlash = 1;
 2834              		.loc 1 238 7 view .LVU676
 238:Src/main.c    ****       s.writeFlash = 1;
 2835              		.loc 1 238 8 is_stmt 0 view .LVU677
 2836 028e 164C     		ldr	r4, .L143+64
 2837 0290 2068     		ldr	r0, [r4]
 238:Src/main.c    ****       s.writeFlash = 1;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 95


 2838              		.loc 1 238 16 view .LVU678
 2839 0292 1F49     		ldr	r1, .L143+104
 2840 0294 FFF7FEFF 		bl	__aeabi_fadd
 2841              	.LVL226:
 2842 0298 2060     		str	r0, [r4]
 239:Src/main.c    ****       HAL_Delay(40);
 2843              		.loc 1 239 7 is_stmt 1 view .LVU679
 239:Src/main.c    ****       HAL_Delay(40);
 2844              		.loc 1 239 20 is_stmt 0 view .LVU680
 2845 029a 0D4B     		ldr	r3, .L143+40
 2846 029c 0122     		movs	r2, #1
 2847 029e 1A77     		strb	r2, [r3, #28]
 240:Src/main.c    ****     }
 2848              		.loc 1 240 7 is_stmt 1 view .LVU681
 2849 02a0 2820     		movs	r0, #40
 2850 02a2 FFF7FEFF 		bl	HAL_Delay
 2851              	.LVL227:
 2852 02a6 86E1     		b	.L118
 2853              	.L144:
 2854              		.align	2
 2855              	.L143:
 2856 02a8 88130000 		.word	5000
 2857 02ac DC050000 		.word	1500
 2858 02b0 983A0000 		.word	15000
 2859 02b4 204E0000 		.word	20000
 2860 02b8 00000000 		.word	htim1
 2861 02bc 00000000 		.word	ADC_raw
 2862 02c0 00000000 		.word	hadc
 2863 02c4 00000000 		.word	otter_string
 2864 02c8 00000000 		.word	by_string
 2865 02cc 0000C842 		.word	1120403456
 2866 02d0 00000000 		.word	s
 2867 02d4 00000000 		.word	.LC28
 2868 02d8 20000000 		.word	.LC43
 2869 02dc 00002041 		.word	1092616192
 2870 02e0 2C000000 		.word	.LC45
 2871 02e4 00E40008 		.word	134276096
 2872 02e8 00000000 		.word	r
 2873 02ec 00005C43 		.word	1130102784
 2874 02f0 00000000 		.word	dfu_string
 2875 02f4 F03F0020 		.word	536887280
 2876 02f8 EFBEADDE 		.word	-559038737
 2877 02fc 28230000 		.word	9000
 2878 0300 E02E0000 		.word	12000
 2879 0304 08000000 		.word	.LC30
 2880 0308 3C000000 		.word	.LC47
 2881 030c 48000000 		.word	.LC49
 2882 0310 0000A040 		.word	1084227584
 2883              	.L131:
 243:Src/main.c    **** 
 2884              		.loc 1 243 16 is_stmt 0 discriminator 1 view .LVU682
 2885 0314 BF4C     		ldr	r4, .L145
 2886              	.L119:
 243:Src/main.c    **** 
 2887              		.loc 1 243 14 discriminator 8 view .LVU683
 2888 0316 C04B     		ldr	r3, .L145+4
 2889 0318 1C60     		str	r4, [r3]
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 96


 245:Src/main.c    ****       HAL_FLASH_Unlock();
 2890              		.loc 1 245 5 is_stmt 1 view .LVU684
 245:Src/main.c    ****       HAL_FLASH_Unlock();
 2891              		.loc 1 245 9 is_stmt 0 view .LVU685
 2892 031a C04B     		ldr	r3, .L145+8
 2893 031c 1B7F     		ldrb	r3, [r3, #28]
 245:Src/main.c    ****       HAL_FLASH_Unlock();
 2894              		.loc 1 245 7 view .LVU686
 2895 031e 012B     		cmp	r3, #1
 2896 0320 00D1     		bne	.LCB2345
 2897 0322 DDE0     		b	.L139	@long jump
 2898              	.LCB2345:
 2899              	.L121:
 269:Src/main.c    ****     unsigned char str2[14] = "          ";
 2900              		.loc 1 269 5 is_stmt 1 view .LVU687
 269:Src/main.c    ****     unsigned char str2[14] = "          ";
 2901              		.loc 1 269 19 is_stmt 0 view .LVU688
 2902 0324 02AB     		add	r3, sp, #8
 2903 0326 9846     		mov	r8, r3
 2904 0328 BD4C     		ldr	r4, .L145+12
 2905 032a 2500     		movs	r5, r4
 2906 032c 06CD     		ldmia	r5!, {r1, r2}
 2907 032e 06C3     		stmia	r3!, {r1, r2}
 2908 0330 2A88     		ldrh	r2, [r5]
 2909 0332 1A80     		strh	r2, [r3]
 2910 0334 AA78     		ldrb	r2, [r5, #2]
 2911 0336 9A70     		strb	r2, [r3, #2]
 2912 0338 0322     		movs	r2, #3
 2913 033a 0021     		movs	r1, #0
 2914 033c 1320     		movs	r0, #19
 2915 033e 6844     		add	r0, r0, sp
 2916 0340 FFF7FEFF 		bl	memset
 2917              	.LVL228:
 270:Src/main.c    ****     unsigned char str3[14] = "          ";
 2918              		.loc 1 270 5 is_stmt 1 view .LVU689
 270:Src/main.c    ****     unsigned char str3[14] = "          ";
 2919              		.loc 1 270 19 is_stmt 0 view .LVU690
 2920 0344 06AF     		add	r7, sp, #24
 2921 0346 3B00     		movs	r3, r7
 2922 0348 2200     		movs	r2, r4
 2923 034a 03CA     		ldmia	r2!, {r0, r1}
 2924 034c 03C3     		stmia	r3!, {r0, r1}
 2925 034e 2A88     		ldrh	r2, [r5]
 2926 0350 1A80     		strh	r2, [r3]
 2927 0352 AA78     		ldrb	r2, [r5, #2]
 2928 0354 9A70     		strb	r2, [r3, #2]
 2929 0356 0322     		movs	r2, #3
 2930 0358 0021     		movs	r1, #0
 2931 035a 2320     		movs	r0, #35
 2932 035c 6844     		add	r0, r0, sp
 2933 035e FFF7FEFF 		bl	memset
 2934              	.LVL229:
 271:Src/main.c    ****     unsigned char str4[14] = "          ";
 2935              		.loc 1 271 5 is_stmt 1 view .LVU691
 271:Src/main.c    ****     unsigned char str4[14] = "          ";
 2936              		.loc 1 271 19 is_stmt 0 view .LVU692
 2937 0362 0AAE     		add	r6, sp, #40
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 97


 2938 0364 3300     		movs	r3, r6
 2939 0366 2200     		movs	r2, r4
 2940 0368 03CA     		ldmia	r2!, {r0, r1}
 2941 036a 03C3     		stmia	r3!, {r0, r1}
 2942 036c 2A88     		ldrh	r2, [r5]
 2943 036e 1A80     		strh	r2, [r3]
 2944 0370 AA78     		ldrb	r2, [r5, #2]
 2945 0372 9A70     		strb	r2, [r3, #2]
 2946 0374 0322     		movs	r2, #3
 2947 0376 0021     		movs	r1, #0
 2948 0378 3320     		movs	r0, #51
 2949 037a 6844     		add	r0, r0, sp
 2950 037c FFF7FEFF 		bl	memset
 2951              	.LVL230:
 272:Src/main.c    ****     sprintf((char * restrict) str1, "%d C   ", (uint16_t)r.target);
 2952              		.loc 1 272 5 is_stmt 1 view .LVU693
 272:Src/main.c    ****     sprintf((char * restrict) str1, "%d C   ", (uint16_t)r.target);
 2953              		.loc 1 272 19 is_stmt 0 view .LVU694
 2954 0380 10AB     		add	r3, sp, #64
 2955 0382 9946     		mov	r9, r3
 2956 0384 06CC     		ldmia	r4!, {r1, r2}
 2957 0386 06C3     		stmia	r3!, {r1, r2}
 2958 0388 2A88     		ldrh	r2, [r5]
 2959 038a 1A80     		strh	r2, [r3]
 2960 038c AA78     		ldrb	r2, [r5, #2]
 2961 038e 9A70     		strb	r2, [r3, #2]
 2962 0390 0322     		movs	r2, #3
 2963 0392 0021     		movs	r1, #0
 2964 0394 4B20     		movs	r0, #75
 2965 0396 6844     		add	r0, r0, sp
 2966 0398 FFF7FEFF 		bl	memset
 2967              	.LVL231:
 273:Src/main.c    ****     sprintf((char * restrict) str2, "%d.%d C", (uint16_t)s.ttipavg,(uint16_t)((s.ttipavg-(uint16_t)
 2968              		.loc 1 273 5 is_stmt 1 view .LVU695
 273:Src/main.c    ****     sprintf((char * restrict) str2, "%d.%d C", (uint16_t)s.ttipavg,(uint16_t)((s.ttipavg-(uint16_t)
 2969              		.loc 1 273 59 is_stmt 0 view .LVU696
 2970 039c 9E4B     		ldr	r3, .L145+4
 2971 039e 1868     		ldr	r0, [r3]
 273:Src/main.c    ****     sprintf((char * restrict) str2, "%d.%d C", (uint16_t)s.ttipavg,(uint16_t)((s.ttipavg-(uint16_t)
 2972              		.loc 1 273 48 view .LVU697
 2973 03a0 FFF7FEFF 		bl	__aeabi_f2uiz
 2974              	.LVL232:
 2975 03a4 82B2     		uxth	r2, r0
 273:Src/main.c    ****     sprintf((char * restrict) str2, "%d.%d C", (uint16_t)s.ttipavg,(uint16_t)((s.ttipavg-(uint16_t)
 2976              		.loc 1 273 5 view .LVU698
 2977 03a6 9F49     		ldr	r1, .L145+16
 2978 03a8 4046     		mov	r0, r8
 2979 03aa FFF7FEFF 		bl	sprintf
 2980              	.LVL233:
 274:Src/main.c    ****     sprintf((char * restrict) str3, "%d.%d V", (uint16_t)s.uin,(uint16_t)((s.uin-(uint16_t)s.uin)*1
 2981              		.loc 1 274 5 is_stmt 1 view .LVU699
 274:Src/main.c    ****     sprintf((char * restrict) str3, "%d.%d V", (uint16_t)s.uin,(uint16_t)((s.uin-(uint16_t)s.uin)*1
 2982              		.loc 1 274 59 is_stmt 0 view .LVU700
 2983 03ae 9B4C     		ldr	r4, .L145+8
 2984 03b0 6368     		ldr	r3, [r4, #4]
 2985 03b2 9A46     		mov	r10, r3
 274:Src/main.c    ****     sprintf((char * restrict) str3, "%d.%d V", (uint16_t)s.uin,(uint16_t)((s.uin-(uint16_t)s.uin)*1
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 98


 2986              		.loc 1 274 48 view .LVU701
 2987 03b4 181C     		adds	r0, r3, #0
 2988 03b6 FFF7FEFF 		bl	__aeabi_f2uiz
 2989              	.LVL234:
 2990 03ba 85B2     		uxth	r5, r0
 274:Src/main.c    ****     sprintf((char * restrict) str3, "%d.%d V", (uint16_t)s.uin,(uint16_t)((s.uin-(uint16_t)s.uin)*1
 2991              		.loc 1 274 89 view .LVU702
 2992 03bc 2800     		movs	r0, r5
 2993 03be FFF7FEFF 		bl	__aeabi_i2f
 2994              	.LVL235:
 2995 03c2 011C     		adds	r1, r0, #0
 2996 03c4 5046     		mov	r0, r10
 2997 03c6 FFF7FEFF 		bl	__aeabi_fsub
 2998              	.LVL236:
 274:Src/main.c    ****     sprintf((char * restrict) str3, "%d.%d V", (uint16_t)s.uin,(uint16_t)((s.uin-(uint16_t)s.uin)*1
 2999              		.loc 1 274 110 view .LVU703
 3000 03ca 9749     		ldr	r1, .L145+20
 3001 03cc FFF7FEFF 		bl	__aeabi_fmul
 3002              	.LVL237:
 274:Src/main.c    ****     sprintf((char * restrict) str3, "%d.%d V", (uint16_t)s.uin,(uint16_t)((s.uin-(uint16_t)s.uin)*1
 3003              		.loc 1 274 68 view .LVU704
 3004 03d0 FFF7FEFF 		bl	__aeabi_f2uiz
 3005              	.LVL238:
 3006 03d4 83B2     		uxth	r3, r0
 274:Src/main.c    ****     sprintf((char * restrict) str3, "%d.%d V", (uint16_t)s.uin,(uint16_t)((s.uin-(uint16_t)s.uin)*1
 3007              		.loc 1 274 5 view .LVU705
 3008 03d6 9549     		ldr	r1, .L145+24
 3009 03d8 2A00     		movs	r2, r5
 3010 03da 3800     		movs	r0, r7
 3011 03dc FFF7FEFF 		bl	sprintf
 3012              	.LVL239:
 275:Src/main.c    ****     sprintf((char * restrict) str4, "%d.%d A", (uint16_t)s.iin,(uint16_t)((s.iin-(uint16_t)s.iin)*1
 3013              		.loc 1 275 5 is_stmt 1 view .LVU706
 275:Src/main.c    ****     sprintf((char * restrict) str4, "%d.%d A", (uint16_t)s.iin,(uint16_t)((s.iin-(uint16_t)s.iin)*1
 3014              		.loc 1 275 59 is_stmt 0 view .LVU707
 3015 03e0 A368     		ldr	r3, [r4, #8]
 3016 03e2 9A46     		mov	r10, r3
 275:Src/main.c    ****     sprintf((char * restrict) str4, "%d.%d A", (uint16_t)s.iin,(uint16_t)((s.iin-(uint16_t)s.iin)*1
 3017              		.loc 1 275 48 view .LVU708
 3018 03e4 181C     		adds	r0, r3, #0
 3019 03e6 FFF7FEFF 		bl	__aeabi_f2uiz
 3020              	.LVL240:
 3021 03ea 85B2     		uxth	r5, r0
 275:Src/main.c    ****     sprintf((char * restrict) str4, "%d.%d A", (uint16_t)s.iin,(uint16_t)((s.iin-(uint16_t)s.iin)*1
 3022              		.loc 1 275 81 view .LVU709
 3023 03ec 2800     		movs	r0, r5
 3024 03ee FFF7FEFF 		bl	__aeabi_i2f
 3025              	.LVL241:
 3026 03f2 011C     		adds	r1, r0, #0
 3027 03f4 5046     		mov	r0, r10
 3028 03f6 FFF7FEFF 		bl	__aeabi_fsub
 3029              	.LVL242:
 275:Src/main.c    ****     sprintf((char * restrict) str4, "%d.%d A", (uint16_t)s.iin,(uint16_t)((s.iin-(uint16_t)s.iin)*1
 3030              		.loc 1 275 98 view .LVU710
 3031 03fa 8B49     		ldr	r1, .L145+20
 3032 03fc FFF7FEFF 		bl	__aeabi_fmul
 3033              	.LVL243:
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 99


 275:Src/main.c    ****     sprintf((char * restrict) str4, "%d.%d A", (uint16_t)s.iin,(uint16_t)((s.iin-(uint16_t)s.iin)*1
 3034              		.loc 1 275 64 view .LVU711
 3035 0400 FFF7FEFF 		bl	__aeabi_f2uiz
 3036              	.LVL244:
 3037 0404 83B2     		uxth	r3, r0
 275:Src/main.c    ****     sprintf((char * restrict) str4, "%d.%d A", (uint16_t)s.iin,(uint16_t)((s.iin-(uint16_t)s.iin)*1
 3038              		.loc 1 275 5 view .LVU712
 3039 0406 8A49     		ldr	r1, .L145+28
 3040 0408 2A00     		movs	r2, r5
 3041 040a 3000     		movs	r0, r6
 3042 040c FFF7FEFF 		bl	sprintf
 3043              	.LVL245:
 276:Src/main.c    **** 
 3044              		.loc 1 276 5 is_stmt 1 view .LVU713
 276:Src/main.c    **** 
 3045              		.loc 1 276 59 is_stmt 0 view .LVU714
 3046 0410 E368     		ldr	r3, [r4, #12]
 3047 0412 9A46     		mov	r10, r3
 276:Src/main.c    **** 
 3048              		.loc 1 276 48 view .LVU715
 3049 0414 181C     		adds	r0, r3, #0
 3050 0416 FFF7FEFF 		bl	__aeabi_f2uiz
 3051              	.LVL246:
 3052 041a 85B2     		uxth	r5, r0
 276:Src/main.c    **** 
 3053              		.loc 1 276 81 view .LVU716
 3054 041c 2800     		movs	r0, r5
 3055 041e FFF7FEFF 		bl	__aeabi_i2f
 3056              	.LVL247:
 3057 0422 011C     		adds	r1, r0, #0
 3058 0424 5046     		mov	r0, r10
 3059 0426 FFF7FEFF 		bl	__aeabi_fsub
 3060              	.LVL248:
 276:Src/main.c    **** 
 3061              		.loc 1 276 98 view .LVU717
 3062 042a 7F49     		ldr	r1, .L145+20
 3063 042c FFF7FEFF 		bl	__aeabi_fmul
 3064              	.LVL249:
 276:Src/main.c    **** 
 3065              		.loc 1 276 64 view .LVU718
 3066 0430 FFF7FEFF 		bl	__aeabi_f2uiz
 3067              	.LVL250:
 3068 0434 83B2     		uxth	r3, r0
 276:Src/main.c    **** 
 3069              		.loc 1 276 5 view .LVU719
 3070 0436 7F49     		ldr	r1, .L145+32
 3071 0438 2A00     		movs	r2, r5
 3072 043a 4846     		mov	r0, r9
 3073 043c FFF7FEFF 		bl	sprintf
 3074              	.LVL251:
 278:Src/main.c    ****     draw_string(str1, 10, 1 ,1);
 3075              		.loc 1 278 5 is_stmt 1 view .LVU720
 3076 0440 FFF7FEFF 		bl	clear_screen
 3077              	.LVL252:
 279:Src/main.c    ****     draw_string(str2, 10, 9 ,1);
 3078              		.loc 1 279 5 view .LVU721
 3079 0444 0123     		movs	r3, #1
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 100


 3080 0446 0122     		movs	r2, #1
 3081 0448 0A21     		movs	r1, #10
 3082 044a 4046     		mov	r0, r8
 3083 044c FFF7FEFF 		bl	draw_string
 3084              	.LVL253:
 280:Src/main.c    ****     draw_string(str3, 60, 1 ,1);
 3085              		.loc 1 280 5 view .LVU722
 3086 0450 0123     		movs	r3, #1
 3087 0452 0922     		movs	r2, #9
 3088 0454 0A21     		movs	r1, #10
 3089 0456 3800     		movs	r0, r7
 3090 0458 FFF7FEFF 		bl	draw_string
 3091              	.LVL254:
 281:Src/main.c    **** #ifdef DISPLAYCURRENT
 3092              		.loc 1 281 5 view .LVU723
 3093 045c 0123     		movs	r3, #1
 3094 045e 0122     		movs	r2, #1
 3095 0460 3C21     		movs	r1, #60
 3096 0462 3000     		movs	r0, r6
 3097 0464 FFF7FEFF 		bl	draw_string
 3098              	.LVL255:
 289:Src/main.c    **** 
 3099              		.loc 1 289 5 view .LVU724
 289:Src/main.c    **** 
 3100              		.loc 1 289 18 is_stmt 0 view .LVU725
 3101 0468 2069     		ldr	r0, [r4, #16]
 289:Src/main.c    **** 
 3102              		.loc 1 289 26 view .LVU726
 3103 046a 7349     		ldr	r1, .L145+36
 3104 046c FFF7FEFF 		bl	__aeabi_fmul
 3105              	.LVL256:
 3106 0470 FFF7FEFF 		bl	__aeabi_f2d
 3107              	.LVL257:
 3108 0474 0600     		movs	r6, r0
 3109 0476 0F00     		movs	r7, r1
 289:Src/main.c    **** 
 3110              		.loc 1 289 49 view .LVU727
 3111 0478 E068     		ldr	r0, [r4, #12]
 3112 047a FFF7FEFF 		bl	__aeabi_f2d
 3113              	.LVL258:
 289:Src/main.c    **** 
 3114              		.loc 1 289 53 view .LVU728
 3115 047e 0022     		movs	r2, #0
 3116 0480 6E4B     		ldr	r3, .L145+40
 3117 0482 FFF7FEFF 		bl	__aeabi_dmul
 3118              	.LVL259:
 3119 0486 0200     		movs	r2, r0
 3120 0488 0B00     		movs	r3, r1
 289:Src/main.c    **** 
 3121              		.loc 1 289 45 view .LVU729
 3122 048a 3000     		movs	r0, r6
 3123 048c 3900     		movs	r1, r7
 3124 048e FFF7FEFF 		bl	__aeabi_dadd
 3125              	.LVL260:
 3126 0492 FFF7FEFF 		bl	__aeabi_d2f
 3127              	.LVL261:
 289:Src/main.c    **** 
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 101


 3128              		.loc 1 289 14 view .LVU730
 3129 0496 2061     		str	r0, [r4, #16]
 291:Src/main.c    ****       s.drawlineavg = (s.drawlineavg * DISP_AVG_FILTER) + (CLAMP(r.error*3.0f,0,30)*(1.0-DISP_AVG_F
 3130              		.loc 1 291 5 is_stmt 1 view .LVU731
 291:Src/main.c    ****       s.drawlineavg = (s.drawlineavg * DISP_AVG_FILTER) + (CLAMP(r.error*3.0f,0,30)*(1.0-DISP_AVG_F
 3131              		.loc 1 291 10 is_stmt 0 view .LVU732
 3132 0498 2423     		movs	r3, #36
 3133 049a E35C     		ldrb	r3, [r4, r3]
 291:Src/main.c    ****       s.drawlineavg = (s.drawlineavg * DISP_AVG_FILTER) + (CLAMP(r.error*3.0f,0,30)*(1.0-DISP_AVG_F
 3134              		.loc 1 291 8 view .LVU733
 3135 049c 002B     		cmp	r3, #0
 3136 049e 00D1     		bne	.LCB2520
 3137 04a0 A9E0     		b	.L123	@long jump
 3138              	.LCB2520:
 292:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 3139              		.loc 1 292 7 is_stmt 1 view .LVU734
 292:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 3140              		.loc 1 292 25 is_stmt 0 view .LVU735
 3141 04a2 5E4B     		ldr	r3, .L145+8
 3142 04a4 186A     		ldr	r0, [r3, #32]
 292:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 3143              		.loc 1 292 38 view .LVU736
 3144 04a6 6449     		ldr	r1, .L145+36
 3145 04a8 FFF7FEFF 		bl	__aeabi_fmul
 3146              	.LVL262:
 3147 04ac FFF7FEFF 		bl	__aeabi_f2d
 3148              	.LVL263:
 3149 04b0 0600     		movs	r6, r0
 3150 04b2 0F00     		movs	r7, r1
 292:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 3151              		.loc 1 292 60 view .LVU737
 3152 04b4 584B     		ldr	r3, .L145+4
 3153 04b6 5868     		ldr	r0, [r3, #4]
 3154 04b8 6149     		ldr	r1, .L145+44
 3155 04ba FFF7FEFF 		bl	__aeabi_fmul
 3156              	.LVL264:
 3157 04be 041C     		adds	r4, r0, #0
 3158 04c0 6049     		ldr	r1, .L145+48
 3159 04c2 FFF7FEFF 		bl	__aeabi_fcmpgt
 3160              	.LVL265:
 3161 04c6 0028     		cmp	r0, #0
 3162 04c8 39D1     		bne	.L132
 292:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 3163              		.loc 1 292 60 discriminator 2 view .LVU738
 3164 04ca 0021     		movs	r1, #0
 3165 04cc 201C     		adds	r0, r4, #0
 3166 04ce FFF7FEFF 		bl	__aeabi_fcmplt
 3167              	.LVL266:
 3168 04d2 0028     		cmp	r0, #0
 3169 04d4 00D0     		beq	.LCB2544
 3170 04d6 80E0     		b	.L133	@long jump
 3171              	.LCB2544:
 292:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 3172              		.loc 1 292 60 discriminator 5 view .LVU739
 3173 04d8 201C     		adds	r0, r4, #0
 3174 04da FFF7FEFF 		bl	__aeabi_f2d
 3175              	.LVL267:
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 102


 3176 04de 30E0     		b	.L124
 3177              	.L139:
 246:Src/main.c    ****       FLASH->CR |= FLASH_CR_PER;
 3178              		.loc 1 246 7 is_stmt 1 view .LVU740
 3179 04e0 FFF7FEFF 		bl	HAL_FLASH_Unlock
 3180              	.LVL268:
 247:Src/main.c    ****       FLASH->AR = 0x0800e400;
 3181              		.loc 1 247 7 view .LVU741
 247:Src/main.c    ****       FLASH->AR = 0x0800e400;
 3182              		.loc 1 247 12 is_stmt 0 view .LVU742
 3183 04e4 584B     		ldr	r3, .L145+52
 3184 04e6 1A69     		ldr	r2, [r3, #16]
 247:Src/main.c    ****       FLASH->AR = 0x0800e400;
 3185              		.loc 1 247 17 view .LVU743
 3186 04e8 0221     		movs	r1, #2
 3187 04ea 0A43     		orrs	r2, r1
 3188 04ec 1A61     		str	r2, [r3, #16]
 248:Src/main.c    ****       FLASH->CR |= FLASH_CR_STRT;
 3189              		.loc 1 248 7 is_stmt 1 view .LVU744
 248:Src/main.c    ****       FLASH->CR |= FLASH_CR_STRT;
 3190              		.loc 1 248 17 is_stmt 0 view .LVU745
 3191 04ee 574A     		ldr	r2, .L145+56
 3192 04f0 5A61     		str	r2, [r3, #20]
 249:Src/main.c    ****       while ((FLASH->SR & FLASH_SR_BSY) != 0){}
 3193              		.loc 1 249 7 is_stmt 1 view .LVU746
 249:Src/main.c    ****       while ((FLASH->SR & FLASH_SR_BSY) != 0){}
 3194              		.loc 1 249 12 is_stmt 0 view .LVU747
 3195 04f2 1A69     		ldr	r2, [r3, #16]
 249:Src/main.c    ****       while ((FLASH->SR & FLASH_SR_BSY) != 0){}
 3196              		.loc 1 249 17 view .LVU748
 3197 04f4 3E31     		adds	r1, r1, #62
 3198 04f6 0A43     		orrs	r2, r1
 3199 04f8 1A61     		str	r2, [r3, #16]
 250:Src/main.c    ****       if ((FLASH->SR & FLASH_SR_EOP) != 0){
 3200              		.loc 1 250 7 is_stmt 1 view .LVU749
 3201              	.L122:
 250:Src/main.c    ****       if ((FLASH->SR & FLASH_SR_EOP) != 0){
 3202              		.loc 1 250 47 discriminator 1 view .LVU750
 250:Src/main.c    ****       if ((FLASH->SR & FLASH_SR_EOP) != 0){
 3203              		.loc 1 250 41 discriminator 1 view .LVU751
 250:Src/main.c    ****       if ((FLASH->SR & FLASH_SR_EOP) != 0){
 3204              		.loc 1 250 20 is_stmt 0 discriminator 1 view .LVU752
 3205 04fa 534B     		ldr	r3, .L145+52
 3206 04fc DB68     		ldr	r3, [r3, #12]
 250:Src/main.c    ****       if ((FLASH->SR & FLASH_SR_EOP) != 0){
 3207              		.loc 1 250 41 discriminator 1 view .LVU753
 3208 04fe DB07     		lsls	r3, r3, #31
 3209 0500 FBD4     		bmi	.L122
 251:Src/main.c    ****         FLASH->SR |= FLASH_SR_EOP;
 3210              		.loc 1 251 7 is_stmt 1 view .LVU754
 251:Src/main.c    ****         FLASH->SR |= FLASH_SR_EOP;
 3211              		.loc 1 251 17 is_stmt 0 view .LVU755
 3212 0502 514B     		ldr	r3, .L145+52
 3213 0504 DB68     		ldr	r3, [r3, #12]
 251:Src/main.c    ****         FLASH->SR |= FLASH_SR_EOP;
 3214              		.loc 1 251 10 view .LVU756
 3215 0506 9B06     		lsls	r3, r3, #26
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 103


 3216 0508 00D4     		bmi	.LCB2584
 3217 050a 0BE7     		b	.L121	@long jump
 3218              	.LCB2584:
 252:Src/main.c    ****         FLASH->CR &= ~FLASH_CR_PER;
 3219              		.loc 1 252 9 is_stmt 1 view .LVU757
 252:Src/main.c    ****         FLASH->CR &= ~FLASH_CR_PER;
 3220              		.loc 1 252 14 is_stmt 0 view .LVU758
 3221 050c 4E4B     		ldr	r3, .L145+52
 3222 050e DA68     		ldr	r2, [r3, #12]
 252:Src/main.c    ****         FLASH->CR &= ~FLASH_CR_PER;
 3223              		.loc 1 252 19 view .LVU759
 3224 0510 2021     		movs	r1, #32
 3225 0512 0A43     		orrs	r2, r1
 3226 0514 DA60     		str	r2, [r3, #12]
 253:Src/main.c    ****         HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, 0x0800e400, (uint16_t)r.target);
 3227              		.loc 1 253 9 is_stmt 1 view .LVU760
 253:Src/main.c    ****         HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, 0x0800e400, (uint16_t)r.target);
 3228              		.loc 1 253 14 is_stmt 0 view .LVU761
 3229 0516 1A69     		ldr	r2, [r3, #16]
 253:Src/main.c    ****         HAL_FLASH_Program(FLASH_TYPEPROGRAM_HALFWORD, 0x0800e400, (uint16_t)r.target);
 3230              		.loc 1 253 19 view .LVU762
 3231 0518 1E39     		subs	r1, r1, #30
 3232 051a 8A43     		bics	r2, r1
 3233 051c 1A61     		str	r2, [r3, #16]
 254:Src/main.c    ****         HAL_FLASH_Lock();
 3234              		.loc 1 254 9 is_stmt 1 view .LVU763
 254:Src/main.c    ****         HAL_FLASH_Lock();
 3235              		.loc 1 254 78 is_stmt 0 view .LVU764
 3236 051e 3E4B     		ldr	r3, .L145+4
 3237 0520 1868     		ldr	r0, [r3]
 254:Src/main.c    ****         HAL_FLASH_Lock();
 3238              		.loc 1 254 67 view .LVU765
 3239 0522 FFF7FEFF 		bl	__aeabi_f2uiz
 3240              	.LVL269:
 3241 0526 82B2     		uxth	r2, r0
 254:Src/main.c    ****         HAL_FLASH_Lock();
 3242              		.loc 1 254 9 view .LVU766
 3243 0528 0023     		movs	r3, #0
 3244 052a 4849     		ldr	r1, .L145+56
 3245 052c 0120     		movs	r0, #1
 3246 052e FFF7FEFF 		bl	HAL_FLASH_Program
 3247              	.LVL270:
 255:Src/main.c    ****         s.writeFlash = 0;
 3248              		.loc 1 255 9 is_stmt 1 view .LVU767
 3249 0532 FFF7FEFF 		bl	HAL_FLASH_Lock
 3250              	.LVL271:
 256:Src/main.c    ****       }
 3251              		.loc 1 256 9 view .LVU768
 256:Src/main.c    ****       }
 3252              		.loc 1 256 22 is_stmt 0 view .LVU769
 3253 0536 394B     		ldr	r3, .L145+8
 3254 0538 0022     		movs	r2, #0
 3255 053a 1A77     		strb	r2, [r3, #28]
 3256 053c F2E6     		b	.L121
 3257              	.L132:
 292:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 3258              		.loc 1 292 60 discriminator 1 view .LVU770
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 104


 3259 053e 0020     		movs	r0, #0
 3260 0540 4349     		ldr	r1, .L145+60
 3261              	.L124:
 292:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 3262              		.loc 1 292 84 discriminator 8 view .LVU771
 3263 0542 0022     		movs	r2, #0
 3264 0544 3D4B     		ldr	r3, .L145+40
 3265 0546 FFF7FEFF 		bl	__aeabi_dmul
 3266              	.LVL272:
 3267 054a 0200     		movs	r2, r0
 3268 054c 0B00     		movs	r3, r1
 292:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 3269              		.loc 1 292 57 discriminator 8 view .LVU772
 3270 054e 3000     		movs	r0, r6
 3271 0550 3900     		movs	r1, r7
 3272 0552 FFF7FEFF 		bl	__aeabi_dadd
 3273              	.LVL273:
 3274 0556 FFF7FEFF 		bl	__aeabi_d2f
 3275              	.LVL274:
 292:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 3276              		.loc 1 292 21 discriminator 8 view .LVU773
 3277 055a 304B     		ldr	r3, .L145+8
 3278 055c 1862     		str	r0, [r3, #32]
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3279              		.loc 1 293 7 is_stmt 1 view .LVU774
 3280              	.LBB29:
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3281              		.loc 1 293 11 view .LVU775
 3282              	.LVL275:
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3283              		.loc 1 293 20 is_stmt 0 view .LVU776
 3284 055e 0024     		movs	r4, #0
 3285              	.LVL276:
 3286              	.L125:
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3287              		.loc 1 293 29 is_stmt 1 discriminator 1 view .LVU777
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3288              		.loc 1 293 38 is_stmt 0 discriminator 1 view .LVU778
 3289 0560 2E4B     		ldr	r3, .L145+8
 3290 0562 186A     		ldr	r0, [r3, #32]
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3291              		.loc 1 293 32 discriminator 1 view .LVU779
 3292 0564 FFF7FEFF 		bl	__aeabi_f2iz
 3293              	.LVL277:
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3294              		.loc 1 293 29 discriminator 1 view .LVU780
 3295 0568 8442     		cmp	r4, r0
 3296 056a 39DD     		ble	.L140
 3297              	.LVL278:
 3298              	.L127:
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3299              		.loc 1 293 29 discriminator 1 view .LVU781
 3300              	.LBE29:
 300:Src/main.c    ****     HAL_IWDG_Refresh(&hiwdg);
 3301              		.loc 1 300 5 is_stmt 1 view .LVU782
 3302 056c FFF7FEFF 		bl	refresh
 3303              	.LVL279:
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 105


 301:Src/main.c    ****   }
 3304              		.loc 1 301 5 view .LVU783
 3305 0570 3848     		ldr	r0, .L145+64
 3306 0572 FFF7FEFF 		bl	HAL_IWDG_Refresh
 3307              	.LVL280:
 3308              	.LBE28:
 223:Src/main.c    ****   {
 3309              		.loc 1 223 9 view .LVU784
 3310              	.L129:
 223:Src/main.c    ****   {
 3311              		.loc 1 223 3 view .LVU785
 3312              	.LBB31:
 225:Src/main.c    **** 
 3313              		.loc 1 225 5 view .LVU786
 3314 0576 3220     		movs	r0, #50
 3315 0578 FFF7FEFF 		bl	HAL_Delay
 3316              	.LVL281:
 228:Src/main.c    ****     s.button[1] = HAL_GPIO_ReadPin(GPIOA,B2_Pin) | HAL_GPIO_ReadPin(GPIOC, B1_1_Pin);
 3317              		.loc 1 228 5 view .LVU787
 228:Src/main.c    ****     s.button[1] = HAL_GPIO_ReadPin(GPIOA,B2_Pin) | HAL_GPIO_ReadPin(GPIOC, B1_1_Pin);
 3318              		.loc 1 228 19 is_stmt 0 view .LVU788
 3319 057c 9024     		movs	r4, #144
 3320 057e E405     		lsls	r4, r4, #23
 3321 0580 0821     		movs	r1, #8
 3322 0582 2000     		movs	r0, r4
 3323 0584 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3324              	.LVL282:
 228:Src/main.c    ****     s.button[1] = HAL_GPIO_ReadPin(GPIOA,B2_Pin) | HAL_GPIO_ReadPin(GPIOC, B1_1_Pin);
 3325              		.loc 1 228 17 discriminator 1 view .LVU789
 3326 0588 244D     		ldr	r5, .L145+8
 3327 058a 6877     		strb	r0, [r5, #29]
 229:Src/main.c    **** 
 3328              		.loc 1 229 5 is_stmt 1 view .LVU790
 229:Src/main.c    **** 
 3329              		.loc 1 229 19 is_stmt 0 view .LVU791
 3330 058c 1021     		movs	r1, #16
 3331 058e 2000     		movs	r0, r4
 3332 0590 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3333              	.LVL283:
 3334 0594 0400     		movs	r4, r0
 229:Src/main.c    **** 
 3335              		.loc 1 229 52 discriminator 1 view .LVU792
 3336 0596 8021     		movs	r1, #128
 3337 0598 8901     		lsls	r1, r1, #6
 3338 059a 2F48     		ldr	r0, .L145+68
 3339 059c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3340              	.LVL284:
 229:Src/main.c    **** 
 3341              		.loc 1 229 17 discriminator 2 view .LVU793
 3342 05a0 0443     		orrs	r4, r0
 3343 05a2 AC77     		strb	r4, [r5, #30]
 231:Src/main.c    ****       r.target -= 5;
 3344              		.loc 1 231 5 is_stmt 1 view .LVU794
 231:Src/main.c    ****       r.target -= 5;
 3345              		.loc 1 231 16 is_stmt 0 view .LVU795
 3346 05a4 6B7F     		ldrb	r3, [r5, #29]
 231:Src/main.c    ****       r.target -= 5;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 106


 3347              		.loc 1 231 7 view .LVU796
 3348 05a6 012B     		cmp	r3, #1
 3349 05a8 00D1     		bne	.LCB2689
 3350 05aa 63E6     		b	.L141	@long jump
 3351              	.LCB2689:
 3352              	.L117:
 237:Src/main.c    ****       r.target += 5;
 3353              		.loc 1 237 5 is_stmt 1 view .LVU797
 237:Src/main.c    ****       r.target += 5;
 3354              		.loc 1 237 16 is_stmt 0 view .LVU798
 3355 05ac 1B4B     		ldr	r3, .L145+8
 3356 05ae 9B7F     		ldrb	r3, [r3, #30]
 237:Src/main.c    ****       r.target += 5;
 3357              		.loc 1 237 7 view .LVU799
 3358 05b0 012B     		cmp	r3, #1
 3359 05b2 00D1     		bne	.LCB2695
 3360 05b4 6BE6     		b	.L142	@long jump
 3361              	.LCB2695:
 3362              	.L118:
 243:Src/main.c    **** 
 3363              		.loc 1 243 5 is_stmt 1 view .LVU800
 243:Src/main.c    **** 
 3364              		.loc 1 243 16 is_stmt 0 view .LVU801
 3365 05b6 184B     		ldr	r3, .L145+4
 3366 05b8 1C68     		ldr	r4, [r3]
 3367 05ba 1649     		ldr	r1, .L145
 3368 05bc 201C     		adds	r0, r4, #0
 3369 05be FFF7FEFF 		bl	__aeabi_fcmpgt
 3370              	.LVL285:
 3371 05c2 0028     		cmp	r0, #0
 3372 05c4 00D0     		beq	.LCB2705
 3373 05c6 A5E6     		b	.L131	@long jump
 3374              	.LCB2705:
 243:Src/main.c    **** 
 3375              		.loc 1 243 16 discriminator 2 view .LVU802
 3376 05c8 2449     		ldr	r1, .L145+72
 3377 05ca 201C     		adds	r0, r4, #0
 3378 05cc FFF7FEFF 		bl	__aeabi_fcmplt
 3379              	.LVL286:
 3380 05d0 0028     		cmp	r0, #0
 3381 05d2 00D1     		bne	.LCB2711
 3382 05d4 9FE6     		b	.L119	@long jump
 3383              	.LCB2711:
 243:Src/main.c    **** 
 3384              		.loc 1 243 16 discriminator 4 view .LVU803
 3385 05d6 214C     		ldr	r4, .L145+72
 3386 05d8 9DE6     		b	.L119
 3387              	.L133:
 292:Src/main.c    ****       for(uint16_t i = 0; i <= (int)s.drawlineavg; i++){
 3388              		.loc 1 292 60 discriminator 4 view .LVU804
 3389 05da 0020     		movs	r0, #0
 3390 05dc 0021     		movs	r1, #0
 3391 05de B0E7     		b	.L124
 3392              	.LVL287:
 3393              	.L140:
 3394              	.LBB30:
 294:Src/main.c    ****       }
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 107


 3395              		.loc 1 294 9 is_stmt 1 view .LVU805
 294:Src/main.c    ****       }
 3396              		.loc 1 294 23 is_stmt 0 view .LVU806
 3397 05e0 2000     		movs	r0, r4
 3398 05e2 3C30     		adds	r0, r0, #60
 294:Src/main.c    ****       }
 3399              		.loc 1 294 9 view .LVU807
 3400 05e4 00B2     		sxth	r0, r0
 3401 05e6 0123     		movs	r3, #1
 3402 05e8 0822     		movs	r2, #8
 3403 05ea 0821     		movs	r1, #8
 3404 05ec FFF7FEFF 		bl	draw_v_line
 3405              	.LVL288:
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3406              		.loc 1 293 53 is_stmt 1 discriminator 3 view .LVU808
 3407 05f0 0134     		adds	r4, r4, #1
 3408              	.LVL289:
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3409              		.loc 1 293 53 is_stmt 0 discriminator 3 view .LVU809
 3410 05f2 A4B2     		uxth	r4, r4
 3411              	.LVL290:
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3412              		.loc 1 293 53 discriminator 3 view .LVU810
 3413 05f4 B4E7     		b	.L125
 3414              	.LVL291:
 3415              	.L123:
 293:Src/main.c    ****         draw_v_line(60+i, 8, 8, 1);
 3416              		.loc 1 293 53 discriminator 3 view .LVU811
 3417              	.LBE30:
 297:Src/main.c    ****     }
 3418              		.loc 1 297 7 is_stmt 1 view .LVU812
 297:Src/main.c    ****     }
 3419              		.loc 1 297 45 is_stmt 0 view .LVU813
 3420 05f6 094B     		ldr	r3, .L145+8
 3421 05f8 2522     		movs	r2, #37
 3422 05fa 9B5C     		ldrb	r3, [r3, r2]
 297:Src/main.c    ****     }
 3423              		.loc 1 297 7 view .LVU814
 3424 05fc 002B     		cmp	r3, #0
 3425 05fe 06D0     		beq	.L134
 297:Src/main.c    ****     }
 3426              		.loc 1 297 7 discriminator 1 view .LVU815
 3427 0600 1748     		ldr	r0, .L145+76
 3428              	.L128:
 297:Src/main.c    ****     }
 3429              		.loc 1 297 7 discriminator 4 view .LVU816
 3430 0602 0123     		movs	r3, #1
 3431 0604 0922     		movs	r2, #9
 3432 0606 3C21     		movs	r1, #60
 3433 0608 FFF7FEFF 		bl	draw_string
 3434              	.LVL292:
 3435 060c AEE7     		b	.L127
 3436              	.L134:
 297:Src/main.c    ****     }
 3437              		.loc 1 297 7 discriminator 2 view .LVU817
 3438 060e 1548     		ldr	r0, .L145+80
 3439 0610 F7E7     		b	.L128
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 108


 3440              	.L146:
 3441 0612 C046     		.align	2
 3442              	.L145:
 3443 0614 0000C843 		.word	1137180672
 3444 0618 00000000 		.word	r
 3445 061c 00000000 		.word	s
 3446 0620 00000000 		.word	.LANCHOR0
 3447 0624 58000000 		.word	.LC54
 3448 0628 00002041 		.word	1092616192
 3449 062c 60000000 		.word	.LC56
 3450 0630 68000000 		.word	.LC58
 3451 0634 70000000 		.word	.LC60
 3452 0638 6666663F 		.word	1063675494
 3453 063c 9A99B93F 		.word	1069128090
 3454 0640 00004040 		.word	1077936128
 3455 0644 0000F041 		.word	1106247680
 3456 0648 00200240 		.word	1073881088
 3457 064c 00E40008 		.word	134276096
 3458 0650 00003E40 		.word	1077805056
 3459 0654 00000000 		.word	hiwdg
 3460 0658 00080048 		.word	1207961600
 3461 065c 0000A041 		.word	1101004800
 3462 0660 10000000 		.word	.LC32
 3463 0664 18000000 		.word	.LC34
 3464              	.LBE31:
 3465              		.cfi_endproc
 3466              	.LFE37:
 3468              		.section	.text.Error_Handler,"ax",%progbits
 3469              		.align	1
 3470              		.global	Error_Handler
 3471              		.syntax unified
 3472              		.code	16
 3473              		.thumb_func
 3475              	Error_Handler:
 3476              	.LFB58:
 751:Src/main.c    **** 
 752:Src/main.c    **** void Error_Handler(void)
 753:Src/main.c    **** {
 3477              		.loc 1 753 1 is_stmt 1 view -0
 3478              		.cfi_startproc
 3479              		@ args = 0, pretend = 0, frame = 0
 3480              		@ frame_needed = 0, uses_anonymous_args = 0
 3481              		@ link register save eliminated.
 754:Src/main.c    **** 
 755:Src/main.c    **** }
 3482              		.loc 1 755 1 view .LVU819
 3483              		@ sp needed
 3484 0000 7047     		bx	lr
 3485              		.cfi_endproc
 3486              	.LFE58:
 3488              		.global	OLED_Setup_Array
 3489              		.section	.data.OLED_Setup_Array,"aw"
 3490              		.align	2
 3493              	OLED_Setup_Array:
 3494 0000 80AE80D5 		.ascii	"\200\256\200\325\200R\200\250\200\017\200\300\200\323"
 3494      805280A8 
 3494      800F80C0 
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 109


 3494      80D3
 3495 000e 80008040 		.ascii	"\200\000\200@\200\240\200\215\200\024\200\332\200\002"
 3495      80A0808D 
 3495      801480DA 
 3495      8002
 3496 001c 80818033 		.ascii	"\200\201\2003\200\331\200\361\200\333\2000\200\244\200"
 3496      80D980F1 
 3496      80DB8030 
 3496      80A480
 3497 002b A6802080 		.ascii	"\246\200 \200\000\200\257"
 3497      0080AF
 3498              		.global	REFRESH_COMMANDS
 3499              		.section	.rodata.REFRESH_COMMANDS,"a"
 3500              		.align	2
 3503              	REFRESH_COMMANDS:
 3504 0000 80AF8021 		.ascii	"\200\257\200!\200 \200\177\200\300\200\"\200\000\200"
 3504      8020807F 
 3504      80C08022 
 3504      800080
 3505 000f 0140     		.ascii	"\001@"
 3506              		.global	screenBuffer
 3507              		.section	.bss.screenBuffer,"aw",%nobits
 3508              		.align	2
 3511              	screenBuffer:
 3512 0000 00000000 		.space	218
 3512      00000000 
 3512      00000000 
 3512      00000000 
 3512      00000000 
 3513              		.global	by_string
 3514              		.section	.rodata.str1.4,"aMS",%progbits,1
 3515              		.align	2
 3516              	.LC64:
 3517 0000 6279204A 		.ascii	"by Jana Marie\000"
 3517      616E6120 
 3517      4D617269 
 3517      6500
 3518              		.section	.data.by_string,"aw"
 3519              		.align	2
 3522              	by_string:
 3523 0000 00000000 		.word	.LC64
 3524              		.global	otter_string
 3525              		.section	.rodata.str1.4
 3526 000e 0000     		.align	2
 3527              	.LC65:
 3528 0010 4F747465 		.ascii	"Otter-Iron\000"
 3528      722D4972 
 3528      6F6E00
 3529              		.section	.data.otter_string,"aw"
 3530              		.align	2
 3533              	otter_string:
 3534 0000 10000000 		.word	.LC65
 3535              		.global	dfu_string
 3536              		.section	.rodata.str1.4
 3537 001b 00       		.align	2
 3538              	.LC66:
 3539 001c 64667520 		.ascii	"dfu dfu dfu dfu\000"
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 110


 3539      64667520 
 3539      64667520 
 3539      64667500 
 3540              		.section	.data.dfu_string,"aw"
 3541              		.align	2
 3544              	dfu_string:
 3545 0000 1C000000 		.word	.LC66
 3546              		.global	sendDataUSB
 3547              		.section	.bss.sendDataUSB,"aw",%nobits
 3548              		.align	2
 3551              	sendDataUSB:
 3552 0000 00000000 		.space	4
 3553              		.section	.bss.ADC_raw,"aw",%nobits
 3554              		.align	2
 3557              	ADC_raw:
 3558 0000 00000000 		.space	8
 3558      00000000 
 3559              		.global	tipcal
 3560              		.section	.data.tipcal,"aw"
 3561              		.align	2
 3564              	tipcal:
 3565 0000 0000F042 		.word	1123024896
 3566 0004 0000B842 		.word	1119354880
 3567              		.global	r
 3568              		.section	.data.r,"aw"
 3569              		.align	2
 3572              	r:
 3573 0000 00005C43 		.word	1130102784
 3574 0004 00000000 		.space	12
 3574      00000000 
 3574      00000000 
 3575 0010 00004843 		.word	1128792064
 3576 0014 00000000 		.space	8
 3576      00000000 
 3577 001c CDCCCC3D 		.word	1036831949
 3578 0020 9A99993E 		.word	1050253722
 3579 0024 B81E053E 		.word	1040522936
 3580 0028 9A99993E 		.word	1050253722
 3581 002c 00004041 		.word	1094713344
 3582              		.global	s
 3583              		.section	.data.s,"aw"
 3584              		.align	2
 3587              	s:
 3588 0000 00000000 		.space	20
 3588      00000000 
 3588      00000000 
 3588      00000000 
 3588      00000000 
 3589 0014 CDCC8C3F 		.word	1066192077
 3590 0018 00000000 		.space	4
 3591 001c 00       		.byte	0
 3592 001d 00000000 		.space	11
 3592      00000000 
 3592      000000
 3593              		.global	USBD_Device
 3594              		.section	.bss.USBD_Device,"aw",%nobits
 3595              		.align	2
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 111


 3598              	USBD_Device:
 3599 0000 00000000 		.space	548
 3599      00000000 
 3599      00000000 
 3599      00000000 
 3599      00000000 
 3600              		.global	hiwdg
 3601              		.section	.bss.hiwdg,"aw",%nobits
 3602              		.align	2
 3605              	hiwdg:
 3606 0000 00000000 		.space	16
 3606      00000000 
 3606      00000000 
 3606      00000000 
 3607              		.global	htim3
 3608              		.section	.bss.htim3,"aw",%nobits
 3609              		.align	2
 3612              	htim3:
 3613 0000 00000000 		.space	64
 3613      00000000 
 3613      00000000 
 3613      00000000 
 3613      00000000 
 3614              		.global	htim1
 3615              		.section	.bss.htim1,"aw",%nobits
 3616              		.align	2
 3619              	htim1:
 3620 0000 00000000 		.space	64
 3620      00000000 
 3620      00000000 
 3620      00000000 
 3620      00000000 
 3621              		.global	hi2c2
 3622              		.section	.bss.hi2c2,"aw",%nobits
 3623              		.align	2
 3626              	hi2c2:
 3627 0000 00000000 		.space	76
 3627      00000000 
 3627      00000000 
 3627      00000000 
 3627      00000000 
 3628              		.global	hi2c1
 3629              		.section	.bss.hi2c1,"aw",%nobits
 3630              		.align	2
 3633              	hi2c1:
 3634 0000 00000000 		.space	76
 3634      00000000 
 3634      00000000 
 3634      00000000 
 3634      00000000 
 3635              		.global	hdma_adc
 3636              		.section	.bss.hdma_adc,"aw",%nobits
 3637              		.align	2
 3640              	hdma_adc:
 3641 0000 00000000 		.space	68
 3641      00000000 
 3641      00000000 
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 112


 3641      00000000 
 3641      00000000 
 3642              		.global	hadc
 3643              		.section	.bss.hadc,"aw",%nobits
 3644              		.align	2
 3647              	hadc:
 3648 0000 00000000 		.space	76
 3648      00000000 
 3648      00000000 
 3648      00000000 
 3648      00000000 
 3649              		.global	MAX_DUTY
 3650              		.section	.data.MAX_DUTY,"aw"
 3651              		.align	1
 3654              	MAX_DUTY:
 3655 0000 960F     		.short	3990
 3656              		.global	font
 3657              		.section	.rodata.font,"a"
 3658              		.align	2
 3661              	font:
 3662 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 3662      0000
 3663 0006 2F000000 		.ascii	"/\000\000\000\000\000"
 3663      0000
 3664 000c 03000300 		.ascii	"\003\000\003\000\000\000"
 3664      0000
 3665 0012 123F1212 		.ascii	"\022?\022\022?\022"
 3665      3F12
 3666 0018 2E2A7F2A 		.ascii	".*\177*:\000"
 3666      3A00
 3667 001e 23130804 		.ascii	"#\023\010\00421"
 3667      3231
 3668 0024 102A252A 		.ascii	"\020*%*\020 "
 3668      1020
 3669 002a 02010000 		.ascii	"\002\001\000\000\000\000"
 3669      0000
 3670 0030 1E210000 		.ascii	"\036!\000\000\000\000"
 3670      0000
 3671 0036 211E0000 		.ascii	"!\036\000\000\000\000"
 3671      0000
 3672 003c 082A1C2A 		.ascii	"\010*\034*\010\010"
 3672      0808
 3673 0042 08083E08 		.ascii	"\010\010>\010\010\010"
 3673      0808
 3674 0048 80600000 		.ascii	"\200`\000\000\000\000"
 3674      0000
 3675 004e 08080808 		.ascii	"\010\010\010\010\010\000"
 3675      0800
 3676 0054 30300000 		.ascii	"00\000\000\000\000"
 3676      0000
 3677 005a 20100804 		.ascii	" \020\010\004\002\000"
 3677      0200
 3678 0060 1E312925 		.ascii	"\0361)%#\036"
 3678      231E
 3679 0066 22213F20 		.ascii	"\"!?   "
 3679      2020
 3680 006c 32292929 		.ascii	"2))))&"
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 113


 3680      2926
 3681 0072 12212125 		.ascii	"\022!!%%\032"
 3681      251A
 3682 0078 1814123F 		.ascii	"\030\024\022?\020\020"
 3682      1010
 3683 007e 17252525 		.ascii	"\027%%%%\031"
 3683      2519
 3684 0084 1E252525 		.ascii	"\036%%%%\030"
 3684      2518
 3685 008a 01013109 		.ascii	"\001\0011\011\005\003"
 3685      0503
 3686 0090 1A252525 		.ascii	"\032%%%%\032"
 3686      251A
 3687 0096 06292929 		.ascii	"\006))))\036"
 3687      291E
 3688 009c 24000000 		.ascii	"$\000\000\000\000\000"
 3688      0000
 3689 00a2 80640000 		.ascii	"\200d\000\000\000\000"
 3689      0000
 3690 00a8 08142200 		.ascii	"\010\024\"\000\000\000"
 3690      0000
 3691 00ae 14141414 		.ascii	"\024\024\024\024\024\000"
 3691      1400
 3692 00b4 22140800 		.ascii	"\"\024\010\000\000\000"
 3692      0000
 3693 00ba 02010129 		.ascii	"\002\001\001)\005\002"
 3693      0502
 3694 00c0 1E212D2B 		.ascii	"\036!-+-\016"
 3694      2D0E
 3695 00c6 3E090909 		.ascii	">\011\011\011\011>"
 3695      093E
 3696 00cc 3F252525 		.ascii	"?%%%%\032"
 3696      251A
 3697 00d2 1E212121 		.ascii	"\036!!!!\022"
 3697      2112
 3698 00d8 3F212121 		.ascii	"?!!!\022\014"
 3698      120C
 3699 00de 3F252525 		.ascii	"?%%%%!"
 3699      2521
 3700 00e4 3F050505 		.ascii	"?\005\005\005\005\001"
 3700      0501
 3701 00ea 1E212121 		.ascii	"\036!!!)\032"
 3701      291A
 3702 00f0 3F040404 		.ascii	"?\004\004\004\004?"
 3702      043F
 3703 00f6 21213F21 		.ascii	"!!?!!!"
 3703      2121
 3704 00fc 10202020 		.ascii	"\020    \037"
 3704      201F
 3705 0102 3F040C0A 		.ascii	"?\004\014\012\021 "
 3705      1120
 3706 0108 3F202020 		.ascii	"?     "
 3706      2020
 3707 010e 3F020404 		.ascii	"?\002\004\004\002?"
 3707      023F
 3708 0114 3F020408 		.ascii	"?\002\004\010\020?"
 3708      103F
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 114


 3709 011a 1E212121 		.ascii	"\036!!!!\036"
 3709      211E
 3710 0120 3F090909 		.ascii	"?\011\011\011\011\006"
 3710      0906
 3711 0126 1E212931 		.ascii	"\036!)1!\036"
 3711      211E
 3712 012c 3F090909 		.ascii	"?\011\011\011\031&"
 3712      1926
 3713 0132 12252525 		.ascii	"\022%%%%\030"
 3713      2518
 3714 0138 0101013F 		.ascii	"\001\001\001?\001\001"
 3714      0101
 3715 013e 1F202020 		.ascii	"\037    \037"
 3715      201F
 3716 0144 0F102020 		.ascii	"\017\020  \020\017"
 3716      100F
 3717 014a 1F201010 		.ascii	"\037 \020\020 \037"
 3717      201F
 3718 0150 21120C0C 		.ascii	"!\022\014\014\022!"
 3718      1221
 3719 0156 01020C38 		.ascii	"\001\002\0148\004\002"
 3719      0402
 3720 015c 21312925 		.ascii	"!1)%#!"
 3720      2321
 3721 0162 3F210000 		.ascii	"?!\000\000\000\000"
 3721      0000
 3722 0168 02040810 		.ascii	"\002\004\010\020 \000"
 3722      2000
 3723 016e 213F0000 		.ascii	"!?\000\000\000\000"
 3723      0000
 3724 0174 04023F02 		.ascii	"\004\002?\002\004\000"
 3724      0400
 3725 017a 40404040 		.ascii	"@@@@@@"
 3725      4040
 3726 0180 01020000 		.ascii	"\001\002\000\000\000\000"
 3726      0000
 3727 0186 10302A2A 		.ascii	"\0200**<\000"
 3727      3C00
 3728 018c 3F242424 		.ascii	"?$$$\030\000"
 3728      1800
 3729 0192 0C142222 		.ascii	"\014\024\"\"\000\000"
 3729      0000
 3730 0198 18242424 		.ascii	"\030$$$?\000"
 3730      3F00
 3731 019e 1C2C2A2A 		.ascii	"\034,**$\000"
 3731      2400
 3732 01a4 3E050100 		.ascii	">\005\001\000\000\000"
 3732      0000
 3733 01aa 1828A4A4 		.ascii	"\030(\244\244|\000"
 3733      7C00
 3734 01b0 3F04040C 		.ascii	"?\004\004\0140\000"
 3734      3000
 3735 01b6 243D2000 		.ascii	"$= \000\000\000"
 3735      0000
 3736 01bc 2040403D 		.ascii	" @@=\000\000"
 3736      0000
 3737 01c2 3F0C1220 		.ascii	"?\014\022 \000\000"
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 115


 3737      0000
 3738 01c8 1F202000 		.ascii	"\037  \000\000\000"
 3738      0000
 3739 01ce 3E023C02 		.ascii	">\002<\002<\000"
 3739      3C00
 3740 01d4 3E020202 		.ascii	">\002\002\002<\000"
 3740      3C00
 3741 01da 0C142232 		.ascii	"\014\024\"2\014\000"
 3741      0C00
 3742 01e0 FC242424 		.ascii	"\374$$$\030\000"
 3742      1800
 3743 01e6 18242424 		.ascii	"\030$$$\374\200"
 3743      FC80
 3744 01ec 3C040202 		.ascii	"<\004\002\002\000\000"
 3744      0000
 3745 01f2 242C2A2A 		.ascii	"$,**\020\000"
 3745      1000
 3746 01f8 021F2220 		.ascii	"\002\037\" \000\000"
 3746      0000
 3747 01fe 1E202020 		.ascii	"\036   \036\000"
 3747      1E00
 3748 0204 06182018 		.ascii	"\006\030 \030\006\000"
 3748      0600
 3749 020a 1E301C30 		.ascii	"\0360\0340\016\000"
 3749      0E00
 3750 0210 22140814 		.ascii	"\"\024\010\024\"\000"
 3750      2200
 3751 0216 0C10A0A0 		.ascii	"\014\020\240\240|\000"
 3751      7C00
 3752 021c 22322A26 		.ascii	"\"2*&\"\""
 3752      2222
 3753 0222 0C3F2100 		.ascii	"\014?!\000\000\000"
 3753      0000
 3754 0228 3F000000 		.ascii	"?\000\000\000\000\000"
 3754      0000
 3755 022e 213F0C00 		.ascii	"!?\014\000\000\000"
 3755      0000
 3756 0234 02010201 		.ascii	"\002\001\002\001\000\000"
 3756      0000
 3757 023a 00000000 		.ascii	"\000\000\000\000\000\000"
 3757      0000
 3758              		.global	UserTxBuffer
 3759              		.section	.bss.UserTxBuffer,"aw",%nobits
 3760              		.align	2
 3763              	UserTxBuffer:
 3764 0000 00000000 		.space	512
 3764      00000000 
 3764      00000000 
 3764      00000000 
 3764      00000000 
 3765              		.global	UserRxBuffer
 3766              		.section	.bss.UserRxBuffer,"aw",%nobits
 3767              		.align	2
 3770              	UserRxBuffer:
 3771 0000 00000000 		.space	512
 3771      00000000 
 3771      00000000 
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 116


 3771      00000000 
 3771      00000000 
 3772              		.section	.rodata
 3773              		.align	2
 3774              		.set	.LANCHOR0,. + 0
 3775              	.LC52:
 3776 0000 20202020 		.ascii	"          \000"
 3776      20202020 
 3776      202000
 3777 000b 000000   		.space	3
 3778              		.text
 3779              	.Letext0:
 3780              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 3781              		.file 5 "C:/SysGCC/arm-eabi/arm-none-eabi/include/machine/_default_types.h"
 3782              		.file 6 "C:/SysGCC/arm-eabi/arm-none-eabi/include/sys/_stdint.h"
 3783              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 3784              		.file 8 "C:/SysGCC/arm-eabi/lib/gcc/arm-none-eabi/13.3.1/include/stddef.h"
 3785              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 3786              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 3787              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 3788              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 3789              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 3790              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 3791              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 3792              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_iwdg.h"
 3793              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 3794              		.file 18 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 3795              		.file 19 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 3796              		.file 20 "Inc/usbd_cdc_interface.h"
 3797              		.file 21 "Inc/font.h"
 3798              		.file 22 "Inc/stusb4500.h"
 3799              		.file 23 "C:/SysGCC/arm-eabi/arm-none-eabi/include/string.h"
 3800              		.file 24 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 3801              		.file 25 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c_ex.h"
 3802              		.file 26 "Inc/main.h"
 3803              		.file 27 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 3804              		.file 28 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_flash.h"
 3805              		.file 29 "C:/SysGCC/arm-eabi/arm-none-eabi/include/math.h"
 3806              		.file 30 "C:/SysGCC/arm-eabi/arm-none-eabi/include/stdio.h"
 3807              		.file 31 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 3808              		.file 32 "<built-in>"
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 117


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:19     .text.NVIC_SystemReset:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:24     .text.NVIC_SystemReset:00000000 NVIC_SystemReset
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:88     .text.NVIC_SystemReset:00000014 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:94     .text.MX_GPIO_Init:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:99     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:228    .text.MX_GPIO_Init:00000084 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:235    .text.MX_DMA_Init:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:240    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:297    .text.MX_DMA_Init:0000003c $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:302    .text.MX_ADC_Init:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:307    .text.MX_ADC_Init:00000000 MX_ADC_Init
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:471    .text.MX_ADC_Init:000000a4 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3647   .bss.hadc:00000000 hadc
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:478    .text.MX_I2C1_Init:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:483    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:546    .text.MX_I2C1_Init:00000038 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3633   .bss.hi2c1:00000000 hi2c1
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:553    .text.MX_I2C2_Init:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:558    .text.MX_I2C2_Init:00000000 MX_I2C2_Init
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:621    .text.MX_I2C2_Init:00000038 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3626   .bss.hi2c2:00000000 hi2c2
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:628    .text.TIM3_Init:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:633    .text.TIM3_Init:00000000 TIM3_Init
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:718    .text.TIM3_Init:00000050 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3612   .bss.htim3:00000000 htim3
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:726    .text.MX_TIM1_Init:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:731    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:936    .text.MX_TIM1_Init:000000dc $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3619   .bss.htim1:00000000 htim1
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:944    .text.MX_IWDG_Init:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:949    .text.MX_IWDG_Init:00000000 MX_IWDG_Init
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:985    .text.MX_IWDG_Init:00000018 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3605   .bss.hiwdg:00000000 hiwdg
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:993    .text.check_usbpd:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:999    .text.check_usbpd:00000000 check_usbpd
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1045   .text.check_usbpd:0000002c $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3587   .data.s:00000000 s
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1068   .text.reg:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1074   .text.reg:00000000 reg
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1464   .text.reg:00000224 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3557   .bss.ADC_raw:00000000 ADC_raw
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3564   .data.tipcal:00000000 tipcal
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3572   .data.r:00000000 r
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3654   .data.MAX_DUTY:00000000 MAX_DUTY
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1491   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1497   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1548   .text.HAL_TIM_PeriodElapsedCallback:00000028 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3551   .bss.sendDataUSB:00000000 sendDataUSB
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3763   .bss.UserTxBuffer:00000000 UserTxBuffer
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3598   .bss.USBD_Device:00000000 USBD_Device
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1555   .text.disp_init:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1561   .text.disp_init:00000000 disp_init
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1632   .text.disp_init:00000048 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3511   .bss.screenBuffer:00000000 screenBuffer
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3503   .rodata.REFRESH_COMMANDS:00000000 REFRESH_COMMANDS
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 118


C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3493   .data.OLED_Setup_Array:00000000 OLED_Setup_Array
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1641   .text.refresh:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1647   .text.refresh:00000000 refresh
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1707   .text.refresh:00000034 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1714   .text.clear_screen:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1720   .text.clear_screen:00000000 clear_screen
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1743   .text.clear_screen:00000010 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1748   .text.set_screen:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1754   .text.set_screen:00000000 set_screen
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1777   .text.set_screen:00000010 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1782   .text.write_pixel:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1788   .text.write_pixel:00000000 write_pixel
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1898   .text.write_pixel:00000074 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1903   .text.draw_v_line:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1909   .text.draw_v_line:00000000 draw_v_line
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1976   .text.draw_char:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:1982   .text.draw_char:00000000 draw_char
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:2116   .text.draw_char:00000068 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3661   .rodata.font:00000000 font
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:2121   .text.draw_string:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:2127   .text.draw_string:00000000 draw_string
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:2187   .text.SystemClock_Config:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:2193   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:2306   .text.SystemClock_Config:0000006c $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:2311   .rodata.main.str1.4:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:2350   .text.main:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:2356   .text.main:00000000 main
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:2856   .text.main:000002a8 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3533   .data.otter_string:00000000 otter_string
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3522   .data.by_string:00000000 by_string
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3544   .data.dfu_string:00000000 dfu_string
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:2885   .text.main:00000314 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3443   .text.main:00000614 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3469   .text.Error_Handler:00000000 $t
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3475   .text.Error_Handler:00000000 Error_Handler
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3490   .data.OLED_Setup_Array:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3500   .rodata.REFRESH_COMMANDS:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3508   .bss.screenBuffer:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3515   .rodata.str1.4:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3519   .data.by_string:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3530   .data.otter_string:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3541   .data.dfu_string:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3548   .bss.sendDataUSB:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3554   .bss.ADC_raw:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3561   .data.tipcal:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3569   .data.r:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3584   .data.s:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3595   .bss.USBD_Device:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3602   .bss.hiwdg:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3609   .bss.htim3:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3616   .bss.htim1:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3623   .bss.hi2c2:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3630   .bss.hi2c1:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3640   .bss.hdma_adc:00000000 hdma_adc
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3637   .bss.hdma_adc:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3644   .bss.hadc:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3651   .data.MAX_DUTY:00000000 $d
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 119


C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3658   .rodata.font:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3760   .bss.UserTxBuffer:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3770   .bss.UserRxBuffer:00000000 UserRxBuffer
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3767   .bss.UserRxBuffer:00000000 $d
C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s:3773   .rodata:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_ADC_MspInit
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_OC_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_IWDG_Init
__aeabi_fcmpge
__aeabi_ui2f
__aeabi_f2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_d2f
__aeabi_i2f
__aeabi_fsub
__aeabi_fmul
__aeabi_fdiv
__aeabi_fadd
__aeabi_i2d
__aeabi_dadd
__aeabi_fcmple
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_f2iz
USBD_CDC_SetTxBuffer
USBD_CDC_TransmitPacket
HAL_I2C_GetState
HAL_I2C_Master_Transmit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_f2uiz
__aeabi_d2uiz
HAL_Init
stusb_update_pdo
stusb_set_valid_pdo
ARM GAS  C:\Users\0.0\AppData\Local\Temp\ccDy6wLm.s 			page 120


HAL_Delay
HAL_TIM_PWM_Start
HAL_TIM_OC_Start
HAL_ADC_Start_DMA
HAL_GPIO_ReadPin
stusb_read_rdo
sprintf
ceil
stusb_soft_reset
HAL_FLASH_Unlock
HAL_FLASH_Program
HAL_FLASH_Lock
HAL_IWDG_Refresh
