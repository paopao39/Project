ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_desc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/usbd_desc.c"
  18              		.section	.text.USBD_VCP_DeviceDescriptor,"ax",%progbits
  19              		.align	1
  20              		.global	USBD_VCP_DeviceDescriptor
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	USBD_VCP_DeviceDescriptor:
  26              	.LVL0:
  27              	.LFB37:
   1:Src/usbd_desc.c **** /**
   2:Src/usbd_desc.c ****   ******************************************************************************
   3:Src/usbd_desc.c ****   * @file    USB_Device/CDC_Standalone/Src/usbd_desc.c
   4:Src/usbd_desc.c ****   * @author  MCD Application Team
   5:Src/usbd_desc.c ****   * @brief   This file provides the USBD descriptors and string formating method.
   6:Src/usbd_desc.c ****   ******************************************************************************
   7:Src/usbd_desc.c ****   * @attention
   8:Src/usbd_desc.c ****   *
   9:Src/usbd_desc.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics International N.V.
  10:Src/usbd_desc.c ****   * All rights reserved.</center></h2>
  11:Src/usbd_desc.c ****   *
  12:Src/usbd_desc.c ****   * Redistribution and use in source and binary forms, with or without
  13:Src/usbd_desc.c ****   * modification, are permitted, provided that the following conditions are met:
  14:Src/usbd_desc.c ****   *
  15:Src/usbd_desc.c ****   * 1. Redistribution of source code must retain the above copyright notice,
  16:Src/usbd_desc.c ****   *    this list of conditions and the following disclaimer.
  17:Src/usbd_desc.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  18:Src/usbd_desc.c ****   *    this list of conditions and the following disclaimer in the documentation
  19:Src/usbd_desc.c ****   *    and/or other materials provided with the distribution.
  20:Src/usbd_desc.c ****   * 3. Neither the name of STMicroelectronics nor the names of other
  21:Src/usbd_desc.c ****   *    contributors to this software may be used to endorse or promote products
  22:Src/usbd_desc.c ****   *    derived from this software without specific written permission.
  23:Src/usbd_desc.c ****   * 4. This software, including modifications and/or derivative works of this
  24:Src/usbd_desc.c ****   *    software, must execute solely and exclusively on microcontroller or
  25:Src/usbd_desc.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  26:Src/usbd_desc.c ****   * 5. Redistribution and use of this software other than as permitted under
  27:Src/usbd_desc.c ****   *    this license is void and will automatically terminate your rights under
  28:Src/usbd_desc.c ****   *    this license.
  29:Src/usbd_desc.c ****   *
  30:Src/usbd_desc.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
  31:Src/usbd_desc.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 2


  32:Src/usbd_desc.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  33:Src/usbd_desc.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  34:Src/usbd_desc.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  35:Src/usbd_desc.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  36:Src/usbd_desc.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  37:Src/usbd_desc.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  38:Src/usbd_desc.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  39:Src/usbd_desc.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  40:Src/usbd_desc.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  41:Src/usbd_desc.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  42:Src/usbd_desc.c ****   *
  43:Src/usbd_desc.c ****   ******************************************************************************
  44:Src/usbd_desc.c ****   */
  45:Src/usbd_desc.c **** 
  46:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  47:Src/usbd_desc.c **** #include "usbd_core.h"
  48:Src/usbd_desc.c **** #include "usbd_desc.h"
  49:Src/usbd_desc.c **** #include "usbd_conf.h"
  50:Src/usbd_desc.c **** 
  51:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
  52:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
  53:Src/usbd_desc.c **** #define USBD_VID                      0x0483
  54:Src/usbd_desc.c **** #define USBD_PID                      0x5740
  55:Src/usbd_desc.c **** #define USBD_LANGID_STRING            0x409
  56:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING      "Otter-Iron"
  57:Src/usbd_desc.c **** #define USBD_PRODUCT_FS_STRING        "chirp :3"
  58:Src/usbd_desc.c **** #define USBD_CONFIGURATION_FS_STRING  "mau"
  59:Src/usbd_desc.c **** #define USBD_INTERFACE_FS_STRING      ":o"
  60:Src/usbd_desc.c **** 
  61:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  62:Src/usbd_desc.c **** /* Private function prototypes -----------------------------------------------*/
  63:Src/usbd_desc.c **** uint8_t *USBD_VCP_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  64:Src/usbd_desc.c **** uint8_t *USBD_VCP_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  65:Src/usbd_desc.c **** uint8_t *USBD_VCP_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  66:Src/usbd_desc.c **** uint8_t *USBD_VCP_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  67:Src/usbd_desc.c **** uint8_t *USBD_VCP_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  68:Src/usbd_desc.c **** uint8_t *USBD_VCP_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  69:Src/usbd_desc.c **** uint8_t *USBD_VCP_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
  70:Src/usbd_desc.c **** #ifdef USB_SUPPORT_USER_STRING_DESC
  71:Src/usbd_desc.c **** uint8_t *USBD_VCP_USRStringDesc (USBD_SpeedTypeDef speed, uint8_t idx, uint16_t *length);
  72:Src/usbd_desc.c **** #endif /* USB_SUPPORT_USER_STRING_DESC */
  73:Src/usbd_desc.c **** 
  74:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  75:Src/usbd_desc.c **** USBD_DescriptorsTypeDef VCP_Desc = {
  76:Src/usbd_desc.c ****   USBD_VCP_DeviceDescriptor,
  77:Src/usbd_desc.c ****   USBD_VCP_LangIDStrDescriptor,
  78:Src/usbd_desc.c ****   USBD_VCP_ManufacturerStrDescriptor,
  79:Src/usbd_desc.c ****   USBD_VCP_ProductStrDescriptor,
  80:Src/usbd_desc.c ****   USBD_VCP_SerialStrDescriptor,
  81:Src/usbd_desc.c ****   USBD_VCP_ConfigStrDescriptor,
  82:Src/usbd_desc.c ****   USBD_VCP_InterfaceStrDescriptor,
  83:Src/usbd_desc.c **** };
  84:Src/usbd_desc.c **** 
  85:Src/usbd_desc.c **** /* USB Standard Device Descriptor */
  86:Src/usbd_desc.c **** const uint8_t hUSBDDeviceDesc[USB_LEN_DEV_DESC]= {
  87:Src/usbd_desc.c ****   0x12,                       /* bLength */
  88:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /* bDescriptorType */
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 3


  89:Src/usbd_desc.c ****   0x00,                       /* bcdUSB */
  90:Src/usbd_desc.c ****   0x02,
  91:Src/usbd_desc.c ****   0x00,                       /* bDeviceClass */
  92:Src/usbd_desc.c ****   0x00,                       /* bDeviceSubClass */
  93:Src/usbd_desc.c ****   0x00,                       /* bDeviceProtocol */
  94:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /* bMaxPacketSize */
  95:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /* idVendor */
  96:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /* idVendor */
  97:Src/usbd_desc.c ****   LOBYTE(USBD_PID),           /* idVendor */
  98:Src/usbd_desc.c ****   HIBYTE(USBD_PID),           /* idVendor */
  99:Src/usbd_desc.c ****   0x00,                       /* bcdDevice rel. 2.00 */
 100:Src/usbd_desc.c ****   0x02,
 101:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /* Index of manufacturer string */
 102:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /* Index of product string */
 103:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /* Index of serial number string */
 104:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /* bNumConfigurations */
 105:Src/usbd_desc.c **** }; /* USB_DeviceDescriptor */
 106:Src/usbd_desc.c **** 
 107:Src/usbd_desc.c **** /* USB Standard Device Descriptor */
 108:Src/usbd_desc.c **** const uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC]=
 109:Src/usbd_desc.c **** {
 110:Src/usbd_desc.c ****   USB_LEN_LANGID_STR_DESC,
 111:Src/usbd_desc.c ****   USB_DESC_TYPE_STRING,
 112:Src/usbd_desc.c ****   LOBYTE(USBD_LANGID_STRING),
 113:Src/usbd_desc.c ****   HIBYTE(USBD_LANGID_STRING),
 114:Src/usbd_desc.c **** };
 115:Src/usbd_desc.c **** 
 116:Src/usbd_desc.c **** uint8_t USBD_StringSerial[USB_SIZ_STRING_SERIAL] =
 117:Src/usbd_desc.c **** {
 118:Src/usbd_desc.c ****   USB_SIZ_STRING_SERIAL,
 119:Src/usbd_desc.c ****   USB_DESC_TYPE_STRING,
 120:Src/usbd_desc.c **** };
 121:Src/usbd_desc.c **** 
 122:Src/usbd_desc.c **** uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ];
 123:Src/usbd_desc.c **** 
 124:Src/usbd_desc.c **** /* Private functions ---------------------------------------------------------*/
 125:Src/usbd_desc.c **** static void IntToUnicode (uint32_t value , uint8_t *pbuf , uint8_t len);
 126:Src/usbd_desc.c **** static void Get_SerialNum(void);
 127:Src/usbd_desc.c **** /**
 128:Src/usbd_desc.c ****   * @brief  Returns the device descriptor.
 129:Src/usbd_desc.c ****   * @param  speed: Current device speed
 130:Src/usbd_desc.c ****   * @param  length: Pointer to data length variable
 131:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 132:Src/usbd_desc.c ****   */
 133:Src/usbd_desc.c **** uint8_t *USBD_VCP_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 134:Src/usbd_desc.c **** {
  28              		.loc 1 134 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 135:Src/usbd_desc.c ****   *length = sizeof(hUSBDDeviceDesc);
  33              		.loc 1 135 3 view .LVU1
  34              		.loc 1 135 11 is_stmt 0 view .LVU2
  35 0000 1223     		movs	r3, #18
  36 0002 0B80     		strh	r3, [r1]
 136:Src/usbd_desc.c ****   return (uint8_t*)hUSBDDeviceDesc;
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 4


  37              		.loc 1 136 3 is_stmt 1 view .LVU3
  38              		.loc 1 136 10 is_stmt 0 discriminator 1 view .LVU4
  39 0004 0048     		ldr	r0, .L2
  40              	.LVL1:
 137:Src/usbd_desc.c **** }
  41              		.loc 1 137 1 view .LVU5
  42              		@ sp needed
  43 0006 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0008 00000000 		.word	hUSBDDeviceDesc
  48              		.cfi_endproc
  49              	.LFE37:
  51              		.section	.text.USBD_VCP_LangIDStrDescriptor,"ax",%progbits
  52              		.align	1
  53              		.global	USBD_VCP_LangIDStrDescriptor
  54              		.syntax unified
  55              		.code	16
  56              		.thumb_func
  58              	USBD_VCP_LangIDStrDescriptor:
  59              	.LVL2:
  60              	.LFB38:
 138:Src/usbd_desc.c **** 
 139:Src/usbd_desc.c **** /**
 140:Src/usbd_desc.c ****   * @brief  Returns the LangID string descriptor.
 141:Src/usbd_desc.c ****   * @param  speed: Current device speed
 142:Src/usbd_desc.c ****   * @param  length: Pointer to data length variable
 143:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 144:Src/usbd_desc.c ****   */
 145:Src/usbd_desc.c **** uint8_t *USBD_VCP_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 146:Src/usbd_desc.c **** {
  61              		.loc 1 146 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
 147:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
  66              		.loc 1 147 3 view .LVU7
  67              		.loc 1 147 11 is_stmt 0 view .LVU8
  68 0000 0423     		movs	r3, #4
  69 0002 0B80     		strh	r3, [r1]
 148:Src/usbd_desc.c ****   return (uint8_t*)USBD_LangIDDesc;
  70              		.loc 1 148 3 is_stmt 1 view .LVU9
  71              		.loc 1 148 10 is_stmt 0 discriminator 1 view .LVU10
  72 0004 0048     		ldr	r0, .L5
  73              	.LVL3:
 149:Src/usbd_desc.c **** }
  74              		.loc 1 149 1 view .LVU11
  75              		@ sp needed
  76 0006 7047     		bx	lr
  77              	.L6:
  78              		.align	2
  79              	.L5:
  80 0008 00000000 		.word	USBD_LangIDDesc
  81              		.cfi_endproc
  82              	.LFE38:
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 5


  84              		.section	.text.IntToUnicode,"ax",%progbits
  85              		.align	1
  86              		.syntax unified
  87              		.code	16
  88              		.thumb_func
  90              	IntToUnicode:
  91              	.LVL4:
  92              	.LFB45:
 150:Src/usbd_desc.c **** 
 151:Src/usbd_desc.c **** /**
 152:Src/usbd_desc.c ****   * @brief  Returns the product string descriptor.
 153:Src/usbd_desc.c ****   * @param  speed: Current device speed
 154:Src/usbd_desc.c ****   * @param  length: Pointer to data length variable
 155:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 156:Src/usbd_desc.c ****   */
 157:Src/usbd_desc.c **** uint8_t *USBD_VCP_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 158:Src/usbd_desc.c **** {
 159:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_PRODUCT_FS_STRING, USBD_StrDesc, length);
 160:Src/usbd_desc.c ****   return USBD_StrDesc;
 161:Src/usbd_desc.c **** }
 162:Src/usbd_desc.c **** 
 163:Src/usbd_desc.c **** /**
 164:Src/usbd_desc.c ****   * @brief  Returns the manufacturer string descriptor.
 165:Src/usbd_desc.c ****   * @param  speed: Current device speed
 166:Src/usbd_desc.c ****   * @param  length: Pointer to data length variable
 167:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 168:Src/usbd_desc.c ****   */
 169:Src/usbd_desc.c **** uint8_t *USBD_VCP_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 170:Src/usbd_desc.c **** {
 171:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 172:Src/usbd_desc.c ****   return USBD_StrDesc;
 173:Src/usbd_desc.c **** }
 174:Src/usbd_desc.c **** 
 175:Src/usbd_desc.c **** /**
 176:Src/usbd_desc.c ****   * @brief  Returns the serial number string descriptor.
 177:Src/usbd_desc.c ****   * @param  speed: Current device speed
 178:Src/usbd_desc.c ****   * @param  length: Pointer to data length variable
 179:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 180:Src/usbd_desc.c ****   */
 181:Src/usbd_desc.c **** uint8_t *USBD_VCP_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 182:Src/usbd_desc.c **** {
 183:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 184:Src/usbd_desc.c **** 
 185:Src/usbd_desc.c ****   /* Update the serial number string descriptor with the data from the unique ID*/
 186:Src/usbd_desc.c ****   Get_SerialNum();
 187:Src/usbd_desc.c **** 
 188:Src/usbd_desc.c ****   return USBD_StringSerial;
 189:Src/usbd_desc.c **** }
 190:Src/usbd_desc.c **** 
 191:Src/usbd_desc.c **** /**
 192:Src/usbd_desc.c ****   * @brief  Returns the configuration string descriptor.
 193:Src/usbd_desc.c ****   * @param  speed: Current device speed
 194:Src/usbd_desc.c ****   * @param  length: Pointer to data length variable
 195:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 196:Src/usbd_desc.c ****   */
 197:Src/usbd_desc.c **** uint8_t *USBD_VCP_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 198:Src/usbd_desc.c **** {
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 6


 199:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_CONFIGURATION_FS_STRING, USBD_StrDesc, length);
 200:Src/usbd_desc.c ****   return USBD_StrDesc;
 201:Src/usbd_desc.c **** }
 202:Src/usbd_desc.c **** 
 203:Src/usbd_desc.c **** /**
 204:Src/usbd_desc.c ****   * @brief  Returns the interface string descriptor.
 205:Src/usbd_desc.c ****   * @param  speed: Current device speed
 206:Src/usbd_desc.c ****   * @param  length: Pointer to data length variable
 207:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 208:Src/usbd_desc.c ****   */
 209:Src/usbd_desc.c **** uint8_t *USBD_VCP_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 210:Src/usbd_desc.c **** {
 211:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_INTERFACE_FS_STRING, USBD_StrDesc, length);
 212:Src/usbd_desc.c ****   return USBD_StrDesc;
 213:Src/usbd_desc.c **** }
 214:Src/usbd_desc.c **** 
 215:Src/usbd_desc.c **** /**
 216:Src/usbd_desc.c ****   * @brief  Create the serial number string descriptor
 217:Src/usbd_desc.c ****   * @param  None
 218:Src/usbd_desc.c ****   * @retval None
 219:Src/usbd_desc.c ****   */
 220:Src/usbd_desc.c **** static void Get_SerialNum(void)
 221:Src/usbd_desc.c **** {
 222:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 223:Src/usbd_desc.c **** 
 224:Src/usbd_desc.c ****   deviceserial0 = *(uint32_t*)DEVICE_ID1;
 225:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t*)DEVICE_ID2;
 226:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t*)DEVICE_ID3;
 227:Src/usbd_desc.c **** 
 228:Src/usbd_desc.c ****   deviceserial0 += deviceserial2;
 229:Src/usbd_desc.c **** 
 230:Src/usbd_desc.c ****   if (deviceserial0 != 0)
 231:Src/usbd_desc.c ****   {
 232:Src/usbd_desc.c ****     IntToUnicode (deviceserial0, &USBD_StringSerial[2] ,8);
 233:Src/usbd_desc.c ****     IntToUnicode (deviceserial1, &USBD_StringSerial[18] ,4);
 234:Src/usbd_desc.c ****   }
 235:Src/usbd_desc.c **** }
 236:Src/usbd_desc.c **** 
 237:Src/usbd_desc.c **** /**
 238:Src/usbd_desc.c ****   * @brief  Convert Hex 32Bits value into char
 239:Src/usbd_desc.c ****   * @param  value: value to convert
 240:Src/usbd_desc.c ****   * @param  pbuf: pointer to the buffer
 241:Src/usbd_desc.c ****   * @param  len: buffer length
 242:Src/usbd_desc.c ****   * @retval None
 243:Src/usbd_desc.c ****   */
 244:Src/usbd_desc.c **** static void IntToUnicode (uint32_t value , uint8_t *pbuf , uint8_t len)
 245:Src/usbd_desc.c **** {
  93              		.loc 1 245 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		.loc 1 245 1 is_stmt 0 view .LVU13
  98 0000 30B5     		push	{r4, r5, lr}
  99              	.LCFI0:
 100              		.cfi_def_cfa_offset 12
 101              		.cfi_offset 4, -12
 102              		.cfi_offset 5, -8
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 7


 103              		.cfi_offset 14, -4
 246:Src/usbd_desc.c ****   uint8_t idx = 0;
 104              		.loc 1 246 3 is_stmt 1 view .LVU14
 105              	.LVL5:
 247:Src/usbd_desc.c **** 
 248:Src/usbd_desc.c ****   for( idx = 0 ; idx < len ; idx ++)
 106              		.loc 1 248 3 view .LVU15
 107              		.loc 1 248 12 is_stmt 0 view .LVU16
 108 0002 0023     		movs	r3, #0
 109              		.loc 1 248 3 view .LVU17
 110 0004 0AE0     		b	.L8
 111              	.LVL6:
 112              	.L9:
 249:Src/usbd_desc.c ****   {
 250:Src/usbd_desc.c ****     if( ((value >> 28)) < 0xA )
 251:Src/usbd_desc.c ****     {
 252:Src/usbd_desc.c ****       pbuf[ 2* idx] = (value >> 28) + '0';
 253:Src/usbd_desc.c ****     }
 254:Src/usbd_desc.c ****     else
 255:Src/usbd_desc.c ****     {
 256:Src/usbd_desc.c ****       pbuf[2* idx] = (value >> 28) + 'A' - 10;
 113              		.loc 1 256 7 is_stmt 1 view .LVU18
 114              		.loc 1 256 13 is_stmt 0 view .LVU19
 115 0006 5D00     		lsls	r5, r3, #1
 116              		.loc 1 256 42 view .LVU20
 117 0008 3734     		adds	r4, r4, #55
 118              		.loc 1 256 20 view .LVU21
 119 000a 4C55     		strb	r4, [r1, r5]
 120              	.L10:
 257:Src/usbd_desc.c ****     }
 258:Src/usbd_desc.c **** 
 259:Src/usbd_desc.c ****     value = value << 4;
 121              		.loc 1 259 5 is_stmt 1 view .LVU22
 122              		.loc 1 259 11 is_stmt 0 view .LVU23
 123 000c 0001     		lsls	r0, r0, #4
 124              	.LVL7:
 260:Src/usbd_desc.c **** 
 261:Src/usbd_desc.c ****     pbuf[ 2* idx + 1] = 0;
 125              		.loc 1 261 5 is_stmt 1 view .LVU24
 126              		.loc 1 261 12 is_stmt 0 view .LVU25
 127 000e 5C00     		lsls	r4, r3, #1
 128              		.loc 1 261 9 view .LVU26
 129 0010 0134     		adds	r4, r4, #1
 130 0012 0C19     		adds	r4, r1, r4
 131              		.loc 1 261 23 view .LVU27
 132 0014 0025     		movs	r5, #0
 133 0016 2570     		strb	r5, [r4]
 248:Src/usbd_desc.c ****   {
 134              		.loc 1 248 34 is_stmt 1 discriminator 2 view .LVU28
 135 0018 0133     		adds	r3, r3, #1
 136              	.LVL8:
 248:Src/usbd_desc.c ****   {
 137              		.loc 1 248 34 is_stmt 0 discriminator 2 view .LVU29
 138 001a DBB2     		uxtb	r3, r3
 139              	.LVL9:
 140              	.L8:
 248:Src/usbd_desc.c ****   {
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 8


 141              		.loc 1 248 22 is_stmt 1 discriminator 1 view .LVU30
 142 001c 9342     		cmp	r3, r2
 143 001e 06D2     		bcs	.L12
 250:Src/usbd_desc.c ****     {
 144              		.loc 1 250 5 view .LVU31
 250:Src/usbd_desc.c ****     {
 145              		.loc 1 250 17 is_stmt 0 view .LVU32
 146 0020 040F     		lsrs	r4, r0, #28
 250:Src/usbd_desc.c ****     {
 147              		.loc 1 250 7 view .LVU33
 148 0022 092C     		cmp	r4, #9
 149 0024 EFD8     		bhi	.L9
 252:Src/usbd_desc.c ****     }
 150              		.loc 1 252 7 is_stmt 1 view .LVU34
 252:Src/usbd_desc.c ****     }
 151              		.loc 1 252 14 is_stmt 0 view .LVU35
 152 0026 5D00     		lsls	r5, r3, #1
 252:Src/usbd_desc.c ****     }
 153              		.loc 1 252 37 view .LVU36
 154 0028 3034     		adds	r4, r4, #48
 252:Src/usbd_desc.c ****     }
 155              		.loc 1 252 21 view .LVU37
 156 002a 4C55     		strb	r4, [r1, r5]
 157 002c EEE7     		b	.L10
 158              	.L12:
 262:Src/usbd_desc.c ****   }
 263:Src/usbd_desc.c **** }
 159              		.loc 1 263 1 view .LVU38
 160              		@ sp needed
 161 002e 30BD     		pop	{r4, r5, pc}
 162              		.cfi_endproc
 163              	.LFE45:
 165              		.section	.text.Get_SerialNum,"ax",%progbits
 166              		.align	1
 167              		.syntax unified
 168              		.code	16
 169              		.thumb_func
 171              	Get_SerialNum:
 172              	.LFB44:
 221:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 173              		.loc 1 221 1 is_stmt 1 view -0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177 0000 70B5     		push	{r4, r5, r6, lr}
 178              	.LCFI1:
 179              		.cfi_def_cfa_offset 16
 180              		.cfi_offset 4, -16
 181              		.cfi_offset 5, -12
 182              		.cfi_offset 6, -8
 183              		.cfi_offset 14, -4
 222:Src/usbd_desc.c **** 
 184              		.loc 1 222 3 view .LVU40
 224:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t*)DEVICE_ID2;
 185              		.loc 1 224 3 view .LVU41
 224:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t*)DEVICE_ID2;
 186              		.loc 1 224 17 is_stmt 0 view .LVU42
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 9


 187 0002 0B4B     		ldr	r3, .L16
 188 0004 1868     		ldr	r0, [r3]
 189              	.LVL10:
 225:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t*)DEVICE_ID3;
 190              		.loc 1 225 3 is_stmt 1 view .LVU43
 225:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t*)DEVICE_ID3;
 191              		.loc 1 225 17 is_stmt 0 view .LVU44
 192 0006 0B4B     		ldr	r3, .L16+4
 193 0008 1D68     		ldr	r5, [r3]
 194              	.LVL11:
 226:Src/usbd_desc.c **** 
 195              		.loc 1 226 3 is_stmt 1 view .LVU45
 226:Src/usbd_desc.c **** 
 196              		.loc 1 226 17 is_stmt 0 view .LVU46
 197 000a 0B4B     		ldr	r3, .L16+8
 198 000c 1B68     		ldr	r3, [r3]
 199              	.LVL12:
 228:Src/usbd_desc.c **** 
 200              		.loc 1 228 3 is_stmt 1 view .LVU47
 228:Src/usbd_desc.c **** 
 201              		.loc 1 228 17 is_stmt 0 view .LVU48
 202 000e C018     		adds	r0, r0, r3
 203              	.LVL13:
 230:Src/usbd_desc.c ****   {
 204              		.loc 1 230 3 is_stmt 1 view .LVU49
 230:Src/usbd_desc.c ****   {
 205              		.loc 1 230 6 is_stmt 0 view .LVU50
 206 0010 0028     		cmp	r0, #0
 207 0012 00D1     		bne	.L15
 208              	.LVL14:
 209              	.L13:
 235:Src/usbd_desc.c **** 
 210              		.loc 1 235 1 view .LVU51
 211              		@ sp needed
 212              	.LVL15:
 235:Src/usbd_desc.c **** 
 213              		.loc 1 235 1 view .LVU52
 214 0014 70BD     		pop	{r4, r5, r6, pc}
 215              	.LVL16:
 216              	.L15:
 232:Src/usbd_desc.c ****     IntToUnicode (deviceserial1, &USBD_StringSerial[18] ,4);
 217              		.loc 1 232 5 is_stmt 1 view .LVU53
 218 0016 094C     		ldr	r4, .L16+12
 219 0018 0822     		movs	r2, #8
 220 001a 2100     		movs	r1, r4
 221 001c FFF7FEFF 		bl	IntToUnicode
 222              	.LVL17:
 233:Src/usbd_desc.c ****   }
 223              		.loc 1 233 5 view .LVU54
 224 0020 2100     		movs	r1, r4
 225 0022 1031     		adds	r1, r1, #16
 226 0024 0422     		movs	r2, #4
 227 0026 2800     		movs	r0, r5
 228 0028 FFF7FEFF 		bl	IntToUnicode
 229              	.LVL18:
 235:Src/usbd_desc.c **** 
 230              		.loc 1 235 1 is_stmt 0 view .LVU55
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 10


 231 002c F2E7     		b	.L13
 232              	.L17:
 233 002e C046     		.align	2
 234              	.L16:
 235 0030 ACF7FF1F 		.word	536868780
 236 0034 B0F7FF1F 		.word	536868784
 237 0038 B4F7FF1F 		.word	536868788
 238 003c 02000000 		.word	USBD_StringSerial+2
 239              		.cfi_endproc
 240              	.LFE44:
 242              		.section	.text.USBD_VCP_SerialStrDescriptor,"ax",%progbits
 243              		.align	1
 244              		.global	USBD_VCP_SerialStrDescriptor
 245              		.syntax unified
 246              		.code	16
 247              		.thumb_func
 249              	USBD_VCP_SerialStrDescriptor:
 250              	.LVL19:
 251              	.LFB41:
 182:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 252              		.loc 1 182 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 182:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 256              		.loc 1 182 1 is_stmt 0 view .LVU57
 257 0000 10B5     		push	{r4, lr}
 258              	.LCFI2:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 183:Src/usbd_desc.c **** 
 262              		.loc 1 183 3 is_stmt 1 view .LVU58
 183:Src/usbd_desc.c **** 
 263              		.loc 1 183 11 is_stmt 0 view .LVU59
 264 0002 1A23     		movs	r3, #26
 265 0004 0B80     		strh	r3, [r1]
 186:Src/usbd_desc.c **** 
 266              		.loc 1 186 3 is_stmt 1 view .LVU60
 267 0006 FFF7FEFF 		bl	Get_SerialNum
 268              	.LVL20:
 188:Src/usbd_desc.c **** }
 269              		.loc 1 188 3 view .LVU61
 188:Src/usbd_desc.c **** }
 270              		.loc 1 188 10 is_stmt 0 discriminator 1 view .LVU62
 271 000a 0148     		ldr	r0, .L19
 189:Src/usbd_desc.c **** 
 272              		.loc 1 189 1 view .LVU63
 273              		@ sp needed
 274 000c 10BD     		pop	{r4, pc}
 275              	.L20:
 276 000e C046     		.align	2
 277              	.L19:
 278 0010 00000000 		.word	USBD_StringSerial
 279              		.cfi_endproc
 280              	.LFE41:
 282              		.section	.rodata.USBD_VCP_ProductStrDescriptor.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 11


 283              		.align	2
 284              	.LC6:
 285 0000 63686972 		.ascii	"chirp :3\000"
 285      70203A33 
 285      00
 286              		.section	.text.USBD_VCP_ProductStrDescriptor,"ax",%progbits
 287              		.align	1
 288              		.global	USBD_VCP_ProductStrDescriptor
 289              		.syntax unified
 290              		.code	16
 291              		.thumb_func
 293              	USBD_VCP_ProductStrDescriptor:
 294              	.LVL21:
 295              	.LFB39:
 158:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_PRODUCT_FS_STRING, USBD_StrDesc, length);
 296              		.loc 1 158 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 158:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_PRODUCT_FS_STRING, USBD_StrDesc, length);
 300              		.loc 1 158 1 is_stmt 0 view .LVU65
 301 0000 10B5     		push	{r4, lr}
 302              	.LCFI3:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 4, -8
 305              		.cfi_offset 14, -4
 306 0002 0A00     		movs	r2, r1
 159:Src/usbd_desc.c ****   return USBD_StrDesc;
 307              		.loc 1 159 3 is_stmt 1 view .LVU66
 308 0004 034C     		ldr	r4, .L22
 309 0006 0448     		ldr	r0, .L22+4
 310              	.LVL22:
 159:Src/usbd_desc.c ****   return USBD_StrDesc;
 311              		.loc 1 159 3 is_stmt 0 view .LVU67
 312 0008 2100     		movs	r1, r4
 313              	.LVL23:
 159:Src/usbd_desc.c ****   return USBD_StrDesc;
 314              		.loc 1 159 3 view .LVU68
 315 000a FFF7FEFF 		bl	USBD_GetString
 316              	.LVL24:
 160:Src/usbd_desc.c **** }
 317              		.loc 1 160 3 is_stmt 1 view .LVU69
 161:Src/usbd_desc.c **** 
 318              		.loc 1 161 1 is_stmt 0 view .LVU70
 319 000e 2000     		movs	r0, r4
 320              		@ sp needed
 321 0010 10BD     		pop	{r4, pc}
 322              	.L23:
 323 0012 C046     		.align	2
 324              	.L22:
 325 0014 00000000 		.word	USBD_StrDesc
 326 0018 00000000 		.word	.LC6
 327              		.cfi_endproc
 328              	.LFE39:
 330              		.section	.rodata.USBD_VCP_ManufacturerStrDescriptor.str1.4,"aMS",%progbits,1
 331              		.align	2
 332              	.LC9:
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 12


 333 0000 4F747465 		.ascii	"Otter-Iron\000"
 333      722D4972 
 333      6F6E00
 334              		.section	.text.USBD_VCP_ManufacturerStrDescriptor,"ax",%progbits
 335              		.align	1
 336              		.global	USBD_VCP_ManufacturerStrDescriptor
 337              		.syntax unified
 338              		.code	16
 339              		.thumb_func
 341              	USBD_VCP_ManufacturerStrDescriptor:
 342              	.LVL25:
 343              	.LFB40:
 170:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 344              		.loc 1 170 1 is_stmt 1 view -0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 170:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 348              		.loc 1 170 1 is_stmt 0 view .LVU72
 349 0000 10B5     		push	{r4, lr}
 350              	.LCFI4:
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 4, -8
 353              		.cfi_offset 14, -4
 354 0002 0A00     		movs	r2, r1
 171:Src/usbd_desc.c ****   return USBD_StrDesc;
 355              		.loc 1 171 3 is_stmt 1 view .LVU73
 356 0004 034C     		ldr	r4, .L25
 357 0006 0448     		ldr	r0, .L25+4
 358              	.LVL26:
 171:Src/usbd_desc.c ****   return USBD_StrDesc;
 359              		.loc 1 171 3 is_stmt 0 view .LVU74
 360 0008 2100     		movs	r1, r4
 361              	.LVL27:
 171:Src/usbd_desc.c ****   return USBD_StrDesc;
 362              		.loc 1 171 3 view .LVU75
 363 000a FFF7FEFF 		bl	USBD_GetString
 364              	.LVL28:
 172:Src/usbd_desc.c **** }
 365              		.loc 1 172 3 is_stmt 1 view .LVU76
 173:Src/usbd_desc.c **** 
 366              		.loc 1 173 1 is_stmt 0 view .LVU77
 367 000e 2000     		movs	r0, r4
 368              		@ sp needed
 369 0010 10BD     		pop	{r4, pc}
 370              	.L26:
 371 0012 C046     		.align	2
 372              	.L25:
 373 0014 00000000 		.word	USBD_StrDesc
 374 0018 00000000 		.word	.LC9
 375              		.cfi_endproc
 376              	.LFE40:
 378              		.section	.rodata.USBD_VCP_ConfigStrDescriptor.str1.4,"aMS",%progbits,1
 379              		.align	2
 380              	.LC12:
 381 0000 6D617500 		.ascii	"mau\000"
 382              		.section	.text.USBD_VCP_ConfigStrDescriptor,"ax",%progbits
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 13


 383              		.align	1
 384              		.global	USBD_VCP_ConfigStrDescriptor
 385              		.syntax unified
 386              		.code	16
 387              		.thumb_func
 389              	USBD_VCP_ConfigStrDescriptor:
 390              	.LVL29:
 391              	.LFB42:
 198:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_CONFIGURATION_FS_STRING, USBD_StrDesc, length);
 392              		.loc 1 198 1 is_stmt 1 view -0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 198:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_CONFIGURATION_FS_STRING, USBD_StrDesc, length);
 396              		.loc 1 198 1 is_stmt 0 view .LVU79
 397 0000 10B5     		push	{r4, lr}
 398              	.LCFI5:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 4, -8
 401              		.cfi_offset 14, -4
 402 0002 0A00     		movs	r2, r1
 199:Src/usbd_desc.c ****   return USBD_StrDesc;
 403              		.loc 1 199 3 is_stmt 1 view .LVU80
 404 0004 034C     		ldr	r4, .L28
 405 0006 0448     		ldr	r0, .L28+4
 406              	.LVL30:
 199:Src/usbd_desc.c ****   return USBD_StrDesc;
 407              		.loc 1 199 3 is_stmt 0 view .LVU81
 408 0008 2100     		movs	r1, r4
 409              	.LVL31:
 199:Src/usbd_desc.c ****   return USBD_StrDesc;
 410              		.loc 1 199 3 view .LVU82
 411 000a FFF7FEFF 		bl	USBD_GetString
 412              	.LVL32:
 200:Src/usbd_desc.c **** }
 413              		.loc 1 200 3 is_stmt 1 view .LVU83
 201:Src/usbd_desc.c **** 
 414              		.loc 1 201 1 is_stmt 0 view .LVU84
 415 000e 2000     		movs	r0, r4
 416              		@ sp needed
 417 0010 10BD     		pop	{r4, pc}
 418              	.L29:
 419 0012 C046     		.align	2
 420              	.L28:
 421 0014 00000000 		.word	USBD_StrDesc
 422 0018 00000000 		.word	.LC12
 423              		.cfi_endproc
 424              	.LFE42:
 426              		.section	.rodata.USBD_VCP_InterfaceStrDescriptor.str1.4,"aMS",%progbits,1
 427              		.align	2
 428              	.LC15:
 429 0000 3A6F00   		.ascii	":o\000"
 430              		.section	.text.USBD_VCP_InterfaceStrDescriptor,"ax",%progbits
 431              		.align	1
 432              		.global	USBD_VCP_InterfaceStrDescriptor
 433              		.syntax unified
 434              		.code	16
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 14


 435              		.thumb_func
 437              	USBD_VCP_InterfaceStrDescriptor:
 438              	.LVL33:
 439              	.LFB43:
 210:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_INTERFACE_FS_STRING, USBD_StrDesc, length);
 440              		.loc 1 210 1 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 210:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_INTERFACE_FS_STRING, USBD_StrDesc, length);
 444              		.loc 1 210 1 is_stmt 0 view .LVU86
 445 0000 10B5     		push	{r4, lr}
 446              	.LCFI6:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 4, -8
 449              		.cfi_offset 14, -4
 450 0002 0A00     		movs	r2, r1
 211:Src/usbd_desc.c ****   return USBD_StrDesc;
 451              		.loc 1 211 3 is_stmt 1 view .LVU87
 452 0004 034C     		ldr	r4, .L31
 453 0006 0448     		ldr	r0, .L31+4
 454              	.LVL34:
 211:Src/usbd_desc.c ****   return USBD_StrDesc;
 455              		.loc 1 211 3 is_stmt 0 view .LVU88
 456 0008 2100     		movs	r1, r4
 457              	.LVL35:
 211:Src/usbd_desc.c ****   return USBD_StrDesc;
 458              		.loc 1 211 3 view .LVU89
 459 000a FFF7FEFF 		bl	USBD_GetString
 460              	.LVL36:
 212:Src/usbd_desc.c **** }
 461              		.loc 1 212 3 is_stmt 1 view .LVU90
 213:Src/usbd_desc.c **** 
 462              		.loc 1 213 1 is_stmt 0 view .LVU91
 463 000e 2000     		movs	r0, r4
 464              		@ sp needed
 465 0010 10BD     		pop	{r4, pc}
 466              	.L32:
 467 0012 C046     		.align	2
 468              	.L31:
 469 0014 00000000 		.word	USBD_StrDesc
 470 0018 00000000 		.word	.LC15
 471              		.cfi_endproc
 472              	.LFE43:
 474              		.global	USBD_StrDesc
 475              		.section	.bss.USBD_StrDesc,"aw",%nobits
 476              		.align	2
 479              	USBD_StrDesc:
 480 0000 00000000 		.space	256
 480      00000000 
 480      00000000 
 480      00000000 
 480      00000000 
 481              		.global	USBD_StringSerial
 482              		.section	.data.USBD_StringSerial,"aw"
 483              		.align	2
 486              	USBD_StringSerial:
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 15


 487 0000 1A0300   		.ascii	"\032\003\000"
 488 0003 00000000 		.space	23
 488      00000000 
 488      00000000 
 488      00000000 
 488      00000000 
 489              		.global	USBD_LangIDDesc
 490              		.section	.rodata.USBD_LangIDDesc,"a"
 491              		.align	2
 494              	USBD_LangIDDesc:
 495 0000 04030904 		.ascii	"\004\003\011\004"
 496              		.global	hUSBDDeviceDesc
 497              		.section	.rodata.hUSBDDeviceDesc,"a"
 498              		.align	2
 501              	hUSBDDeviceDesc:
 502 0000 12010002 		.ascii	"\022\001\000\002\000\000\000@\203\004@W\000\002\001"
 502      00000040 
 502      83044057 
 502      000201
 503 000f 020301   		.ascii	"\002\003\001"
 504              		.global	VCP_Desc
 505              		.section	.data.VCP_Desc,"aw"
 506              		.align	2
 509              	VCP_Desc:
 510 0000 00000000 		.word	USBD_VCP_DeviceDescriptor
 511 0004 00000000 		.word	USBD_VCP_LangIDStrDescriptor
 512 0008 00000000 		.word	USBD_VCP_ManufacturerStrDescriptor
 513 000c 00000000 		.word	USBD_VCP_ProductStrDescriptor
 514 0010 00000000 		.word	USBD_VCP_SerialStrDescriptor
 515 0014 00000000 		.word	USBD_VCP_ConfigStrDescriptor
 516 0018 00000000 		.word	USBD_VCP_InterfaceStrDescriptor
 517              		.text
 518              	.Letext0:
 519              		.file 2 "C:/SysGCC/arm-eabi/arm-none-eabi/include/machine/_default_types.h"
 520              		.file 3 "C:/SysGCC/arm-eabi/arm-none-eabi/include/sys/_stdint.h"
 521              		.file 4 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 522              		.file 5 "Inc/usbd_desc.h"
 523              		.file 6 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 usbd_desc.c
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:19     .text.USBD_VCP_DeviceDescriptor:00000000 $t
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:25     .text.USBD_VCP_DeviceDescriptor:00000000 USBD_VCP_DeviceDescriptor
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:47     .text.USBD_VCP_DeviceDescriptor:00000008 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:501    .rodata.hUSBDDeviceDesc:00000000 hUSBDDeviceDesc
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:52     .text.USBD_VCP_LangIDStrDescriptor:00000000 $t
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:58     .text.USBD_VCP_LangIDStrDescriptor:00000000 USBD_VCP_LangIDStrDescriptor
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:80     .text.USBD_VCP_LangIDStrDescriptor:00000008 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:494    .rodata.USBD_LangIDDesc:00000000 USBD_LangIDDesc
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:85     .text.IntToUnicode:00000000 $t
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:90     .text.IntToUnicode:00000000 IntToUnicode
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:166    .text.Get_SerialNum:00000000 $t
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:171    .text.Get_SerialNum:00000000 Get_SerialNum
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:235    .text.Get_SerialNum:00000030 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:486    .data.USBD_StringSerial:00000000 USBD_StringSerial
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:243    .text.USBD_VCP_SerialStrDescriptor:00000000 $t
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:249    .text.USBD_VCP_SerialStrDescriptor:00000000 USBD_VCP_SerialStrDescriptor
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:278    .text.USBD_VCP_SerialStrDescriptor:00000010 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:283    .rodata.USBD_VCP_ProductStrDescriptor.str1.4:00000000 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:287    .text.USBD_VCP_ProductStrDescriptor:00000000 $t
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:293    .text.USBD_VCP_ProductStrDescriptor:00000000 USBD_VCP_ProductStrDescriptor
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:325    .text.USBD_VCP_ProductStrDescriptor:00000014 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:479    .bss.USBD_StrDesc:00000000 USBD_StrDesc
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:331    .rodata.USBD_VCP_ManufacturerStrDescriptor.str1.4:00000000 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:335    .text.USBD_VCP_ManufacturerStrDescriptor:00000000 $t
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:341    .text.USBD_VCP_ManufacturerStrDescriptor:00000000 USBD_VCP_ManufacturerStrDescriptor
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:373    .text.USBD_VCP_ManufacturerStrDescriptor:00000014 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:379    .rodata.USBD_VCP_ConfigStrDescriptor.str1.4:00000000 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:383    .text.USBD_VCP_ConfigStrDescriptor:00000000 $t
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:389    .text.USBD_VCP_ConfigStrDescriptor:00000000 USBD_VCP_ConfigStrDescriptor
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:421    .text.USBD_VCP_ConfigStrDescriptor:00000014 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:427    .rodata.USBD_VCP_InterfaceStrDescriptor.str1.4:00000000 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:431    .text.USBD_VCP_InterfaceStrDescriptor:00000000 $t
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:437    .text.USBD_VCP_InterfaceStrDescriptor:00000000 USBD_VCP_InterfaceStrDescriptor
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:469    .text.USBD_VCP_InterfaceStrDescriptor:00000014 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:476    .bss.USBD_StrDesc:00000000 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:483    .data.USBD_StringSerial:00000000 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:491    .rodata.USBD_LangIDDesc:00000000 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:498    .rodata.hUSBDDeviceDesc:00000000 $d
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:509    .data.VCP_Desc:00000000 VCP_Desc
C:\Users\0.0\AppData\Local\Temp\cc6fHraK.s:506    .data.VCP_Desc:00000000 $d

UNDEFINED SYMBOLS
USBD_GetString
